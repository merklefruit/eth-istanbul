{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Safe",
          "name": "safe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract ISafeSignatureVerifier",
          "name": "verifier",
          "type": "address"
        }
      ],
      "name": "AddedDomainVerifier",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "AddedOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Safe",
          "name": "safe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "method",
          "type": "bytes32"
        }
      ],
      "name": "AddedSafeMethod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "approvedHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ApproveHash",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Safe",
          "name": "safe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract ISafeSignatureVerifier",
          "name": "oldVerifier",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ISafeSignatureVerifier",
          "name": "newVerifier",
          "type": "address"
        }
      ],
      "name": "ChangedDomainVerifier",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "handler",
          "type": "address"
        }
      ],
      "name": "ChangedFallbackHandler",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "guard",
          "type": "address"
        }
      ],
      "name": "ChangedGuard",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Safe",
          "name": "safe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "oldMethod",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newMethod",
          "type": "bytes32"
        }
      ],
      "name": "ChangedSafeMethod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        }
      ],
      "name": "ChangedThreshold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "DisabledModule",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "EnabledModule",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        }
      ],
      "name": "ExecutionFailure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "ExecutionFromModuleFailure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "ExecutionFromModuleSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        }
      ],
      "name": "ExecutionSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "GenericEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Safe",
          "name": "safe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        }
      ],
      "name": "RemovedDomainVerifier",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "RemovedOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Safe",
          "name": "safe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "RemovedSafeMethod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SafeReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "owners",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "initializer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "fallbackHandler",
          "type": "address"
        }
      ],
      "name": "SafeSetup",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        }
      ],
      "name": "SignMsg",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ERC20s",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "addOwnerWithThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hashToApprove",
          "type": "bytes32"
        }
      ],
      "name": "approveHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "approvedHashes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "changeThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signatures",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "requiredSignatures",
          "type": "uint256"
        }
      ],
      "name": "checkNSignatures",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signatures",
          "type": "bytes"
        }
      ],
      "name": "checkSignatures",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "prevModule",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "disableModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Safe",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "domainVerifiers",
      "outputs": [
        {
          "internalType": "contract ISafeSignatureVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "enableModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "safeTxGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "gasToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "refundReceiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "encodeTransactionData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "safeTxGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "gasToken",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "refundReceiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "signatures",
          "type": "bytes"
        }
      ],
      "name": "execTransaction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        }
      ],
      "name": "execTransactionFromModule",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        }
      ],
      "name": "execTransactionFromModuleReturnData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "returnData",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "start",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pageSize",
          "type": "uint256"
        }
      ],
      "name": "getModulesPaginated",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "array",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "next",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "getStorageAt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "safeTxGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "gasToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "refundReceiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "getTransactionHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "isModuleEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magic",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "removeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Safe",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "name": "safeMethods",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        },
        {
          "internalType": "contract ISafeSignatureVerifier",
          "name": "newVerifier",
          "type": "address"
        }
      ],
      "name": "setDomainVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "handler",
          "type": "address"
        }
      ],
      "name": "setFallbackHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guard",
          "type": "address"
        }
      ],
      "name": "setGuard",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_threshold",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "fallbackHandler",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "paymentReceiver",
          "type": "address"
        }
      ],
      "name": "setup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "signedMessages",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "targetContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "calldataPayload",
          "type": "bytes"
        }
      ],
      "name": "simulateAndRevert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "swapOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6101806040527302abbdbaaa7b1bb64b5c878f7ac17f8dda16953260809081527391056d4a53e1faa1a84306d4deaec71085394bc860a05273d87ba7a50b2e7e660f678a895e4b72e7cb4ccd9c60c05273dc31ee1784292379fbb2964b3b9c4124d8f89c6060e05273e4e81fa6b16327d4b78cfeb83aade04ba7075165610100527370cba46d2e933030e2f274ae58c951c800548aef61012052739e32c0eff886b6ccae99350fd5e7002dced55f156101405273b4fbf271143f4fbf7b91a5ded31805e42b2208d661016052620000db90600b906008620003b6565b50348015620000e957600080fd5b50604051620041db380380620041db8339810160408190526200010c9162000437565b60016004819055604080518281528082019091526000916020808301908036833701905050905081816000815181106200014a576200014a62000469565b6001600160a01b03909216602092830291909101909101526000600455620001748160016200017c565b50506200047f565b60045415620001ba5760405162461bcd60e51b8152602060048201526005602482015264047533230360dc1b60448201526064015b60405180910390fd5b8151811115620001f55760405162461bcd60e51b8152602060048201526005602482015264475332303160d81b6044820152606401620001b1565b6001811015620002305760405162461bcd60e51b815260206004820152600560248201526423a999181960d91b6044820152606401620001b1565b600160005b83518110156200038357600084828151811062000256576200025662000469565b6020026020010151905060006001600160a01b0316816001600160a01b0316141580156200028e57506001600160a01b038116600114155b8015620002a457506001600160a01b0381163014155b8015620002c35750806001600160a01b0316836001600160a01b031614155b620002f95760405162461bcd60e51b8152602060048201526005602482015264475332303360d81b6044820152606401620001b1565b6001600160a01b0381811660009081526002602052604090205416156200034b5760405162461bcd60e51b815260206004820152600560248201526411d4cc8c0d60da1b6044820152606401620001b1565b6001600160a01b03928316600090815260026020526040902080546001600160a01b0319169382169390931790925560010162000235565b506001600160a01b0316600090815260026020526040902080546001600160a01b03191660011790559051600355600455565b8280548282559060005260206000209081019282156200040e579160200282015b828111156200040e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620003d7565b506200041c92915062000420565b5090565b5b808211156200041c576000815560010162000421565b6000602082840312156200044a57600080fd5b81516001600160a01b03811681146200046257600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b613d4c806200048f6000396000f3fe6080604052600436106102135760003560e01c80637d83297411610118578063e009cfde116100a0578063e86637db1161006f578063e86637db1461073a578063f08a03231461075a578063f698da251461077a578063f8dc5dd91461078f578063ffa1ad74146107af5761024f565b8063e009cfde146106c5578063e19a9dd9146106e5578063e318b52b14610705578063e75235b8146107255761024f565b8063b4faba09116100e7578063b4faba0914610617578063b63e800d14610637578063cc2f845214610657578063d4d9bdcd14610685578063d8d11f78146106a55761024f565b80637d83297414610587578063934f3a11146105bf578063a0e67e2b146105df578063affed0e0146106015761024f565b80633408e4701161019b5780635624b25b1161016a5780635624b25b146104da5780635ae6bd3714610507578063610b592514610534578063694e80c3146105545780636a761202146105745761024f565b80633408e47014610438578063468721a71461044b57806351cad5ee1461046b5780635229073f146104ac5761024f565b806318ec91b9116101e257806318ec91b91461037b5780632986e054146103b35780632d9ad53d146103c85780632f54bf6e146103f85780633365582c146104185761024f565b80630a3fe054146102b55780630d582f131461030057806312fb68e0146103225780631626ba7e146103425761024f565b3661024f5760405134815233907f3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d9060200160405180910390a2005b34801561025b57600080fd5b507f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d580548061028657005b36600080373360601b365260008060143601600080855af190503d6000803e806102af573d6000fd5b503d6000f35b3480156102c157600080fd5b506102ed6102d0366004612fdb565b600960209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561030c57600080fd5b5061032061031b366004613024565b6107e0565b005b34801561032e57600080fd5b5061032061033d3660046130f2565b610938565b34801561034e57600080fd5b5061036261035d3660046131ae565b610dd7565b6040516001600160e01b031990911681526020016102f7565b34801561038757600080fd5b5061039b6103963660046131f9565b610f82565b6040516001600160a01b0390911681526020016102f7565b3480156103bf57600080fd5b50610320610fac565b3480156103d457600080fd5b506103e86103e3366004613212565b6111d2565b60405190151581526020016102f7565b34801561040457600080fd5b506103e8610413366004613212565b61120d565b34801561042457600080fd5b5061032061043336600461322f565b611245565b34801561044457600080fd5b50466102ed565b34801561045757600080fd5b506103e8610466366004613263565b611441565b34801561047757600080fd5b5061039b610486366004613024565b600a6020908152600092835260408084209091529082529020546001600160a01b031681565b3480156104b857600080fd5b506104cc6104c7366004613263565b61151a565b6040516102f792919061331c565b3480156104e657600080fd5b506104fa6104f5366004613337565b611550565b6040516102f79190613359565b34801561051357600080fd5b506102ed6105223660046131f9565b60076020526000908152604090205481565b34801561054057600080fd5b5061032061054f366004613212565b6115cb565b34801561056057600080fd5b5061032061056f3660046131f9565b611704565b6103e861058236600461336c565b6117a2565b34801561059357600080fd5b506102ed6105a2366004613024565b600860209081526000928352604080842090915290825290205481565b3480156105cb57600080fd5b506103206105da366004613444565b611aed565b3480156105eb57600080fd5b506105f4611b31565b6040516102f791906134f5565b34801561060d57600080fd5b506102ed60055481565b34801561062357600080fd5b50610320610632366004613508565b611c21565b34801561064357600080fd5b50610320610652366004613557565b611c44565b34801561066357600080fd5b50610677610672366004613024565b611d46565b6040516102f792919061364b565b34801561069157600080fd5b506103206106a03660046131f9565b611f01565b3480156106b157600080fd5b506102ed6106c0366004613675565b611f96565b3480156106d157600080fd5b506103206106e0366004613735565b611fc3565b3480156106f157600080fd5b50610320610700366004613212565b6120e5565b34801561071157600080fd5b50610320610720366004613763565b6121fb565b34801561073157600080fd5b506004546102ed565b34801561074657600080fd5b506104fa610755366004613675565b6123d6565b34801561076657600080fd5b50610320610775366004613212565b6124af565b34801561078657600080fd5b506102ed6124f7565b34801561079b57600080fd5b506103206107aa3660046137ae565b61254e565b3480156107bb57600080fd5b506104fa60405180604001604052806005815260200164312e342e3160d81b81525081565b6107e86126b9565b6001600160a01b0382161580159061080a57506001600160a01b038216600114155b801561081f57506001600160a01b0382163014155b6108445760405162461bcd60e51b815260040161083b906137ef565b60405180910390fd5b6001600160a01b03828116600090815260026020526040902054161561087c5760405162461bcd60e51b815260040161083b9061380e565b60026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e080546001600160a01b038481166000818152604081208054939094166001600160a01b0319938416179093556001835283549091161790915560038054916108e983613843565b90915550506040516001600160a01b038316907f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2690600090a280600454146109345761093481611704565b5050565b6109438160416126f2565b8251101561097b5760405162461bcd60e51b8152602060048201526005602482015264047533032360dc1b604482015260640161083b565b6000808060008060005b86811015610dcb576041818102890160208101516040820151919092015160ff16955090935091506000849003610b9357885160208a01208a146109f35760405162461bcd60e51b8152602060048201526005602482015264475330323760d81b604482015260640161083b565b9193508391610a038760416126f2565b821015610a3a5760405162461bcd60e51b8152602060048201526005602482015264475330323160d81b604482015260640161083b565b8751610a47836020612727565b1115610a7d5760405162461bcd60e51b815260206004820152600560248201526423a998191960d91b604482015260640161083b565b602082890181015189519091610aa0908390610a9a908790612727565b90612727565b1115610ad65760405162461bcd60e51b8152602060048201526005602482015264475330323360d81b604482015260640161083b565b6040516320c13b0b60e01b8082528a8501602001916001600160a01b038916906320c13b0b90610b0c908f90869060040161385c565b602060405180830381865afa158015610b29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4d9190613881565b6001600160e01b03191614610b8c5760405162461bcd60e51b815260206004820152600560248201526411d4cc0c8d60da1b604482015260640161083b565b5050610d3a565b8360ff16600103610c15579193508391336001600160a01b0384161480610bdc57506001600160a01b03851660009081526008602090815260408083208d845290915290205415155b610c105760405162461bcd60e51b8152602060048201526005602482015264475330323560d81b604482015260640161083b565b610d3a565b601e8460ff161115610cda576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018b9052600190605c0160405160208183030381529060405280519060200120600486610c7a919061389e565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610cc9573d6000803e3d6000fd5b505050602060405103519450610d3a565b6040805160008152602081018083528c905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610d2d573d6000803e3d6000fd5b5050506020604051035194505b856001600160a01b0316856001600160a01b0316118015610d7457506001600160a01b038581166000908152600260205260409020541615155b8015610d8a57506001600160a01b038516600114155b610dbe5760405162461bcd60e51b815260206004820152600560248201526423a998191b60d91b604482015260640161083b565b9394508493600101610985565b50505050505050505050565b6000806000610de4612743565b909250905060048410610f35576001600160e01b0319853516635fd7e97d60e01b81148015610e14575060448510155b15610f3357600080610e2a60446004898b6138b7565b810190610e379190613337565b6001600160a01b038088166000908152600a60209081526040808320868452909152902054929450909250168015610f2f57600080610e798a6004818e6138b7565b810190610e8691906138e1565b9350935050508b610e98868685612754565b8051906020012003610f2c57826001600160a01b03166353f00b1489898f898988886040518863ffffffff1660e01b8152600401610edc9796959493929190613957565b602060405180830381865afa158015610ef9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1d9190613881565b98505050505050505050610f7b565b50505b5050505b505b610f76828787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506127ce92505050565b925050505b9392505050565b600b8181548110610f9257600080fd5b6000918252602090912001546001600160a01b0316905081565b6000610fb6611b31565b6040805160008082526020820190925291925090610fe7732f55e8b20d0b9fefa187aa7d00b6cbe563605bf56129cd565b610ff18282612a31565b82600081518110611004576110046139b4565b60200260200101516001600160a01b03167f141df868a6331af528e38c83b7aa03edc19be66e37ae67f9285bf4f8e3c6a1a884600185732f55e8b20d0b9fefa187aa7d00b6cbe563605bf560405161105f94939291906139ca565b60405180910390a2306000818152600a602090815260408083207ffb378b35457022ecc5709ae5dafad9393c1387ae6d8ce24913a0c969074c07fb80855292529182902080546001600160a01b03191673fdafc9d1902f4e0b84f65f49f244b32b31013b7490811790915591517fae938181ed4437a46f12ead84e69947e6d84a1113a49d9c0075d8d35c6ce273c926111089282526001600160a01b0316602082015260400190565b60405180910390a260005b600b548110156111cc57600b8181548110611130576111306139b4565b60009182526020909120015460405163095ea7b360e01b815273fdafc9d1902f4e0b84f65f49f244b32b31013b74600482015260001960248201526001600160a01b039091169063095ea7b3906044016020604051808303816000875af115801561119f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c39190613a03565b50600101611113565b50505050565b600060016001600160a01b0383161480159061120757506001600160a01b038281166000908152600160205260409020541615155b92915050565b60006001600160a01b0382166001148015906112075750506001600160a01b0390811660009081526002602052604090205416151590565b3361124e612b63565b6001600160a01b0316146112a45760405162461bcd60e51b815260206004820152601e60248201527f6f6e6c7920736166652063616e2063616c6c2074686973206d6574686f640000604482015260640161083b565b60006112ae612b63565b6001600160a01b038082166000908152600a602090815260408083208884529091529020549192509081169083161580156112f157506001600160a01b03811615155b1561135e576001600160a01b0382166000818152600a6020908152604080832088845282529182902080546001600160a01b031916905590518681527ff1984d1a49cc75dcbf01cd175870cb7eb9a4fd87b538a87007e4dbb0399b61a991015b60405180910390a26111cc565b6001600160a01b038281166000908152600a60209081526040808320888452909152902080546001600160a01b03191685831617905581166113dc57604080518581526001600160a01b0385811660208301528416917fae938181ed4437a46f12ead84e69947e6d84a1113a49d9c0075d8d35c6ce273c9101611351565b816001600160a01b03167f06341ac2f62eb79165de8c8b54ab89a8825b12746c2b98e01dff1007837d2ba8858386604051611433939291909283526001600160a01b03918216602084015216604082015260600190565b60405180910390a250505050565b60003360011480159061146b5750336000908152600160205260409020546001600160a01b031615155b61149f5760405162461bcd60e51b815260206004820152600560248201526411d4cc4c0d60da1b604482015260640161083b565b6114ae85858585600019612bc3565b905080156114e65760405133907f6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb890600090a2611512565b60405133907facd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd37590600090a25b949350505050565b6000606061152a86868686611441565b915060405160203d0181016040523d81523d6000602083013e8091505094509492505050565b6060600061155f836020613a25565b6001600160401b0381111561157657611576613050565b6040519080825280601f01601f1916602001820160405280156115a0576020820181803683370190505b50905060005b838110156115c357848101546020808302840101526001016115a6565b509392505050565b6115d36126b9565b6001600160a01b038116158015906115f557506001600160a01b038116600114155b6116295760405162461bcd60e51b8152602060048201526005602482015264475331303160d81b604482015260640161083b565b6001600160a01b0381811660009081526001602052604090205416156116795760405162461bcd60e51b815260206004820152600560248201526423a998981960d91b604482015260640161083b565b600160208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f80546001600160a01b03848116600081815260408082208054949095166001600160a01b031994851617909455948552835490911681179092555190917fecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f844091a250565b61170c6126b9565b60035481111561172e5760405162461bcd60e51b815260040161083b90613a3c565b60018110156117675760405162461bcd60e51b815260206004820152600560248201526423a999181960d91b604482015260640161083b565b60048190556040518181527f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c939060200160405180910390a150565b60008060006117bc8e8e8e8e8e8e8e8e8e8e6005546123d6565b6005805491925060006117ce83613843565b90915550508051602082012091506117e7828286611aed565b5060006118127f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c85490565b90506001600160a01b0381161561189857806001600160a01b03166375f0bb528f8f8f8f8f8f8f8f8f8f8f336040518d63ffffffff1660e01b81526004016118659c9b9a99989796959493929190613a93565b600060405180830381600087803b15801561187f57600080fd5b505af1158015611893573d6000803e3d6000fd5b505050505b6118c46118a78a6109c4613b58565b603f6118b48c6040613a25565b6118be9190613b6b565b90612c0a565b6118d0906101f4613b58565b5a10156119075760405162461bcd60e51b8152602060048201526005602482015264047533031360dc1b604482015260640161083b565b60005a90506119788f8f8f8f8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508e8c600014611965578e612bc3565b6109c45a6119739190613b8d565b612bc3565b93506119855a8290612c21565b9050838061199257508915155b8061199c57508715155b6119d05760405162461bcd60e51b8152602060048201526005602482015264475330313360d81b604482015260640161083b565b600088156119e8576119e5828b8b8b8b612c3c565b90505b8415611a2d57837f442e715f626346e8c54381002da614f62bee8d27386535b2521ec8540898556e82604051611a2091815260200190565b60405180910390a2611a68565b837f23428b18acfb3ea64b08dc0c1d296ea9c09702c09083ca5272e64d115b687d2382604051611a5f91815260200190565b60405180910390a25b50506001600160a01b03811615611adc57604051631264e26d60e31b81526004810183905283151560248201526001600160a01b03821690639327136890604401600060405180830381600087803b158015611ac357600080fd5b505af1158015611ad7573d6000803e3d6000fd5b505050505b50509b9a5050505050505050505050565b60045480611b255760405162461bcd60e51b8152602060048201526005602482015264475330303160d81b604482015260640161083b565b6111cc84848484610938565b606060006003546001600160401b03811115611b4f57611b4f613050565b604051908082528060200260200182016040528015611b78578160200160208202803683370190505b506001600090815260026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e054919250906001600160a01b03165b6001600160a01b038116600114611c195780838381518110611bd957611bd96139b4565b6001600160a01b03928316602091820292909201810191909152918116600090815260029092526040909120541681611c1181613843565b925050611bb5565b509092915050565b600080825160208401855af480600052503d6020523d600060403e60403d016000fd5b611c828a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508c9250612d42915050565b6001600160a01b03841615611c9a57611c9a846129cd565b611cda8787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612a3192505050565b8115611cf157611cef82600060018685612c3c565b505b336001600160a01b03167f141df868a6331af528e38c83b7aa03edc19be66e37ae67f9285bf4f8e3c6a1a88b8b8b8b89604051611d32959493929190613ba0565b60405180910390a250505050505050505050565b606060006001600160a01b03841660011480611d665750611d66846111d2565b611d9a5760405162461bcd60e51b8152602060048201526005602482015264475331303560d81b604482015260640161083b565b60008311611dd25760405162461bcd60e51b815260206004820152600560248201526423a998981b60d91b604482015260640161083b565b826001600160401b03811115611dea57611dea613050565b604051908082528060200260200182016040528015611e13578160200160208202803683370190505b506001600160a01b03808616600090815260016020526040812054929450911691505b6001600160a01b03821615801590611e5857506001600160a01b038216600114155b8015611e6357508381105b15611ebe5781838281518110611e7b57611e7b6139b4565b6001600160a01b03928316602091820292909201810191909152928116600090815260019093526040909220549091169080611eb681613843565b915050611e36565b6001600160a01b038216600114611ef65782611edb600183613b8d565b81518110611eeb57611eeb6139b4565b602002602001015191505b808352509250929050565b336000908152600260205260409020546001600160a01b0316611f4e5760405162461bcd60e51b8152602060048201526005602482015264047533033360dc1b604482015260640161083b565b336000818152600860209081526040808320858452909152808220600190555183917ff2a0eb156472d1440255b0d7c1e19cc07115d1051fe605b0dce69acfec884d9c91a350565b6000611fab8c8c8c8c8c8c8c8c8c8c8c6123d6565b8051906020012090509b9a5050505050505050505050565b611fcb6126b9565b6001600160a01b03811615801590611fed57506001600160a01b038116600114155b6120215760405162461bcd60e51b8152602060048201526005602482015264475331303160d81b604482015260640161083b565b6001600160a01b038281166000908152600160205260409020548116908216146120755760405162461bcd60e51b8152602060048201526005602482015264475331303360d81b604482015260640161083b565b6001600160a01b03818116600081815260016020526040808220805487861684528284208054919096166001600160a01b0319918216179095558383528054909416909355915190917faab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace405427691a25050565b6120ed6126b9565b6001600160a01b0381161561219f576040516301ffc9a760e01b815263736bd41d60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015612147573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061216b9190613a03565b61219f5760405162461bcd60e51b8152602060048201526005602482015264047533330360dc1b604482015260640161083b565b7f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c88181556040516001600160a01b038316907f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa290600090a25050565b6122036126b9565b6001600160a01b0381161580159061222557506001600160a01b038116600114155b801561223a57506001600160a01b0381163014155b6122565760405162461bcd60e51b815260040161083b906137ef565b6001600160a01b03818116600090815260026020526040902054161561228e5760405162461bcd60e51b815260040161083b9061380e565b6001600160a01b038216158015906122b057506001600160a01b038216600114155b6122cc5760405162461bcd60e51b815260040161083b906137ef565b6001600160a01b038381166000908152600260205260409020548116908316146123205760405162461bcd60e51b8152602060048201526005602482015264475332303560d81b604482015260640161083b565b6001600160a01b03828116600081815260026020526040808220805486861680855283852080549288166001600160a01b03199384161790559589168452828420805482169096179095558383528054909416909355915190917ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf91a26040516001600160a01b038216907f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2690600090a2505050565b606060007fbb8310d486368db6bd6f849402fdd73ad53d316b5a4b2644ad6efe0f941286d860001b8d8d8d8d604051612410929190613c0c565b604051908190038120612436949392918e908e908e908e908e908e908e90602001613c1c565b60408051601f1981840301815291905280516020909101209050601960f81b600160f81b6124626124f7565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150509b9a5050505050505050505050565b6124b76126b9565b6124c0816129cd565b6040516001600160a01b038216907f5ac6c46c93c8d0e53714ba3b53db3e7c046da994313d7ed0d192028bc7c228b090600090a250565b60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b6125566126b9565b8060016003546125669190613b8d565b10156125845760405162461bcd60e51b815260040161083b90613a3c565b6001600160a01b038216158015906125a657506001600160a01b038216600114155b6125c25760405162461bcd60e51b815260040161083b906137ef565b6001600160a01b038381166000908152600260205260409020548116908316146126165760405162461bcd60e51b8152602060048201526005602482015264475332303560d81b604482015260640161083b565b6001600160a01b03828116600081815260026020526040808220805488861684529183208054929095166001600160a01b0319928316179094559181528254909116909155600380549161266983613c8b565b90915550506040516001600160a01b038316907ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf90600090a280600454146126b4576126b481611704565b505050565b3330146126f05760405162461bcd60e51b8152602060048201526005602482015264475330333160d81b604482015260640161083b565b565b60008260000361270457506000611207565b60006127108385613a25565b90508261271d8583613b6b565b14610f7b57600080fd5b6000806127348385613b58565b905083811015610f7b57600080fd5b33600061274e612b63565b90509091565b6060601960f81b600160f81b858585604051602001612774929190613ca2565b60408051808303601f190181529082905280516020918201206001600160f81b0319958616918301919091529290931660218401526022830152604282015260620160405160208183030381529060405290509392505050565b600080612895856001600160a01b031663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa158015612812573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128369190613cc8565b60408051602081018890527f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca910160408051601f1981840301815282825280516020918201209083015201604051602081830303815290604052612754565b8051602082012084519192509060000361295a57604051635ae6bd3760e01b8152600481018290526001600160a01b03871690635ae6bd3790602401602060405180830381865afa1580156128ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129129190613cc8565b6000036129555760405162461bcd60e51b815260206004820152601160248201527012185cda081b9bdd08185c1c1c9bdd9959607a1b604482015260640161083b565b6129bb565b60405163934f3a1160e01b81526001600160a01b0387169063934f3a119061298a90849086908990600401613ce1565b60006040518083038186803b1580156129a257600080fd5b505afa1580156129b6573d6000803e3d6000fd5b505050505b50630b135d3f60e11b95945050505050565b306001600160a01b03821603612a0d5760405162461bcd60e51b8152602060048201526005602482015264047533430360dc1b604482015260640161083b565b7f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d555565b600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f546001600160a01b031615612a9b5760405162461bcd60e51b8152602060048201526005602482015264047533130360dc1b604482015260640161083b565b6001600081905260208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f80546001600160a01b03191690911790556001600160a01b0382161561093457813b612b1e5760405162461bcd60e51b815260206004820152600560248201526423a998181960d91b604482015260640161083b565b612b2f826000836001600019612bc3565b6109345760405162461bcd60e51b8152602060048201526005602482015264047533030360dc1b604482015260640161083b565b60006014361015612bb65760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642063616c6c64617461206c656e677468000000000000000000604482015260640161083b565b5060131936013560601c90565b60006001836001811115612bd957612bd9613a5b565b03612bf1576000808551602087018986f49050612c01565b600080855160208701888a87f190505b95945050505050565b600081831015612c1a5781610f7b565b5090919050565b600082821115612c3057600080fd5b60006115128385613b8d565b6000806001600160a01b03831615612c545782612c56565b325b90506001600160a01b038416612ce957612c883a8610612c76573a612c78565b855b612c828989612727565b906126f2565b6040519092506001600160a01b0382169083156108fc029084906000818181858888f19350505050612ce45760405162461bcd60e51b8152602060048201526005602482015264475330313160d81b604482015260640161083b565b612d38565b612cf785612c828989612727565b9150612d04848284612f1e565b612d385760405162461bcd60e51b815260206004820152600560248201526423a998189960d91b604482015260640161083b565b5095945050505050565b60045415612d7a5760405162461bcd60e51b8152602060048201526005602482015264047533230360dc1b604482015260640161083b565b8151811115612d9b5760405162461bcd60e51b815260040161083b90613a3c565b6001811015612dd45760405162461bcd60e51b815260206004820152600560248201526423a999181960d91b604482015260640161083b565b600160005b8351811015612eeb576000848281518110612df657612df66139b4565b6020026020010151905060006001600160a01b0316816001600160a01b031614158015612e2d57506001600160a01b038116600114155b8015612e4257506001600160a01b0381163014155b8015612e605750806001600160a01b0316836001600160a01b031614155b612e7c5760405162461bcd60e51b815260040161083b906137ef565b6001600160a01b038181166000908152600260205260409020541615612eb45760405162461bcd60e51b815260040161083b9061380e565b6001600160a01b03928316600090815260026020526040902080546001600160a01b03191693821693909317909255600101612dd9565b506001600160a01b0316600090815260026020526040902080546001600160a01b03191660011790559051600355600455565b604080516001600160a01b03841660248201526044808201849052825180830390910181526064909101909152602080820180516001600160e01b031663a9059cbb60e01b1781528251600093929184919082896127105a03f13d8015612f905760208114612f985760009350612fa3565b819350612fa3565b600051158215171593505b5050509392505050565b6001600160a01b0381168114612fc257600080fd5b50565b6001600160e01b031981168114612fc257600080fd5b60008060408385031215612fee57600080fd5b8235612ff981612fad565b9150602083013561300981612fc5565b809150509250929050565b803561301f81612fad565b919050565b6000806040838503121561303757600080fd5b823561304281612fad565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261307757600080fd5b81356001600160401b038082111561309157613091613050565b604051601f8301601f19908116603f011681019082821181831017156130b9576130b9613050565b816040528381528660208588010111156130d257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561310857600080fd5b8435935060208501356001600160401b038082111561312657600080fd5b61313288838901613066565b9450604087013591508082111561314857600080fd5b5061315587828801613066565b949793965093946060013593505050565b60008083601f84011261317857600080fd5b5081356001600160401b0381111561318f57600080fd5b6020830191508360208285010111156131a757600080fd5b9250929050565b6000806000604084860312156131c357600080fd5b8335925060208401356001600160401b038111156131e057600080fd5b6131ec86828701613166565b9497909650939450505050565b60006020828403121561320b57600080fd5b5035919050565b60006020828403121561322457600080fd5b8135610f7b81612fad565b6000806040838503121561324257600080fd5b82359150602083013561300981612fad565b80356002811061301f57600080fd5b6000806000806080858703121561327957600080fd5b843561328481612fad565b93506020850135925060408501356001600160401b038111156132a657600080fd5b6132b287828801613066565b9250506132c160608601613254565b905092959194509250565b60005b838110156132e75781810151838201526020016132cf565b50506000910152565b600081518084526133088160208601602086016132cc565b601f01601f19169290920160200192915050565b821515815260406020820152600061151260408301846132f0565b6000806040838503121561334a57600080fd5b50508035926020909101359150565b602081526000610f7b60208301846132f0565b60008060008060008060008060008060006101408c8e03121561338e57600080fd5b6133978c613014565b9a5060208c013599506001600160401b038060408e013511156133b957600080fd5b6133c98e60408f01358f01613166565b909a5098506133da60608e01613254565b975060808d0135965060a08d0135955060c08d013594506133fd60e08e01613014565b935061340c6101008e01613014565b9250806101208e0135111561342057600080fd5b506134328d6101208e01358e01613066565b90509295989b509295989b9093969950565b60008060006060848603121561345957600080fd5b8335925060208401356001600160401b038082111561347757600080fd5b61348387838801613066565b9350604086013591508082111561349957600080fd5b506134a686828701613066565b9150509250925092565b60008151808452602080850194506020840160005b838110156134ea5781516001600160a01b0316875295820195908201906001016134c5565b509495945050505050565b602081526000610f7b60208301846134b0565b6000806040838503121561351b57600080fd5b823561352681612fad565b915060208301356001600160401b0381111561354157600080fd5b61354d85828601613066565b9150509250929050565b6000806000806000806000806000806101008b8d03121561357757600080fd5b8a356001600160401b038082111561358e57600080fd5b818d0191508d601f8301126135a257600080fd5b8135818111156135b157600080fd5b8e60208260051b85010111156135c657600080fd5b60208381019d50909b508d013599506135e160408e01613014565b985060608d01359150808211156135f757600080fd5b506136048d828e01613166565b9097509550613617905060808c01613014565b935061362560a08c01613014565b925060c08b0135915061363a60e08c01613014565b90509295989b9194979a5092959850565b60408152600061365e60408301856134b0565b905060018060a01b03831660208301529392505050565b60008060008060008060008060008060006101408c8e03121561369757600080fd5b8b356136a281612fad565b9a5060208c0135995060408c01356001600160401b038111156136c457600080fd5b6136d08e828f01613166565b909a5098506136e3905060608d01613254565b965060808c0135955060a08c0135945060c08c0135935060e08c013561370881612fad565b92506101008c013561371981612fad565b809250506101208c013590509295989b509295989b9093969950565b6000806040838503121561374857600080fd5b823561375381612fad565b9150602083013561300981612fad565b60008060006060848603121561377857600080fd5b833561378381612fad565b9250602084013561379381612fad565b915060408401356137a381612fad565b809150509250925092565b6000806000606084860312156137c357600080fd5b83356137ce81612fad565b925060208401356137de81612fad565b929592945050506040919091013590565b602080825260059082015264475332303360d81b604082015260600190565b60208082526005908201526411d4cc8c0d60da1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000600182016138555761385561382d565b5060010190565b60408152600061386f60408301856132f0565b8281036020840152612c0181856132f0565b60006020828403121561389357600080fd5b8151610f7b81612fc5565b60ff82811682821603908111156112075761120761382d565b600080858511156138c757600080fd5b838611156138d457600080fd5b5050820193919092039150565b600080600080608085870312156138f757600080fd5b843593506020850135925060408501356001600160401b038082111561391c57600080fd5b61392888838901613066565b9350606087013591508082111561393e57600080fd5b5061394b87828801613066565b91505092959194509250565b600060018060a01b03808a16835280891660208401525086604083015285606083015284608083015260e060a083015261399460e08301856132f0565b82810360c08401526139a681856132f0565b9a9950505050505050505050565b634e487b7160e01b600052603260045260246000fd5b6080815260006139dd60808301876134b0565b6020830195909552506001600160a01b0392831660408201529116606090910152919050565b600060208284031215613a1557600080fd5b81518015158114610f7b57600080fd5b80820281158282048414176112075761120761382d565b602080825260059082015264475332303160d81b604082015260600190565b634e487b7160e01b600052602160045260246000fd5b60028110613a8f57634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038d168152602081018c90526101606040820181905281018a905260006101808b8d828501376000838d01820152601f8c01601f19168301613adf606085018d613a71565b8a60808501528960a08501528860c0850152613b0660e08501896001600160a01b03169052565b6001600160a01b0387166101008501528184820301610120850152613b2d828201876132f0565b92505050613b476101408301846001600160a01b03169052565b9d9c50505050505050505050505050565b808201808211156112075761120761382d565b600082613b8857634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156112075761120761382d565b6080808252810185905260008660a08301825b88811015613be3578235613bc681612fad565b6001600160a01b0316825260209283019290910190600101613bb3565b50602084019690965250506001600160a01b039283166040820152911660609091015292915050565b8183823760009101908152919050565b8b81526001600160a01b038b81166020830152604082018b9052606082018a9052610160820190613c50608084018b613a71565b60a083019890985260c082019690965260e0810194909452918516610100840152909316610120820152610140019190915295945050505050565b600081613c9a57613c9a61382d565b506000190190565b82815260008251613cba8160208501602087016132cc565b919091016020019392505050565b600060208284031215613cda57600080fd5b5051919050565b838152606060208201526000613cfa60608301856132f0565b8281036040840152613d0c81856132f0565b969550505050505056fea2646970667358221220ff64f685cc141b5510188b45ab21cd32f18157e89ea60f3f979e5a663db4f73564736f6c63430008160033",
    "sourceMap": "726:139:54:-:0;306:1541;726:139;57:42:51;306:1541:54;726:139;;;134:42:51;726:139:54;;211:42:51;726:139:54;;288:42:51;726:139:54;;365:42:51;726:139:54;;442:42:51;726:139:54;;519:42:51;726:139:54;;596:42:51;726:139:54;;;;;;;;:::i;:::-;;915:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3963:1:30;3951:9;:13;;;980:16:54;;;;;;;;;;;;953:24;;980:16;;;;;;;;;;;-1:-1:-1;980:16:54;953:43;;1019:6;1006:7;1014:1;1006:10;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1006:19:54;;;:10;;;;;;;;;;;:19;1045:1;1035:9;:11;1056:23;1068:7;1077:1;1056:11;:23::i;:::-;943:143;915:171;306:1541;;1011:1136:35;1229:9;;:14;1221:32;;;;-1:-1:-1;;;1221:32:35;;775:2:56;1221:32:35;;;757:21:56;814:1;794:18;;;787:29;-1:-1:-1;;;832:18:56;;;825:35;877:18;;1221:32:35;;;;;;;;;1360:7;:14;1346:10;:28;;1338:46;;;;-1:-1:-1;;;1338:46:35;;1108:2:56;1338:46:35;;;1090:21:56;1147:1;1127:18;;;1120:29;-1:-1:-1;;;1165:18:56;;;1158:35;1210:18;;1338:46:35;906:328:56;1338:46:35;1468:1;1454:10;:15;;1446:33;;;;-1:-1:-1;;;1446:33:35;;1441:2:56;1446:33:35;;;1423:21:56;1480:1;1460:18;;;1453:29;-1:-1:-1;;;1498:18:56;;;1491:35;1543:18;;1446:33:35;1239:328:56;1446:33:35;687:3;1526:20;1574:450;1598:7;:14;1594:1;:18;1574:450;;;1678:13;1694:7;1702:1;1694:10;;;;;;;;:::i;:::-;;;;;;;1678:26;;1743:1;-1:-1:-1;;;;;1726:19:35;:5;-1:-1:-1;;;;;1726:19:35;;;:47;;;;-1:-1:-1;;;;;;1749:24:35;;687:3;1749:24;;1726:47;:73;;;;-1:-1:-1;;;;;;1777:22:35;;1794:4;1777:22;;1726:73;:98;;;;;1819:5;-1:-1:-1;;;;;1803:21:35;:12;-1:-1:-1;;;;;1803:21:35;;;1726:98;1718:116;;;;-1:-1:-1;;;1718:116:35;;1774:2:56;1718:116:35;;;1756:21:56;1813:1;1793:18;;;1786:29;-1:-1:-1;;;1831:18:56;;;1824:35;1876:18;;1718:116:35;1572:328:56;1718:116:35;-1:-1:-1;;;;;1900:13:35;;;1925:1;1900:13;;;:6;:13;;;;;;;:27;1892:45;;;;-1:-1:-1;;;1892:45:35;;2107:2:56;1892:45:35;;;2089:21:56;2146:1;2126:18;;;2119:29;-1:-1:-1;;;2164:18:56;;;2157:35;2209:18;;1892:45:35;1905:328:56;1892:45:35;-1:-1:-1;;;;;1951:20:35;;;;;;;:6;:20;;;;;:28;;-1:-1:-1;;;;;;1951:28:35;;;;;;;;;;;-1:-1:-1;1614:3:35;1574:450;;;-1:-1:-1;;;;;;2033:20:35;;;;;:6;:20;;;;;:38;;-1:-1:-1;;;;;;2033:38:35;687:3;2033:38;;;2094:14;;2081:10;:27;2118:9;:22;1011:1136::o;306:1541:54:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;306:1541:54;-1:-1:-1;;;;;306:1541:54;;;;;;;;;;;-1:-1:-1;306:1541:54;;;;;;;-1:-1:-1;306:1541:54;;;-1:-1:-1;306:1541:54;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:56;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:56;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:56:o;441:127::-;502:10;497:3;493:20;490:1;483:31;533:4;530:1;523:15;557:4;554:1;547:15;1905:328;306:1541:54;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102135760003560e01c80637d83297411610118578063e009cfde116100a0578063e86637db1161006f578063e86637db1461073a578063f08a03231461075a578063f698da251461077a578063f8dc5dd91461078f578063ffa1ad74146107af5761024f565b8063e009cfde146106c5578063e19a9dd9146106e5578063e318b52b14610705578063e75235b8146107255761024f565b8063b4faba09116100e7578063b4faba0914610617578063b63e800d14610637578063cc2f845214610657578063d4d9bdcd14610685578063d8d11f78146106a55761024f565b80637d83297414610587578063934f3a11146105bf578063a0e67e2b146105df578063affed0e0146106015761024f565b80633408e4701161019b5780635624b25b1161016a5780635624b25b146104da5780635ae6bd3714610507578063610b592514610534578063694e80c3146105545780636a761202146105745761024f565b80633408e47014610438578063468721a71461044b57806351cad5ee1461046b5780635229073f146104ac5761024f565b806318ec91b9116101e257806318ec91b91461037b5780632986e054146103b35780632d9ad53d146103c85780632f54bf6e146103f85780633365582c146104185761024f565b80630a3fe054146102b55780630d582f131461030057806312fb68e0146103225780631626ba7e146103425761024f565b3661024f5760405134815233907f3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d9060200160405180910390a2005b34801561025b57600080fd5b507f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d580548061028657005b36600080373360601b365260008060143601600080855af190503d6000803e806102af573d6000fd5b503d6000f35b3480156102c157600080fd5b506102ed6102d0366004612fdb565b600960209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561030c57600080fd5b5061032061031b366004613024565b6107e0565b005b34801561032e57600080fd5b5061032061033d3660046130f2565b610938565b34801561034e57600080fd5b5061036261035d3660046131ae565b610dd7565b6040516001600160e01b031990911681526020016102f7565b34801561038757600080fd5b5061039b6103963660046131f9565b610f82565b6040516001600160a01b0390911681526020016102f7565b3480156103bf57600080fd5b50610320610fac565b3480156103d457600080fd5b506103e86103e3366004613212565b6111d2565b60405190151581526020016102f7565b34801561040457600080fd5b506103e8610413366004613212565b61120d565b34801561042457600080fd5b5061032061043336600461322f565b611245565b34801561044457600080fd5b50466102ed565b34801561045757600080fd5b506103e8610466366004613263565b611441565b34801561047757600080fd5b5061039b610486366004613024565b600a6020908152600092835260408084209091529082529020546001600160a01b031681565b3480156104b857600080fd5b506104cc6104c7366004613263565b61151a565b6040516102f792919061331c565b3480156104e657600080fd5b506104fa6104f5366004613337565b611550565b6040516102f79190613359565b34801561051357600080fd5b506102ed6105223660046131f9565b60076020526000908152604090205481565b34801561054057600080fd5b5061032061054f366004613212565b6115cb565b34801561056057600080fd5b5061032061056f3660046131f9565b611704565b6103e861058236600461336c565b6117a2565b34801561059357600080fd5b506102ed6105a2366004613024565b600860209081526000928352604080842090915290825290205481565b3480156105cb57600080fd5b506103206105da366004613444565b611aed565b3480156105eb57600080fd5b506105f4611b31565b6040516102f791906134f5565b34801561060d57600080fd5b506102ed60055481565b34801561062357600080fd5b50610320610632366004613508565b611c21565b34801561064357600080fd5b50610320610652366004613557565b611c44565b34801561066357600080fd5b50610677610672366004613024565b611d46565b6040516102f792919061364b565b34801561069157600080fd5b506103206106a03660046131f9565b611f01565b3480156106b157600080fd5b506102ed6106c0366004613675565b611f96565b3480156106d157600080fd5b506103206106e0366004613735565b611fc3565b3480156106f157600080fd5b50610320610700366004613212565b6120e5565b34801561071157600080fd5b50610320610720366004613763565b6121fb565b34801561073157600080fd5b506004546102ed565b34801561074657600080fd5b506104fa610755366004613675565b6123d6565b34801561076657600080fd5b50610320610775366004613212565b6124af565b34801561078657600080fd5b506102ed6124f7565b34801561079b57600080fd5b506103206107aa3660046137ae565b61254e565b3480156107bb57600080fd5b506104fa60405180604001604052806005815260200164312e342e3160d81b81525081565b6107e86126b9565b6001600160a01b0382161580159061080a57506001600160a01b038216600114155b801561081f57506001600160a01b0382163014155b6108445760405162461bcd60e51b815260040161083b906137ef565b60405180910390fd5b6001600160a01b03828116600090815260026020526040902054161561087c5760405162461bcd60e51b815260040161083b9061380e565b60026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e080546001600160a01b038481166000818152604081208054939094166001600160a01b0319938416179093556001835283549091161790915560038054916108e983613843565b90915550506040516001600160a01b038316907f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2690600090a280600454146109345761093481611704565b5050565b6109438160416126f2565b8251101561097b5760405162461bcd60e51b8152602060048201526005602482015264047533032360dc1b604482015260640161083b565b6000808060008060005b86811015610dcb576041818102890160208101516040820151919092015160ff16955090935091506000849003610b9357885160208a01208a146109f35760405162461bcd60e51b8152602060048201526005602482015264475330323760d81b604482015260640161083b565b9193508391610a038760416126f2565b821015610a3a5760405162461bcd60e51b8152602060048201526005602482015264475330323160d81b604482015260640161083b565b8751610a47836020612727565b1115610a7d5760405162461bcd60e51b815260206004820152600560248201526423a998191960d91b604482015260640161083b565b602082890181015189519091610aa0908390610a9a908790612727565b90612727565b1115610ad65760405162461bcd60e51b8152602060048201526005602482015264475330323360d81b604482015260640161083b565b6040516320c13b0b60e01b8082528a8501602001916001600160a01b038916906320c13b0b90610b0c908f90869060040161385c565b602060405180830381865afa158015610b29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4d9190613881565b6001600160e01b03191614610b8c5760405162461bcd60e51b815260206004820152600560248201526411d4cc0c8d60da1b604482015260640161083b565b5050610d3a565b8360ff16600103610c15579193508391336001600160a01b0384161480610bdc57506001600160a01b03851660009081526008602090815260408083208d845290915290205415155b610c105760405162461bcd60e51b8152602060048201526005602482015264475330323560d81b604482015260640161083b565b610d3a565b601e8460ff161115610cda576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018b9052600190605c0160405160208183030381529060405280519060200120600486610c7a919061389e565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610cc9573d6000803e3d6000fd5b505050602060405103519450610d3a565b6040805160008152602081018083528c905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610d2d573d6000803e3d6000fd5b5050506020604051035194505b856001600160a01b0316856001600160a01b0316118015610d7457506001600160a01b038581166000908152600260205260409020541615155b8015610d8a57506001600160a01b038516600114155b610dbe5760405162461bcd60e51b815260206004820152600560248201526423a998191b60d91b604482015260640161083b565b9394508493600101610985565b50505050505050505050565b6000806000610de4612743565b909250905060048410610f35576001600160e01b0319853516635fd7e97d60e01b81148015610e14575060448510155b15610f3357600080610e2a60446004898b6138b7565b810190610e379190613337565b6001600160a01b038088166000908152600a60209081526040808320868452909152902054929450909250168015610f2f57600080610e798a6004818e6138b7565b810190610e8691906138e1565b9350935050508b610e98868685612754565b8051906020012003610f2c57826001600160a01b03166353f00b1489898f898988886040518863ffffffff1660e01b8152600401610edc9796959493929190613957565b602060405180830381865afa158015610ef9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1d9190613881565b98505050505050505050610f7b565b50505b5050505b505b610f76828787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506127ce92505050565b925050505b9392505050565b600b8181548110610f9257600080fd5b6000918252602090912001546001600160a01b0316905081565b6000610fb6611b31565b6040805160008082526020820190925291925090610fe7732f55e8b20d0b9fefa187aa7d00b6cbe563605bf56129cd565b610ff18282612a31565b82600081518110611004576110046139b4565b60200260200101516001600160a01b03167f141df868a6331af528e38c83b7aa03edc19be66e37ae67f9285bf4f8e3c6a1a884600185732f55e8b20d0b9fefa187aa7d00b6cbe563605bf560405161105f94939291906139ca565b60405180910390a2306000818152600a602090815260408083207ffb378b35457022ecc5709ae5dafad9393c1387ae6d8ce24913a0c969074c07fb80855292529182902080546001600160a01b03191673fdafc9d1902f4e0b84f65f49f244b32b31013b7490811790915591517fae938181ed4437a46f12ead84e69947e6d84a1113a49d9c0075d8d35c6ce273c926111089282526001600160a01b0316602082015260400190565b60405180910390a260005b600b548110156111cc57600b8181548110611130576111306139b4565b60009182526020909120015460405163095ea7b360e01b815273fdafc9d1902f4e0b84f65f49f244b32b31013b74600482015260001960248201526001600160a01b039091169063095ea7b3906044016020604051808303816000875af115801561119f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c39190613a03565b50600101611113565b50505050565b600060016001600160a01b0383161480159061120757506001600160a01b038281166000908152600160205260409020541615155b92915050565b60006001600160a01b0382166001148015906112075750506001600160a01b0390811660009081526002602052604090205416151590565b3361124e612b63565b6001600160a01b0316146112a45760405162461bcd60e51b815260206004820152601e60248201527f6f6e6c7920736166652063616e2063616c6c2074686973206d6574686f640000604482015260640161083b565b60006112ae612b63565b6001600160a01b038082166000908152600a602090815260408083208884529091529020549192509081169083161580156112f157506001600160a01b03811615155b1561135e576001600160a01b0382166000818152600a6020908152604080832088845282529182902080546001600160a01b031916905590518681527ff1984d1a49cc75dcbf01cd175870cb7eb9a4fd87b538a87007e4dbb0399b61a991015b60405180910390a26111cc565b6001600160a01b038281166000908152600a60209081526040808320888452909152902080546001600160a01b03191685831617905581166113dc57604080518581526001600160a01b0385811660208301528416917fae938181ed4437a46f12ead84e69947e6d84a1113a49d9c0075d8d35c6ce273c9101611351565b816001600160a01b03167f06341ac2f62eb79165de8c8b54ab89a8825b12746c2b98e01dff1007837d2ba8858386604051611433939291909283526001600160a01b03918216602084015216604082015260600190565b60405180910390a250505050565b60003360011480159061146b5750336000908152600160205260409020546001600160a01b031615155b61149f5760405162461bcd60e51b815260206004820152600560248201526411d4cc4c0d60da1b604482015260640161083b565b6114ae85858585600019612bc3565b905080156114e65760405133907f6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb890600090a2611512565b60405133907facd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd37590600090a25b949350505050565b6000606061152a86868686611441565b915060405160203d0181016040523d81523d6000602083013e8091505094509492505050565b6060600061155f836020613a25565b6001600160401b0381111561157657611576613050565b6040519080825280601f01601f1916602001820160405280156115a0576020820181803683370190505b50905060005b838110156115c357848101546020808302840101526001016115a6565b509392505050565b6115d36126b9565b6001600160a01b038116158015906115f557506001600160a01b038116600114155b6116295760405162461bcd60e51b8152602060048201526005602482015264475331303160d81b604482015260640161083b565b6001600160a01b0381811660009081526001602052604090205416156116795760405162461bcd60e51b815260206004820152600560248201526423a998981960d91b604482015260640161083b565b600160208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f80546001600160a01b03848116600081815260408082208054949095166001600160a01b031994851617909455948552835490911681179092555190917fecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f844091a250565b61170c6126b9565b60035481111561172e5760405162461bcd60e51b815260040161083b90613a3c565b60018110156117675760405162461bcd60e51b815260206004820152600560248201526423a999181960d91b604482015260640161083b565b60048190556040518181527f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c939060200160405180910390a150565b60008060006117bc8e8e8e8e8e8e8e8e8e8e6005546123d6565b6005805491925060006117ce83613843565b90915550508051602082012091506117e7828286611aed565b5060006118127f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c85490565b90506001600160a01b0381161561189857806001600160a01b03166375f0bb528f8f8f8f8f8f8f8f8f8f8f336040518d63ffffffff1660e01b81526004016118659c9b9a99989796959493929190613a93565b600060405180830381600087803b15801561187f57600080fd5b505af1158015611893573d6000803e3d6000fd5b505050505b6118c46118a78a6109c4613b58565b603f6118b48c6040613a25565b6118be9190613b6b565b90612c0a565b6118d0906101f4613b58565b5a10156119075760405162461bcd60e51b8152602060048201526005602482015264047533031360dc1b604482015260640161083b565b60005a90506119788f8f8f8f8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508e8c600014611965578e612bc3565b6109c45a6119739190613b8d565b612bc3565b93506119855a8290612c21565b9050838061199257508915155b8061199c57508715155b6119d05760405162461bcd60e51b8152602060048201526005602482015264475330313360d81b604482015260640161083b565b600088156119e8576119e5828b8b8b8b612c3c565b90505b8415611a2d57837f442e715f626346e8c54381002da614f62bee8d27386535b2521ec8540898556e82604051611a2091815260200190565b60405180910390a2611a68565b837f23428b18acfb3ea64b08dc0c1d296ea9c09702c09083ca5272e64d115b687d2382604051611a5f91815260200190565b60405180910390a25b50506001600160a01b03811615611adc57604051631264e26d60e31b81526004810183905283151560248201526001600160a01b03821690639327136890604401600060405180830381600087803b158015611ac357600080fd5b505af1158015611ad7573d6000803e3d6000fd5b505050505b50509b9a5050505050505050505050565b60045480611b255760405162461bcd60e51b8152602060048201526005602482015264475330303160d81b604482015260640161083b565b6111cc84848484610938565b606060006003546001600160401b03811115611b4f57611b4f613050565b604051908082528060200260200182016040528015611b78578160200160208202803683370190505b506001600090815260026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e054919250906001600160a01b03165b6001600160a01b038116600114611c195780838381518110611bd957611bd96139b4565b6001600160a01b03928316602091820292909201810191909152918116600090815260029092526040909120541681611c1181613843565b925050611bb5565b509092915050565b600080825160208401855af480600052503d6020523d600060403e60403d016000fd5b611c828a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508c9250612d42915050565b6001600160a01b03841615611c9a57611c9a846129cd565b611cda8787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612a3192505050565b8115611cf157611cef82600060018685612c3c565b505b336001600160a01b03167f141df868a6331af528e38c83b7aa03edc19be66e37ae67f9285bf4f8e3c6a1a88b8b8b8b89604051611d32959493929190613ba0565b60405180910390a250505050505050505050565b606060006001600160a01b03841660011480611d665750611d66846111d2565b611d9a5760405162461bcd60e51b8152602060048201526005602482015264475331303560d81b604482015260640161083b565b60008311611dd25760405162461bcd60e51b815260206004820152600560248201526423a998981b60d91b604482015260640161083b565b826001600160401b03811115611dea57611dea613050565b604051908082528060200260200182016040528015611e13578160200160208202803683370190505b506001600160a01b03808616600090815260016020526040812054929450911691505b6001600160a01b03821615801590611e5857506001600160a01b038216600114155b8015611e6357508381105b15611ebe5781838281518110611e7b57611e7b6139b4565b6001600160a01b03928316602091820292909201810191909152928116600090815260019093526040909220549091169080611eb681613843565b915050611e36565b6001600160a01b038216600114611ef65782611edb600183613b8d565b81518110611eeb57611eeb6139b4565b602002602001015191505b808352509250929050565b336000908152600260205260409020546001600160a01b0316611f4e5760405162461bcd60e51b8152602060048201526005602482015264047533033360dc1b604482015260640161083b565b336000818152600860209081526040808320858452909152808220600190555183917ff2a0eb156472d1440255b0d7c1e19cc07115d1051fe605b0dce69acfec884d9c91a350565b6000611fab8c8c8c8c8c8c8c8c8c8c8c6123d6565b8051906020012090509b9a5050505050505050505050565b611fcb6126b9565b6001600160a01b03811615801590611fed57506001600160a01b038116600114155b6120215760405162461bcd60e51b8152602060048201526005602482015264475331303160d81b604482015260640161083b565b6001600160a01b038281166000908152600160205260409020548116908216146120755760405162461bcd60e51b8152602060048201526005602482015264475331303360d81b604482015260640161083b565b6001600160a01b03818116600081815260016020526040808220805487861684528284208054919096166001600160a01b0319918216179095558383528054909416909355915190917faab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace405427691a25050565b6120ed6126b9565b6001600160a01b0381161561219f576040516301ffc9a760e01b815263736bd41d60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015612147573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061216b9190613a03565b61219f5760405162461bcd60e51b8152602060048201526005602482015264047533330360dc1b604482015260640161083b565b7f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c88181556040516001600160a01b038316907f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa290600090a25050565b6122036126b9565b6001600160a01b0381161580159061222557506001600160a01b038116600114155b801561223a57506001600160a01b0381163014155b6122565760405162461bcd60e51b815260040161083b906137ef565b6001600160a01b03818116600090815260026020526040902054161561228e5760405162461bcd60e51b815260040161083b9061380e565b6001600160a01b038216158015906122b057506001600160a01b038216600114155b6122cc5760405162461bcd60e51b815260040161083b906137ef565b6001600160a01b038381166000908152600260205260409020548116908316146123205760405162461bcd60e51b8152602060048201526005602482015264475332303560d81b604482015260640161083b565b6001600160a01b03828116600081815260026020526040808220805486861680855283852080549288166001600160a01b03199384161790559589168452828420805482169096179095558383528054909416909355915190917ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf91a26040516001600160a01b038216907f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2690600090a2505050565b606060007fbb8310d486368db6bd6f849402fdd73ad53d316b5a4b2644ad6efe0f941286d860001b8d8d8d8d604051612410929190613c0c565b604051908190038120612436949392918e908e908e908e908e908e908e90602001613c1c565b60408051601f1981840301815291905280516020909101209050601960f81b600160f81b6124626124f7565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150509b9a5050505050505050505050565b6124b76126b9565b6124c0816129cd565b6040516001600160a01b038216907f5ac6c46c93c8d0e53714ba3b53db3e7c046da994313d7ed0d192028bc7c228b090600090a250565b60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b6125566126b9565b8060016003546125669190613b8d565b10156125845760405162461bcd60e51b815260040161083b90613a3c565b6001600160a01b038216158015906125a657506001600160a01b038216600114155b6125c25760405162461bcd60e51b815260040161083b906137ef565b6001600160a01b038381166000908152600260205260409020548116908316146126165760405162461bcd60e51b8152602060048201526005602482015264475332303560d81b604482015260640161083b565b6001600160a01b03828116600081815260026020526040808220805488861684529183208054929095166001600160a01b0319928316179094559181528254909116909155600380549161266983613c8b565b90915550506040516001600160a01b038316907ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf90600090a280600454146126b4576126b481611704565b505050565b3330146126f05760405162461bcd60e51b8152602060048201526005602482015264475330333160d81b604482015260640161083b565b565b60008260000361270457506000611207565b60006127108385613a25565b90508261271d8583613b6b565b14610f7b57600080fd5b6000806127348385613b58565b905083811015610f7b57600080fd5b33600061274e612b63565b90509091565b6060601960f81b600160f81b858585604051602001612774929190613ca2565b60408051808303601f190181529082905280516020918201206001600160f81b0319958616918301919091529290931660218401526022830152604282015260620160405160208183030381529060405290509392505050565b600080612895856001600160a01b031663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa158015612812573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128369190613cc8565b60408051602081018890527f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca910160408051601f1981840301815282825280516020918201209083015201604051602081830303815290604052612754565b8051602082012084519192509060000361295a57604051635ae6bd3760e01b8152600481018290526001600160a01b03871690635ae6bd3790602401602060405180830381865afa1580156128ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129129190613cc8565b6000036129555760405162461bcd60e51b815260206004820152601160248201527012185cda081b9bdd08185c1c1c9bdd9959607a1b604482015260640161083b565b6129bb565b60405163934f3a1160e01b81526001600160a01b0387169063934f3a119061298a90849086908990600401613ce1565b60006040518083038186803b1580156129a257600080fd5b505afa1580156129b6573d6000803e3d6000fd5b505050505b50630b135d3f60e11b95945050505050565b306001600160a01b03821603612a0d5760405162461bcd60e51b8152602060048201526005602482015264047533430360dc1b604482015260640161083b565b7f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d555565b600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f546001600160a01b031615612a9b5760405162461bcd60e51b8152602060048201526005602482015264047533130360dc1b604482015260640161083b565b6001600081905260208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f80546001600160a01b03191690911790556001600160a01b0382161561093457813b612b1e5760405162461bcd60e51b815260206004820152600560248201526423a998181960d91b604482015260640161083b565b612b2f826000836001600019612bc3565b6109345760405162461bcd60e51b8152602060048201526005602482015264047533030360dc1b604482015260640161083b565b60006014361015612bb65760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642063616c6c64617461206c656e677468000000000000000000604482015260640161083b565b5060131936013560601c90565b60006001836001811115612bd957612bd9613a5b565b03612bf1576000808551602087018986f49050612c01565b600080855160208701888a87f190505b95945050505050565b600081831015612c1a5781610f7b565b5090919050565b600082821115612c3057600080fd5b60006115128385613b8d565b6000806001600160a01b03831615612c545782612c56565b325b90506001600160a01b038416612ce957612c883a8610612c76573a612c78565b855b612c828989612727565b906126f2565b6040519092506001600160a01b0382169083156108fc029084906000818181858888f19350505050612ce45760405162461bcd60e51b8152602060048201526005602482015264475330313160d81b604482015260640161083b565b612d38565b612cf785612c828989612727565b9150612d04848284612f1e565b612d385760405162461bcd60e51b815260206004820152600560248201526423a998189960d91b604482015260640161083b565b5095945050505050565b60045415612d7a5760405162461bcd60e51b8152602060048201526005602482015264047533230360dc1b604482015260640161083b565b8151811115612d9b5760405162461bcd60e51b815260040161083b90613a3c565b6001811015612dd45760405162461bcd60e51b815260206004820152600560248201526423a999181960d91b604482015260640161083b565b600160005b8351811015612eeb576000848281518110612df657612df66139b4565b6020026020010151905060006001600160a01b0316816001600160a01b031614158015612e2d57506001600160a01b038116600114155b8015612e4257506001600160a01b0381163014155b8015612e605750806001600160a01b0316836001600160a01b031614155b612e7c5760405162461bcd60e51b815260040161083b906137ef565b6001600160a01b038181166000908152600260205260409020541615612eb45760405162461bcd60e51b815260040161083b9061380e565b6001600160a01b03928316600090815260026020526040902080546001600160a01b03191693821693909317909255600101612dd9565b506001600160a01b0316600090815260026020526040902080546001600160a01b03191660011790559051600355600455565b604080516001600160a01b03841660248201526044808201849052825180830390910181526064909101909152602080820180516001600160e01b031663a9059cbb60e01b1781528251600093929184919082896127105a03f13d8015612f905760208114612f985760009350612fa3565b819350612fa3565b600051158215171593505b5050509392505050565b6001600160a01b0381168114612fc257600080fd5b50565b6001600160e01b031981168114612fc257600080fd5b60008060408385031215612fee57600080fd5b8235612ff981612fad565b9150602083013561300981612fc5565b809150509250929050565b803561301f81612fad565b919050565b6000806040838503121561303757600080fd5b823561304281612fad565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261307757600080fd5b81356001600160401b038082111561309157613091613050565b604051601f8301601f19908116603f011681019082821181831017156130b9576130b9613050565b816040528381528660208588010111156130d257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561310857600080fd5b8435935060208501356001600160401b038082111561312657600080fd5b61313288838901613066565b9450604087013591508082111561314857600080fd5b5061315587828801613066565b949793965093946060013593505050565b60008083601f84011261317857600080fd5b5081356001600160401b0381111561318f57600080fd5b6020830191508360208285010111156131a757600080fd5b9250929050565b6000806000604084860312156131c357600080fd5b8335925060208401356001600160401b038111156131e057600080fd5b6131ec86828701613166565b9497909650939450505050565b60006020828403121561320b57600080fd5b5035919050565b60006020828403121561322457600080fd5b8135610f7b81612fad565b6000806040838503121561324257600080fd5b82359150602083013561300981612fad565b80356002811061301f57600080fd5b6000806000806080858703121561327957600080fd5b843561328481612fad565b93506020850135925060408501356001600160401b038111156132a657600080fd5b6132b287828801613066565b9250506132c160608601613254565b905092959194509250565b60005b838110156132e75781810151838201526020016132cf565b50506000910152565b600081518084526133088160208601602086016132cc565b601f01601f19169290920160200192915050565b821515815260406020820152600061151260408301846132f0565b6000806040838503121561334a57600080fd5b50508035926020909101359150565b602081526000610f7b60208301846132f0565b60008060008060008060008060008060006101408c8e03121561338e57600080fd5b6133978c613014565b9a5060208c013599506001600160401b038060408e013511156133b957600080fd5b6133c98e60408f01358f01613166565b909a5098506133da60608e01613254565b975060808d0135965060a08d0135955060c08d013594506133fd60e08e01613014565b935061340c6101008e01613014565b9250806101208e0135111561342057600080fd5b506134328d6101208e01358e01613066565b90509295989b509295989b9093969950565b60008060006060848603121561345957600080fd5b8335925060208401356001600160401b038082111561347757600080fd5b61348387838801613066565b9350604086013591508082111561349957600080fd5b506134a686828701613066565b9150509250925092565b60008151808452602080850194506020840160005b838110156134ea5781516001600160a01b0316875295820195908201906001016134c5565b509495945050505050565b602081526000610f7b60208301846134b0565b6000806040838503121561351b57600080fd5b823561352681612fad565b915060208301356001600160401b0381111561354157600080fd5b61354d85828601613066565b9150509250929050565b6000806000806000806000806000806101008b8d03121561357757600080fd5b8a356001600160401b038082111561358e57600080fd5b818d0191508d601f8301126135a257600080fd5b8135818111156135b157600080fd5b8e60208260051b85010111156135c657600080fd5b60208381019d50909b508d013599506135e160408e01613014565b985060608d01359150808211156135f757600080fd5b506136048d828e01613166565b9097509550613617905060808c01613014565b935061362560a08c01613014565b925060c08b0135915061363a60e08c01613014565b90509295989b9194979a5092959850565b60408152600061365e60408301856134b0565b905060018060a01b03831660208301529392505050565b60008060008060008060008060008060006101408c8e03121561369757600080fd5b8b356136a281612fad565b9a5060208c0135995060408c01356001600160401b038111156136c457600080fd5b6136d08e828f01613166565b909a5098506136e3905060608d01613254565b965060808c0135955060a08c0135945060c08c0135935060e08c013561370881612fad565b92506101008c013561371981612fad565b809250506101208c013590509295989b509295989b9093969950565b6000806040838503121561374857600080fd5b823561375381612fad565b9150602083013561300981612fad565b60008060006060848603121561377857600080fd5b833561378381612fad565b9250602084013561379381612fad565b915060408401356137a381612fad565b809150509250925092565b6000806000606084860312156137c357600080fd5b83356137ce81612fad565b925060208401356137de81612fad565b929592945050506040919091013590565b602080825260059082015264475332303360d81b604082015260600190565b60208082526005908201526411d4cc8c0d60da1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000600182016138555761385561382d565b5060010190565b60408152600061386f60408301856132f0565b8281036020840152612c0181856132f0565b60006020828403121561389357600080fd5b8151610f7b81612fc5565b60ff82811682821603908111156112075761120761382d565b600080858511156138c757600080fd5b838611156138d457600080fd5b5050820193919092039150565b600080600080608085870312156138f757600080fd5b843593506020850135925060408501356001600160401b038082111561391c57600080fd5b61392888838901613066565b9350606087013591508082111561393e57600080fd5b5061394b87828801613066565b91505092959194509250565b600060018060a01b03808a16835280891660208401525086604083015285606083015284608083015260e060a083015261399460e08301856132f0565b82810360c08401526139a681856132f0565b9a9950505050505050505050565b634e487b7160e01b600052603260045260246000fd5b6080815260006139dd60808301876134b0565b6020830195909552506001600160a01b0392831660408201529116606090910152919050565b600060208284031215613a1557600080fd5b81518015158114610f7b57600080fd5b80820281158282048414176112075761120761382d565b602080825260059082015264475332303160d81b604082015260600190565b634e487b7160e01b600052602160045260246000fd5b60028110613a8f57634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038d168152602081018c90526101606040820181905281018a905260006101808b8d828501376000838d01820152601f8c01601f19168301613adf606085018d613a71565b8a60808501528960a08501528860c0850152613b0660e08501896001600160a01b03169052565b6001600160a01b0387166101008501528184820301610120850152613b2d828201876132f0565b92505050613b476101408301846001600160a01b03169052565b9d9c50505050505050505050505050565b808201808211156112075761120761382d565b600082613b8857634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156112075761120761382d565b6080808252810185905260008660a08301825b88811015613be3578235613bc681612fad565b6001600160a01b0316825260209283019290910190600101613bb3565b50602084019690965250506001600160a01b039283166040820152911660609091015292915050565b8183823760009101908152919050565b8b81526001600160a01b038b81166020830152604082018b9052606082018a9052610160820190613c50608084018b613a71565b60a083019890985260c082019690965260e0810194909452918516610100840152909316610120820152610140019190915295945050505050565b600081613c9a57613c9a61382d565b506000190190565b82815260008251613cba8160208501602087016132cc565b919091016020019392505050565b600060208284031215613cda57600080fd5b5051919050565b838152606060208201526000613cfa60608301856132f0565b8281036040840152613d0c81856132f0565b969550505050505056fea2646970667358221220ff64f685cc141b5510188b45ab21cd32f18157e89ea60f3f979e5a663db4f73564736f6c63430008160033",
    "sourceMap": "306:1541:54:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;538:35:37;;563:9;160:25:56;;551:10:37;;538:35;;148:2:56;133:18;538:35:37;;;;;;;306:1541:54;;;;;;;;;;;-1:-1:-1;479:66:32;3341:11;;;3365:63;;3402:12;3365:63;3460:14;3457:1;3454;3441:34;3697:8;3693:2;3689:17;3673:14;3666:41;3855:1;3852;3847:2;3831:14;3827:23;3824:1;3821;3812:7;3805:5;3800:57;3785:72;;3891:16;3888:1;3885;3870:38;3931:7;3921:78;;3968:16;3965:1;3958:27;3921:78;;4022:16;4019:1;4012:27;1409:62:45;;;;;;;;;;-1:-1:-1;1409:62:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;160:25:56;;;148:2;133:18;1409:62:45;;;;;;;;2399:625:35;;;;;;;;;;-1:-1:-1;2399:625:35;;;;;:::i;:::-;;:::i;:::-;;13892:3837:30;;;;;;;;;;-1:-1:-1;13892:3837:30;;;;;:::i;:::-;;:::i;4788:2460:47:-;;;;;;;;;;-1:-1:-1;4788:2460:47;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;4070:33:56;;;4052:52;;4040:2;4025:18;4788:2460:47;3908:202:56;726:139:54;;;;;;;;;;-1:-1:-1;726:139:54;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4573:32:56;;;4555:51;;4543:2;4528:18;726:139:54;4409:203:56;1096:749:54;;;;;;;;;;;;;:::i;5780:151:34:-;;;;;;;;;;-1:-1:-1;5780:151:34;;;;;:::i;:::-;;:::i;:::-;;;5040:14:56;;5033:22;5015:41;;5003:2;4988:18;5780:151:34;4875:187:56;6140:138:35;;;;;;;;;;-1:-1:-1;6140:138:35;;;;;:::i;:::-;;:::i;3615:817:47:-;;;;;;;;;;-1:-1:-1;3615:817:47;;;;;:::i;:::-;;:::i;18522:211:30:-;;;;;;;;;;-1:-1:-1;18689:9:30;18522:211;;3622:594:34;;;;;;;;;;-1:-1:-1;3622:594:34;;;;;:::i;:::-;;:::i;2896:91:47:-;;;;;;;;;;-1:-1:-1;2896:91:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2896:91:47;;;4707:959:34;;;;;;;;;;-1:-1:-1;4707:959:34;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;785:464:42:-;;;;;;;;;;-1:-1:-1;785:464:42;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3360:49:30:-;;;;;;;;;;-1:-1:-1;3360:49:30;;;;;:::i;:::-;;;;;;;;;;;;;;2001:426:34;;;;;;;;;;-1:-1:-1;2001:426:34;;;;;:::i;:::-;;:::i;5398:360:35:-;;;;;;;;;;-1:-1:-1;5398:360:35;;;;;:::i;:::-;;:::i;7433:3556:30:-;;;;;;:::i;:::-;;:::i;3521:69::-;;;;;;;;;;-1:-1:-1;3521:69:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;12858:353;;;;;;;;;;-1:-1:-1;12858:353:30;;;;;:::i;:::-;;:::i;6383:437:35:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3188:20:30:-;;;;;;;;;;;;;;;;1882:486:42;;;;;;;;;;-1:-1:-1;1882:486:42;;;;;:::i;:::-;;:::i;4740:1151:30:-;;;;;;;;;;-1:-1:-1;4740:1151:30;;;;;:::i;:::-;;:::i;6437:1535:34:-;;;;;;;;;;-1:-1:-1;6437:1535:34;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;18133:228:30:-;;;;;;;;;;-1:-1:-1;18133:228:30;;;;;:::i;:::-;;:::i;21385:478::-;;;;;;;;;;-1:-1:-1;21385:478:30;;;;;:::i;:::-;;:::i;2677:423:34:-;;;;;;;;;;-1:-1:-1;2677:423:34;;;;;:::i;:::-;;:::i;1962:386:33:-;;;;;;;;;;-1:-1:-1;1962:386:33;;;;;:::i;:::-;;:::i;4416:796:35:-;;;;;;;;;;-1:-1:-1;4416:796:35;;;;;:::i;:::-;;:::i;5915:87::-;;;;;;;;;;-1:-1:-1;5986:9:35;;5915:87;;19858:822:30;;;;;;;;;;-1:-1:-1;19858:822:30;;;;;:::i;:::-;;:::i;2437:161:32:-;;;;;;;;;;-1:-1:-1;2437:161:32;;;;;:::i;:::-;;:::i;18901:149:30:-;;;;;;;;;;;;;:::i;3380:697:35:-;;;;;;;;;;-1:-1:-1;3380:697:35;;;;;:::i;:::-;;:::i;2205:40:30:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2205:40:30;;;;;2399:625:35;505:17:39;:15;:17::i;:::-;-1:-1:-1;;;;;2575:19:35;::::1;::::0;;::::1;::::0;:47:::1;;-1:-1:-1::0;;;;;;2598:24:35;::::1;687:3;2598:24;;2575:47;:73;;;;-1:-1:-1::0;;;;;;2626:22:35;::::1;2643:4;2626:22;;2575:73;2567:91;;;;-1:-1:-1::0;;;2567:91:35::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;2716:13:35;;::::1;2741:1;2716:13:::0;;;:6:::1;:13;::::0;;;;;::::1;:27:::0;2708:45:::1;;;;-1:-1:-1::0;;;2708:45:35::1;;;;;;;:::i;:::-;2779:6;:23;::::0;;;;-1:-1:-1;;;;;2763:13:35;;::::1;2779:23;2763:13:::0;;;2779:23;2763:13;;:39;;2779:23;;;::::1;-1:-1:-1::0;;;;;;2763:39:35;;::::1;;::::0;;;-1:-1:-1;2812:23:35;;:31;;;;::::1;;::::0;;;2853:10:::1;:12:::0;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;2880:17:35::1;::::0;-1:-1:-1;;;;;2880:17:35;::::1;::::0;::::1;::::0;;;::::1;2978:10;2965:9;;:23;2961:56;;2990:27;3006:10;2990:15;:27::i;:::-;2399:625:::0;;:::o;13892:3837:30:-;14126:26;:18;14149:2;14126:22;:26::i;:::-;14105:10;:17;:47;;14097:65;;;;-1:-1:-1;;;14097:65:30;;17462:2:56;14097:65:30;;;17444:21:56;17501:1;17481:18;;;17474:29;-1:-1:-1;;;17519:18:56;;;17512:35;17564:18;;14097:65:30;17260:328:56;14097:65:30;14224:17;14264:20;14294:7;14311:9;14330;14349;14368:3355;14384:18;14380:1;:22;14368:3355;;;1176:4:40;1172:14;;;1210:40;;1244:4;1210:40;;1204:47;1309:4;1275:40;;1269:47;1627:40;;;;1621:47;1670:4;1617:58;;-1:-1:-1;1204:47:40;;-1:-1:-1;1269:47:40;-1:-1:-1;14487:1:30;14482:6;;;14478:3068;;14516:15;;;;;;:27;;14508:45;;;;-1:-1:-1;;;14508:45:30;;17795:2:56;14508:45:30;;;17777:21:56;17834:1;17814:18;;;17807:29;-1:-1:-1;;;17852:18:56;;;17845:35;17897:18;;14508:45:30;17593:328:56;14508:45:30;14770:1;;-1:-1:-1;14770:1:30;;15175:26;:18;15198:2;15175:22;:26::i;:::-;15161:40;;;15153:58;;;;-1:-1:-1;;;15153:58:30;;18128:2:56;15153:58:30;;;18110:21:56;18167:1;18147:18;;;18140:29;-1:-1:-1;;;18185:18:56;;;18178:35;18230:18;;15153:58:30;17926:328:56;15153:58:30;15373:17;;15351:18;15359:1;15366:2;15351:14;:18::i;:::-;:39;;15343:57;;;;-1:-1:-1;;;15343:57:30;;18461:2:56;15343:57:30;;;18443:21:56;18500:1;18480:18;;;18473:29;-1:-1:-1;;;18518:18:56;;;18511:35;18563:18;;15343:57:30;18259:328:56;15343:57:30;15739:4;15719:18;;;15715:29;;15709:36;15836:17;;15709:36;;15788:44;;15709:36;;15788:18;;15719;;15788:14;:18::i;:::-;:22;;:44::i;:::-;:65;;15780:83;;;;-1:-1:-1;;;15780:83:30;;18794:2:56;15780:83:30;;;18776:21:56;18833:1;18813:18;;;18806:29;-1:-1:-1;;;18851:18:56;;;18844:35;18896:18;;15780:83:30;18592:328:56;15780:83:30;16292:75;;-1:-1:-1;;;16292:75:30;;;16224:18;;;16244:4;16220:29;;-1:-1:-1;;;;;16292:50:30;;;223:10:49;;16292:75:30;;16343:4;;16220:29;;16292:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;16292:98:30;;16284:116;;;;-1:-1:-1;;;16284:116:30;;19763:2:56;16284:116:30;;;19745:21:56;19802:1;19782:18;;;19775:29;-1:-1:-1;;;19820:18:56;;;19813:35;19865:18;;16284:116:30;19561:328:56;16284:116:30;14490:1925;;14478:3068;;;16425:1;:6;;16430:1;16425:6;16421:1125;;16642:1;;-1:-1:-1;16642:1:30;;16817:10;-1:-1:-1;;;;;16817:26:30;;;;:73;;-1:-1:-1;;;;;;16847:28:30;;;;;;:14;:28;;;;;;;;:38;;;;;;;;;:43;;16817:73;16809:91;;;;-1:-1:-1;;;16809:91:30;;20096:2:56;16809:91:30;;;20078:21:56;20135:1;20115:18;;;20108:29;-1:-1:-1;;;20153:18:56;;;20146:35;20198:18;;16809:91:30;19894:328:56;16809:91:30;16421:1125;;;16929:2;16925:1;:6;;;16921:625;;;17222:62;;20469:66:56;17222:62:30;;;20457:79:56;20552:12;;;20545:28;;;17202:97:30;;20589:12:56;;17222:62:30;;;;;;;;;;;;17212:73;;;;;;17291:1;17287;:5;;;;:::i;:::-;17202:97;;;;;;;;;;;;20995:25:56;;;;21068:4;21056:17;;;21036:18;;;21029:45;21090:18;;;21083:34;;;21133:18;;;21126:34;;;20967:19;;17202:97:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17187:112;;16921:625;;;17503:28;;;;;;;;;;;;20995:25:56;;;21068:4;21056:17;;21036:18;;;21029:45;;;;21090:18;;;21083:34;;;21133:18;;;21126:34;;;17503:28:30;;20967:19:56;;17503:28:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17488:43;;16921:625;17582:9;-1:-1:-1;;;;;17567:24:30;:12;-1:-1:-1;;;;;17567:24:30;;:62;;;;-1:-1:-1;;;;;;17595:20:30;;;17627:1;17595:20;;;:6;:20;;;;;;;:34;;17567:62;:97;;;;-1:-1:-1;;;;;;17633:31:30;;687:3:35;17633:31:30;;17567:97;17559:115;;;;-1:-1:-1;;;17559:115:30;;21373:2:56;17559:115:30;;;21355:21:56;21412:1;21392:18;;;21385:29;-1:-1:-1;;;21430:18:56;;;21423:35;21475:18;;17559:115:30;21171:328:56;17559:115:30;17700:12;;-1:-1:-1;17700:12:30;;14404:3;;14368:3355;;;14020:3709;;;;;;13892:3837;;;;:::o;4788:2460:47:-;4887:12;4912:9;4923:14;4941:13;:11;:13::i;:::-;4911:43;;-1:-1:-1;4911:43:47;-1:-1:-1;5093:1:47;5073:21;;5069:1998;;-1:-1:-1;;;;;;5262:30:47;;5244:50;-1:-1:-1;;;5411:41:47;;:67;;;;-1:-1:-1;5476:2:47;5456:22;;;5411:67;5407:1650;;;6118:23;;6174:15;6186:2;6184:1;6174:9;;:15;:::i;:::-;6163:47;;;;;;;:::i;:::-;-1:-1:-1;;;;;6263:21:47;;;6229:31;6263:21;;;:15;:21;;;;;;;;:38;;;;;;;;;6117:93;;-1:-1:-1;6117:93:47;;-1:-1:-1;6263:38:47;6404:31;;6400:643;;6464:23;;6524:13;:9;6534:1;6524:9;;:13;:::i;:::-;6513:59;;;;;;;:::i;:::-;6459:113;;;;;;6750:5;6682:63;6707:15;6724:8;6734:10;6682:24;:63::i;:::-;6672:74;;;;;;:83;6668:357;;6904:8;-1:-1:-1;;;;;6904:29:47;;6934:4;6940:6;6948:5;6955:15;6972:8;6982:10;6994:7;6904:98;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6897:105;;;;;;;;;;;;6668:357;6437:606;;6400:643;5480:1577;;;5407:1650;5096:1971;5069:1998;7194:47;7218:4;7224:5;7231:9;;7194:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7194:23:47;;-1:-1:-1;;;7194:47:47:i;:::-;7187:54;;;;4788:2460;;;;;;:::o;726:139:54:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;726:139:54;;-1:-1:-1;726:139:54;:::o;1096:749::-;1128:23;1154:11;:9;:11::i;:::-;1248:12;;;1181:19;1248:12;;;;;;;;;1128:37;;-1:-1:-1;1181:19:54;1270:55;697:42:51;1270:26:54;:55::i;:::-;1335:36;1348:11;1361:9;1335:12;:36::i;:::-;1397:7;1405:1;1397:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1387:75:54;;1409:7;1418:1;1421:11;697:42:51;1387:75:54;;;;;;;;;:::i;:::-;;;;;;;;1510:4;1473:45;;;;:15;:45;;;;;;;;866:66:51;1473:63:54;;;;;;;;;:104;;-1:-1:-1;;;;;;1473:104:54;784:42:51;1473:104:54;;;;;;1592:107;;;;;;24477:25:56;;-1:-1:-1;;;;;24538:32:56;24533:2;24518:18;;24511:60;24465:2;24450:18;;24271:306;1592:107:54;;;;;;;;1715:9;1710:129;1734:6;:13;1730:17;;1710:129;;;1775:6;1782:1;1775:9;;;;;;;;:::i;:::-;;;;;;;;;;;1768:60;;-1:-1:-1;;;1768:60:54;;784:42:51;1768:60:54;;;24756:51:56;-1:-1:-1;;24823:18:56;;;24816:34;-1:-1:-1;;;;;1775:9:54;;;;1768:25;;24729:18:56;;1768:60:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1749:3:54;;1710:129;;;;1118:727;;;1096:749::o;5780:151:34:-;5842:4;1005:3;-1:-1:-1;;;;;5865:26:34;;;;;;:59;;-1:-1:-1;;;;;;5895:15:34;;;5922:1;5895:15;;;:7;:15;;;;;;;:29;;5865:59;5858:66;5780:151;-1:-1:-1;;5780:151:34:o;6140:138:35:-;6193:4;-1:-1:-1;;;;;6216:24:35;;687:3;6216:24;;;;:55;;-1:-1:-1;;;;;;;6244:13:35;;;6269:1;6244:13;;;:6;:13;;;;;;;:27;;;6140:138::o;3615:817:47:-;1614:10:44;1779:12:45;:10;:12::i;:::-;-1:-1:-1;;;;;1779:26:45;;1771:69;;;;-1:-1:-1;;;1771:69:45;;25345:2:56;1771:69:45;;;25327:21:56;25384:2;25364:18;;;25357:30;25423:32;25403:18;;;25396:60;25473:18;;1771:69:45;25143:354:56;1771:69:45;3738:9:47::1;3763:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;3824:21:47;;::::1;3787:34;3824:21:::0;;;:15:::1;:21;::::0;;;;;;;:38;;;;;;;;;3738:39;;-1:-1:-1;3824:38:47;;::::1;::::0;3876:34;::::1;::::0;:72;::::1;;;-1:-1:-1::0;;;;;;3914:34:47;::::1;::::0;::::1;3876:72;3872:554;;;-1:-1:-1::0;;;;;3971:21:47;::::1;;::::0;;;:15:::1;:21;::::0;;;;;;;:38;;;;;;;;;3964:45;;-1:-1:-1;;;;;;3964:45:47::1;::::0;;4028:44;;160:25:56;;;4028:44:47::1;::::0;133:18:56;4028:44:47::1;;;;;;;;3872:554;;;-1:-1:-1::0;;;;;4103:21:47;;::::1;;::::0;;;:15:::1;:21;::::0;;;;;;;:38;;;;;;;;:52;;-1:-1:-1;;;;;;4103:52:47::1;::::0;;::::1;;::::0;;4173:34;::::1;4169:247;;4232:55;::::0;;24477:25:56;;;-1:-1:-1;;;;;24538:32:56;;;24533:2;24518:18;;24511:60;4232:55:47;::::1;::::0;::::1;::::0;24450:18:56;4232:55:47::1;24271:306:56::0;4169:247:47::1;4353:4;-1:-1:-1::0;;;;;4331:70:47::1;;4359:15;4376:11;4389;4331:70;;;;;;;25768:25:56::0;;;-1:-1:-1;;;;;25867:15:56;;;25862:2;25847:18;;25840:43;25919:15;25914:2;25899:18;;25892:43;25756:2;25741:18;;25502:439;4331:70:47::1;;;;;;;;3728:704;;3615:817:::0;;:::o;3622:594:34:-;3791:12;3872:10;1005:3;3872:30;;;;:67;;-1:-1:-1;3914:10:34;3937:1;3906:19;;;:7;:19;;;;;;-1:-1:-1;;;;;3906:19:34;:33;;3872:67;3864:85;;;;-1:-1:-1;;;3864:85:34;;26148:2:56;3864:85:34;;;26130:21:56;26187:1;26167:18;;;26160:29;-1:-1:-1;;;26205:18:56;;;26198:35;26250:18;;3864:85:34;25946:328:56;3864:85:34;4031:54;4039:2;4043:5;4050:4;4056:9;-1:-1:-1;;4031:7:34;:54::i;:::-;4021:64;;4099:7;4095:114;;;4113:38;;4140:10;;4113:38;;;;;4095:114;;;4171:38;;4198:10;;4171:38;;;;;4095:114;3622:594;;;;;;:::o;4707:959::-;4878:12;4892:23;4937:53;4963:2;4967:5;4974:4;4980:9;4937:25;:53::i;:::-;4927:63;;5137:4;5131:11;5379:4;5361:16;5357:27;5352:3;5348:37;5342:4;5335:51;5441:16;5436:3;5429:29;5535:16;5532:1;5525:4;5520:3;5516:14;5501:51;5647:3;5633:17;;;4707:959;;;;;;;:::o;785:464:42:-;860:12;884:19;916:11;:6;925:2;916:11;:::i;:::-;-1:-1:-1;;;;;906:22:42;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;906:22:42;;884:44;;943:13;938:282;970:6;962:5;:14;938:282;;;1106:18;;;1100:25;1183:4;1172:16;;;1149:40;;;1142:54;978:7;;938:282;;;-1:-1:-1;1236:6:42;785:464;-1:-1:-1;;;785:464:42:o;2001:426:34:-;505:17:39;:15;:17::i;:::-;-1:-1:-1;;;;;2129:20:34;::::1;::::0;;::::1;::::0;:50:::1;;-1:-1:-1::0;;;;;;2153:26:34;::::1;1005:3;2153:26;;2129:50;2121:68;;;::::0;-1:-1:-1;;;2121:68:34;;26654:2:56;2121:68:34::1;::::0;::::1;26636:21:56::0;26693:1;26673:18;;;26666:29;-1:-1:-1;;;26711:18:56;;;26704:35;26756:18;;2121:68:34::1;26452:328:56::0;2121:68:34::1;-1:-1:-1::0;;;;;2248:15:34;;::::1;2275:1;2248:15:::0;;;:7:::1;:15;::::0;;;;;::::1;:29:::0;2240:47:::1;;;::::0;-1:-1:-1;;;2240:47:34;;26987:2:56;2240:47:34::1;::::0;::::1;26969:21:56::0;27026:1;27006:18;;;26999:29;-1:-1:-1;;;27044:18:56;;;27037:35;27089:18;;2240:47:34::1;26785:328:56::0;2240:47:34::1;2315:7;:25;::::0;;;;;;-1:-1:-1;;;;;2297:15:34;;::::1;2315:25;2297:15:::0;;;2315:25;2297:15;;;:43;;2315:25;;;::::1;-1:-1:-1::0;;;;;;2297:43:34;;::::1;;::::0;;;2350:25;;;:34;;;;::::1;::::0;::::1;::::0;;;2399:21;2297:15;;2399:21:::1;::::0;::::1;2001:426:::0;:::o;5398:360:35:-;505:17:39;:15;:17::i;:::-;5562:10:35::1;;5548;:24;;5540:42;;;;-1:-1:-1::0;;;5540:42:35::1;;;;;;;:::i;:::-;5666:1;5652:10;:15;;5644:33;;;::::0;-1:-1:-1;;;5644:33:35;;27653:2:56;5644:33:35::1;::::0;::::1;27635:21:56::0;27692:1;27672:18;;;27665:29;-1:-1:-1;;;27710:18:56;;;27703:35;27755:18;;5644:33:35::1;27451:328:56::0;5644:33:35::1;5687:9;:22:::0;;;5724:27:::1;::::0;160:25:56;;;5724:27:35::1;::::0;148:2:56;133:18;5724:27:35::1;;;;;;;5398:360:::0;:::o;7433:3556:30:-;7779:12;7803:14;7930:23;7956:388;8031:2;8051:5;8074:4;;8096:9;8123;8182:7;8207:8;8233;8259:14;8325:5;;7956:21;:388::i;:::-;8413:5;:7;;7930:414;;-1:-1:-1;8413:5:30;:7;;;:::i;:::-;;;;-1:-1:-1;;8443:21:30;;;;;;;-1:-1:-1;8478:47:30;8443:21;8453:10;8514;8478:15;:47::i;:::-;7916:620;8545:13;8561:10;1306:66:33;2911:11;;2712:226;8561:10:30;8545:26;-1:-1:-1;;;;;;8599:19:30;;;8595:547;;8644:5;-1:-1:-1;;;;;8638:29:30;;8729:2;8753:5;8780:4;;8806:9;8837;8904:7;8933:8;8963;8993:14;9067:10;9099;8638:489;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8595:547;9456:45;9484:16;:9;9496:4;9484:16;:::i;:::-;9476:2;9458:14;:9;9470:2;9458:14;:::i;:::-;9457:21;;;;:::i;:::-;9456:27;;:45::i;:::-;:51;;9504:3;9456:51;:::i;:::-;9443:9;:64;;9435:82;;;;-1:-1:-1;;;9435:82:30;;30066:2:56;9435:82:30;;;30048:21:56;30105:1;30085:18;;;30078:29;-1:-1:-1;;;30123:18:56;;;30116:35;30168:18;;9435:82:30;29864:328:56;9435:82:30;9630:15;9648:9;9630:27;;9936:83;9944:2;9948:5;9955:4;;9936:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9961:9;9972:8;9984:1;9972:13;:46;;10009:9;9936:7;:83::i;9972:46::-;10001:4;9989:9;:16;;;;:::i;:::-;9936:7;:83::i;:::-;9926:93;;10043:22;10055:9;10043:7;;:11;:22::i;:::-;10033:32;;10349:7;:25;;;-1:-1:-1;10360:14:30;;;10349:25;:42;;;-1:-1:-1;10378:13:30;;;10349:42;10341:60;;;;-1:-1:-1;;;10341:60:30;;30532:2:56;10341:60:30;;;30514:21:56;30571:1;30551:18;;;30544:29;-1:-1:-1;;;30589:18:56;;;30582:35;30634:18;;10341:60:30;30330:328:56;10341:60:30;10550:15;10587:12;;10583:128;;10629:67;10643:7;10652;10661:8;10671;10681:14;10629:13;:67::i;:::-;10619:77;;10583:128;10728:7;10724:108;;;10759:6;10742:33;10767:7;10742:33;;;;160:25:56;;148:2;133:18;;14:177;10742:33:30;;;;;;;;10724:108;;;10816:6;10799:33;10824:7;10799:33;;;;160:25:56;;148:2;133:18;;14:177;10799:33:30;;;;;;;;10724:108;-1:-1:-1;;;;;;;10870:19:30;;;10866:107;;10909:49;;-1:-1:-1;;;10909:49:30;;;;;30831:25:56;;;30899:14;;30892:22;30872:18;;;30865:50;-1:-1:-1;;;;;10909:32:30;;;;;30804:18:56;;10909:49:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10866:107;7793:3196;;7433:3556;;;;;;;;;;;;;:::o;12858:353::-;13046:9;;13114:14;13106:32;;;;-1:-1:-1;;;13106:32:30;;31128:2:56;13106:32:30;;;31110:21:56;31167:1;31147:18;;;31140:29;-1:-1:-1;;;31185:18:56;;;31178:35;31230:18;;13106:32:30;30926:328:56;13106:32:30;13148:56;13165:8;13175:4;13181:10;13193;13148:16;:56::i;6383:437:35:-;6425:16;6453:22;6492:10;;-1:-1:-1;;;;;6478:25:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6478:25:35;-1:-1:-1;687:3:35;6547:13;6597:23;;;:6;:23;;;;6453:50;;-1:-1:-1;6547:13:35;-1:-1:-1;;;;;6597:23:35;6630:162;-1:-1:-1;;;;;6637:31:35;;687:3;6637:31;6630:162;;6699:12;6684:5;6690;6684:12;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6684:27:35;;;:12;;;;;;;;;;:27;;;;6740:20;;;;;;;:6;:20;;;;;;;;;6774:7;;;;:::i;:::-;;;;6630:162;;;-1:-1:-1;6808:5:35;;6383:437;-1:-1:-1;;6383:437:35:o;1882:486:42:-;2167:1;2164;2146:15;2140:22;2133:4;2116:15;2112:26;2096:14;2089:5;2076:93;2196:7;2190:4;2183:21;;2230:16;2224:4;2217:30;2284:16;2281:1;2275:4;2260:41;2346:4;2328:16;2324:27;2321:1;2314:38;4740:1151:30;5139:32;5151:7;;5139:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5160:10:30;;-1:-1:-1;5139:11:30;;-1:-1:-1;;5139:32:30:i;:::-;-1:-1:-1;;;;;5185:29:30;;;5181:78;;5216:43;5243:15;5216:26;:43::i;:::-;5394:22;5407:2;5411:4;;5394:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5394:12:30;;-1:-1:-1;;;5394:22:30:i;:::-;5431:11;;5427:380;;5737:59;5751:7;5760:1;5763;5766:12;5780:15;5737:13;:59::i;:::-;;5427:380;5831:10;-1:-1:-1;;;;;5821:63:30;;5843:7;;5852:10;5864:2;5868:15;5821:63;;;;;;;;;;:::i;:::-;;;;;;;;4740:1151;;;;;;;;;;:::o;6437:1535:34:-;6522:22;6546:12;-1:-1:-1;;;;;6578:25:34;;1005:3;6578:25;;:51;;;6607:22;6623:5;6607:15;:22::i;:::-;6570:69;;;;-1:-1:-1;;;6570:69:34;;32457:2:56;6570:69:34;;;32439:21:56;32496:1;32476:18;;;32469:29;-1:-1:-1;;;32514:18:56;;;32507:35;32559:18;;6570:69:34;32255:328:56;6570:69:34;6668:1;6657:8;:12;6649:30;;;;-1:-1:-1;;;6649:30:34;;32790:2:56;6649:30:34;;;32772:21:56;32829:1;32809:18;;;32802:29;-1:-1:-1;;;32847:18:56;;;32840:35;32892:18;;6649:30:34;32588:328:56;6649:30:34;6752:8;-1:-1:-1;;;;;6738:23:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6738:23:34;-1:-1:-1;;;;;;6845:14:34;;;6805:19;6845:14;;;:7;:14;;;;;;6730:31;;-1:-1:-1;6845:14:34;;;-1:-1:-1;6869:192:34;-1:-1:-1;;;;;6876:18:34;;;;;;:46;;-1:-1:-1;;;;;;6898:24:34;;1005:3;6898:24;;6876:46;:72;;;;;6940:8;6926:11;:22;6876:72;6869:192;;;6985:4;6964:5;6970:11;6964:18;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6964:25:34;;;:18;;;;;;;;;;:25;;;;7010:13;;;;;;;:7;:13;;;;;;;;;;;;7037;;;;:::i;:::-;;;;6869:192;;;-1:-1:-1;;;;;7716:24:34;;1005:3;7716:24;7712:84;;7763:5;7769:15;7783:1;7769:11;:15;:::i;:::-;7763:22;;;;;;;;:::i;:::-;;;;;;;7756:29;;7712:84;7944:11;7937:5;7930:26;7916:50;6437:1535;;;;;:::o;18133:228:30:-;18211:10;18234:1;18204:18;;;:6;:18;;;;;;-1:-1:-1;;;;;18204:18:30;18196:50;;;;-1:-1:-1;;;18196:50:30;;33123:2:56;18196:50:30;;;33105:21:56;33162:1;33142:18;;;33135:29;-1:-1:-1;;;33180:18:56;;;33173:35;33225:18;;18196:50:30;32921:328:56;18196:50:30;18271:10;18256:26;;;;:14;:26;;;;;;;;:41;;;;;;;;;18300:1;18256:45;;18316:38;18283:13;;18316:38;;;18133:228;:::o;21385:478::-;21706:7;21742:113;21764:2;21768:5;21775:4;;21781:9;21792;21803:7;21812:8;21822;21832:14;21848:6;21742:21;:113::i;:::-;21732:124;;;;;;21725:131;;21385:478;;;;;;;;;;;;;:::o;2677:423:34:-;505:17:39;:15;:17::i;:::-;-1:-1:-1;;;;;2854:20:34;::::1;::::0;;::::1;::::0;:50:::1;;-1:-1:-1::0;;;;;;2878:26:34;::::1;1005:3;2878:26;;2854:50;2846:68;;;::::0;-1:-1:-1;;;2846:68:34;;26654:2:56;2846:68:34::1;::::0;::::1;26636:21:56::0;26693:1;26673:18;;;26666:29;-1:-1:-1;;;26711:18:56;;;26704:35;26756:18;;2846:68:34::1;26452:328:56::0;2846:68:34::1;-1:-1:-1::0;;;;;2932:19:34;;::::1;;::::0;;;:7:::1;:19;::::0;;;;;;::::1;:29:::0;;::::1;;2924:47;;;::::0;-1:-1:-1;;;2924:47:34;;33456:2:56;2924:47:34::1;::::0;::::1;33438:21:56::0;33495:1;33475:18;;;33468:29;-1:-1:-1;;;33513:18:56;;;33506:35;33558:18;;2924:47:34::1;33254:328:56::0;2924:47:34::1;-1:-1:-1::0;;;;;3003:15:34;;::::1;;::::0;;;:7:::1;:15;::::0;;;;;;;2981:19;;::::1;::::0;;;;;:37;;3003:15;;;::::1;-1:-1:-1::0;;;;;;2981:37:34;;::::1;;::::0;;;3028:15;;;:28;;;;::::1;::::0;;;3071:22;;3003:15;;3071:22:::1;::::0;::::1;2677:423:::0;;:::o;1962:386:33:-;505:17:39;:15;:17::i;:::-;-1:-1:-1;;;;;2029:19:33;::::1;::::0;2025:123:::1;;2072:55;::::0;-1:-1:-1;;;2072:55:33;;-1:-1:-1;;;2072:55:33::1;::::0;::::1;4052:52:56::0;-1:-1:-1;;;;;2072:30:33;::::1;::::0;::::1;::::0;4025:18:56;;2072:55:33::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2064:73;;;::::0;-1:-1:-1;;;2064:73:33;;33789:2:56;2064:73:33::1;::::0;::::1;33771:21:56::0;33828:1;33808:18;;;33801:29;-1:-1:-1;;;33846:18:56;;;33839:35;33891:18;;2064:73:33::1;33587:328:56::0;2064:73:33::1;1306:66;2279:19:::0;;;2322::::1;::::0;-1:-1:-1;;;;;2322:19:33;::::1;::::0;::::1;::::0;2157:12:::1;::::0;2322:19:::1;2015:333;1962:386:::0;:::o;4416:796:35:-;505:17:39;:15;:17::i;:::-;-1:-1:-1;;;;;4600:22:35;::::1;::::0;;::::1;::::0;:53:::1;;-1:-1:-1::0;;;;;;4626:27:35;::::1;687:3;4626:27;;4600:53;:82;;;;-1:-1:-1::0;;;;;;4657:25:35;::::1;4677:4;4657:25;;4600:82;4592:100;;;;-1:-1:-1::0;;;4592:100:35::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4750:16:35;;::::1;4778:1;4750:16:::0;;;:6:::1;:16;::::0;;;;;::::1;:30:::0;4742:48:::1;;;;-1:-1:-1::0;;;4742:48:35::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4891:22:35;::::1;::::0;;::::1;::::0;:53:::1;;-1:-1:-1::0;;;;;;4917:27:35;::::1;687:3;4917:27;;4891:53;4883:71;;;;-1:-1:-1::0;;;4883:71:35::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4972:17:35;;::::1;;::::0;;;:6:::1;:17;::::0;;;;;;::::1;:29:::0;;::::1;;4964:47;;;::::0;-1:-1:-1;;;4964:47:35;;34122:2:56;4964:47:35::1;::::0;::::1;34104:21:56::0;34161:1;34141:18;;;34134:29;-1:-1:-1;;;34179:18:56;;;34172:35;34224:18;;4964:47:35::1;33920:328:56::0;4964:47:35::1;-1:-1:-1::0;;;;;5040:16:35;;::::1;;::::0;;;:6:::1;:16;::::0;;;;;;;5021;;::::1;::::0;;;;;;:35;;5040:16;;::::1;-1:-1:-1::0;;;;;;5021:35:35;;::::1;;::::0;;5066:17;;::::1;::::0;;;;;:28;;;::::1;::::0;;::::1;::::0;;;5104:16;;;:29;;;;::::1;::::0;;;5148:22;;5040:16;;5148:22:::1;::::0;::::1;5185:20;::::0;-1:-1:-1;;;;;5185:20:35;::::1;::::0;::::1;::::0;;;::::1;4416:796:::0;;;:::o;19858:822:30:-;20182:12;20206:18;2725:66;20278:16;;20312:2;20332:5;20365:4;;20355:15;;;;;;;:::i;:::-;;;;;;;;;20250:321;;;;;20388:9;;20415;;20442:7;;20467:8;;20493;;20519:14;;20551:6;;20250:321;;;:::i;:::-;;;;-1:-1:-1;;20250:321:30;;;;;;;;;20227:354;;20250:321;20227:354;;;;;-1:-1:-1;;;;;;;20643:17:30;:15;:17::i;:::-;20598:75;;-1:-1:-1;;;;;;35781:15:56;;;20598:75:30;;;35769:28:56;35826:15;;;;35813:11;;;35806:36;35858:11;;;35851:27;35894:12;;;35887:28;;;35931:12;;20598:75:30;;;;;;;;;;;;20591:82;;;19858:822;;;;;;;;;;;;;:::o;2437:161:32:-;505:17:39;:15;:17::i;:::-;2510:35:32::1;2537:7;2510:26;:35::i;:::-;2560:31;::::0;-1:-1:-1;;;;;2560:31:32;::::1;::::0;::::1;::::0;;;::::1;2437:161:::0;:::o;18901:149:30:-;18949:7;2402:66;18689:9;18985:57;;;;;;36178:25:56;;;;36219:18;;36212:34;19037:4:30;36262:18:56;;;36255:60;36151:18;;18985:57:30;;;;;;;;;;;;18975:68;;;;;;18968:75;;18901:149;:::o;3380:697:35:-;505:17:39;:15;:17::i;:::-;3586:10:35::1;3581:1;3568:10;;:14;;;;:::i;:::-;:28;;3560:46;;;;-1:-1:-1::0;;;3560:46:35::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3704:19:35;::::1;::::0;;::::1;::::0;:47:::1;;-1:-1:-1::0;;;;;;3727:24:35;::::1;687:3;3727:24;;3704:47;3696:65;;;;-1:-1:-1::0;;;3696:65:35::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3779:17:35;;::::1;;::::0;;;:6:::1;:17;::::0;;;;;;::::1;:26:::0;;::::1;;3771:44;;;::::0;-1:-1:-1;;;3771:44:35;;34122:2:56;3771:44:35::1;::::0;::::1;34104:21:56::0;34161:1;34141:18;;;34134:29;-1:-1:-1;;;34179:18:56;;;34172:35;34224:18;;3771:44:35::1;33920:328:56::0;3771:44:35::1;-1:-1:-1::0;;;;;3845:13:35;;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;;3825:17;;::::1;::::0;;;;;:33;;3845:13;;;::::1;-1:-1:-1::0;;;;;;3825:33:35;;::::1;;::::0;;;3868:13;;;:26;;;;::::1;::::0;;;3904:10:::1;:12:::0;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;3931:19:35::1;::::0;-1:-1:-1;;;;;3931:19:35;::::1;::::0;::::1;::::0;;;::::1;4031:10;4018:9;;:23;4014:56;;4043:27;4059:10;4043:15;:27::i;:::-;3380:697:::0;;;:::o;248:102:39:-;306:10;328:4;306:27;298:45;;;;-1:-1:-1;;;298:45:39;;36669:2:56;298:45:39;;;36651:21:56;36708:1;36688:18;;;36681:29;-1:-1:-1;;;36726:18:56;;;36719:35;36771:18;;298:45:39;36467:328:56;298:45:39;248:102::o;382:421:43:-;440:7;680:1;685;680:6;676:45;;-1:-1:-1;709:1:43;702:8;;676:45;731:9;743:5;747:1;743;:5;:::i;:::-;731:17;-1:-1:-1;775:1:43;766:5;770:1;731:17;766:5;:::i;:::-;:10;758:19;;;;;1335:145;1393:7;;1424:5;1428:1;1424;:5;:::i;:::-;1412:17;;1452:1;1447;:6;;1439:15;;;;;2922:153:45;1614:10:44;2968:9:45;3056:12;:10;:12::i;:::-;3047:21;;2922:153;;:::o;8255:262:47:-;8370:12;8425:4;8418:12;;8439:4;8432:12;;8446:15;8490:8;8500:7;8473:35;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;8473:35:47;;;;;;;8463:46;;8473:35;8463:46;;;;-1:-1:-1;;;;;;35781:15:56;;;8401:109:47;;;35769:28:56;;;;35826:15;;;;35813:11;;;35806:36;35858:11;;;35851:27;35894:12;;;35887:28;35931:12;;8401:109:47;;;;;;;;;;;;8394:116;;8255:262;;;;;:::o;7523:707::-;7629:12;7653:24;7680:155;7718:4;-1:-1:-1;;;;;7718:20:47;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7806:17;;;;;;160:25:56;;;2667:66:47;;133:18:56;7806:17:47;;;-1:-1:-1;;7806:17:47;;;;;;;;;7796:28;;7806:17;7796:28;;;;7785:40;;;160:25:56;133:18;7785:40:47;;;;;;;;;;;;7680:24;:155::i;:::-;7867:22;;;;;;7903:16;;7653:182;;-1:-1:-1;7867:22:47;7845:19;7903:21;7899:274;;7979:32;;-1:-1:-1;;;7979:32:47;;;;;160:25:56;;;-1:-1:-1;;;;;7979:19:47;;;;;133:18:56;;7979:32:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8015:1;7979:37;7971:67;;;;-1:-1:-1;;;7971:67:47;;37744:2:56;7971:67:47;;;37726:21:56;37783:2;37763:18;;;37756:30;-1:-1:-1;;;37802:18:56;;;37795:47;37859:18;;7971:67:47;37542:341:56;7971:67:47;7899:274;;;8105:57;;-1:-1:-1;;;8105:57:47;;-1:-1:-1;;;;;8105:20:47;;;;;:57;;8126:11;;8139;;8152:9;;8105:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7899:274;-1:-1:-1;;;;8190:33:47;7523:707;-1:-1:-1;;;;;7523:707:47:o;689:1423:32:-;1916:4;-1:-1:-1;;;;;1897:24:32;;;1889:42;;;;-1:-1:-1;;;1889:42:32;;38543:2:56;1889:42:32;;;38525:21:56;38582:1;38562:18;;;38555:29;-1:-1:-1;;;38600:18:56;;;38593:35;38645:18;;1889:42:32;38341:328:56;1889:42:32;479:66;2075:21;689:1423::o;1367:450:34:-;1447:7;1484:1;1447:25;;;;;;;-1:-1:-1;;;;;1447:25:34;:39;1439:57;;;;-1:-1:-1;;;1439:57:34;;38876:2:56;1439:57:34;;;38858:21:56;38915:1;38895:18;;;38888:29;-1:-1:-1;;;38933:18:56;;;38926:35;38978:18;;1439:57:34;38674:328:56;1439:57:34;1005:3;1506:25;;;;;;;;;:44;;-1:-1:-1;;;;;;1506:44:34;;;;;;-1:-1:-1;;;;;1564:16:34;;;1560:251;;8462:20;;1596:32;;;;-1:-1:-1;;;1596:32:34;;39209:2:56;1596:32:34;;;39191:21:56;39248:1;39228:18;;;39221:29;-1:-1:-1;;;39266:18:56;;;39259:35;39311:18;;1596:32:34;39007:328:56;1596:32:34;1722:68;1730:2;1734:1;1737:4;1743:27;-1:-1:-1;;1722:7:34;:68::i;:::-;1714:86;;;;-1:-1:-1;;;1714:86:34;;39542:2:56;1714:86:34;;;39524:21:56;39581:1;39561:18;;;39554:29;-1:-1:-1;;;39599:18:56;;;39592:35;39644:18;;1714:86:34;39340:328:56;1053:379:44;1098:14;1151:2;1132:8;:21;;1124:57;;;;-1:-1:-1;;;1124:57:44;;39875:2:56;1124:57:44;;;39857:21:56;39914:2;39894:18;;;39887:30;39953:25;39933:18;;;39926:53;39996:18;;1124:57:44;39673:347:56;1124:57:44;-1:-1:-1;;;1395:14:44;1391:23;1378:37;1374:2;1370:46;;1053:379::o;783:639:31:-;951:12;992:27;979:9;:40;;;;;;;;:::i;:::-;;975:441;;1190:1;1187;1180:4;1174:11;1167:4;1161;1157:15;1153:2;1146:5;1133:59;1122:70;;975:441;;;1390:1;1387;1380:4;1374:11;1367:4;1361;1357:15;1350:5;1346:2;1339:5;1334:58;1323:69;;975:441;783:639;;;;;;;:::o;1646:105:43:-;1704:7;1735:1;1730;:6;;:14;;1743:1;1730:14;;;-1:-1:-1;1739:1:43;;1723:21;-1:-1:-1;1646:105:43:o;1025:145::-;1083:7;1115:1;1110;:6;;1102:15;;;;;;1127:9;1139:5;1143:1;1139;:5;:::i;11514:821:30:-;11702:15;;-1:-1:-1;;;;;11809:28:30;;;:66;;11861:14;11809:66;;;11848:9;11809:66;11782:93;-1:-1:-1;;;;;;11889:22:30;;11885:444;;12042:73;12078:11;12067:8;:22;:47;;12103:11;12067:47;;;12092:8;12067:47;12042:20;:7;12054;12042:11;:20::i;:::-;:24;;:73::i;:::-;12137:22;;12032:83;;-1:-1:-1;;;;;;12137:13:30;;;:22;;;;;12032:83;;12137:22;;;;12032:83;12137:13;:22;;;;;;;12129:40;;;;-1:-1:-1;;;12129:40:30;;40227:2:56;12129:40:30;;;40209:21:56;40266:1;40246:18;;;40239:29;-1:-1:-1;;;40284:18:56;;;40277:35;40329:18;;12129:40:30;40025:328:56;12129:40:30;11885:444;;;12210:34;12235:8;12210:20;:7;12222;12210:11;:20::i;:34::-;12200:44;;12266:42;12280:8;12290;12300:7;12266:13;:42::i;:::-;12258:60;;;;-1:-1:-1;;;12258:60:30;;40560:2:56;12258:60:30;;;40542:21:56;40599:1;40579:18;;;40572:29;-1:-1:-1;;;40617:18:56;;;40610:35;40662:18;;12258:60:30;40358:328:56;12258:60:30;11719:616;11514:821;;;;;;;:::o;1011:1136:35:-;1229:9;;:14;1221:32;;;;-1:-1:-1;;;1221:32:35;;40893:2:56;1221:32:35;;;40875:21:56;40932:1;40912:18;;;40905:29;-1:-1:-1;;;40950:18:56;;;40943:35;40995:18;;1221:32:35;40691:328:56;1221:32:35;1360:7;:14;1346:10;:28;;1338:46;;;;-1:-1:-1;;;1338:46:35;;;;;;;:::i;:::-;1468:1;1454:10;:15;;1446:33;;;;-1:-1:-1;;;1446:33:35;;27653:2:56;1446:33:35;;;27635:21:56;27692:1;27672:18;;;27665:29;-1:-1:-1;;;27710:18:56;;;27703:35;27755:18;;1446:33:35;27451:328:56;1446:33:35;687:3;1526:20;1574:450;1598:7;:14;1594:1;:18;1574:450;;;1678:13;1694:7;1702:1;1694:10;;;;;;;;:::i;:::-;;;;;;;1678:26;;1743:1;-1:-1:-1;;;;;1726:19:35;:5;-1:-1:-1;;;;;1726:19:35;;;:47;;;;-1:-1:-1;;;;;;1749:24:35;;687:3;1749:24;;1726:47;:73;;;;-1:-1:-1;;;;;;1777:22:35;;1794:4;1777:22;;1726:73;:98;;;;;1819:5;-1:-1:-1;;;;;1803:21:35;:12;-1:-1:-1;;;;;1803:21:35;;;1726:98;1718:116;;;;-1:-1:-1;;;1718:116:35;;;;;;;:::i;:::-;-1:-1:-1;;;;;1900:13:35;;;1925:1;1900:13;;;:6;:13;;;;;;;:27;1892:45;;;;-1:-1:-1;;;1892:45:35;;;;;;;:::i;:::-;-1:-1:-1;;;;;1951:20:35;;;;;;;:6;:20;;;;;:28;;-1:-1:-1;;;;;;1951:28:35;;;;;;;;;;;-1:-1:-1;1614:3:35;1574:450;;;-1:-1:-1;;;;;;2033:20:35;;;;;:6;:20;;;;;:38;;-1:-1:-1;;;;;;2033:38:35;687:3;2033:38;;;2094:14;;2081:10;:27;2118:9;:22;1011:1136::o;763:904:38:-;962:52;;;-1:-1:-1;;;;;24774:32:56;;962:52:38;;;24756:51:56;24823:18;;;;24816:34;;;962:52:38;;;;;;;;;;24729:18:56;;;;962:52:38;;;;;;;;;-1:-1:-1;;;;;962:52:38;-1:-1:-1;;;962:52:38;;;1336:11;;-1:-1:-1;;962:52:38;;-1:-1:-1;;1336:11:38;-1:-1:-1;1309:5:38;1301;1294;1290:17;1285:72;1377:16;1406:61;;;;1485:4;1480:102;;;;1636:1;1621:16;;1370:281;;1406:61;1446:7;1431:22;;1406:61;;1480:102;1563:1;1557:8;1550:16;1540:7;1533:15;1530:37;1523:45;1508:60;;1370:281;;;1089:572;763:904;;;;;:::o;196:137:56:-;-1:-1:-1;;;;;277:31:56;;267:42;;257:70;;323:1;320;313:12;257:70;196:137;:::o;338:131::-;-1:-1:-1;;;;;;412:32:56;;402:43;;392:71;;459:1;456;449:12;474:406;555:6;563;616:2;604:9;595:7;591:23;587:32;584:52;;;632:1;629;622:12;584:52;671:9;658:23;690:37;721:5;690:37;:::i;:::-;746:5;-1:-1:-1;803:2:56;788:18;;775:32;816;775;816;:::i;:::-;867:7;857:17;;;474:406;;;;;:::o;1067:140::-;1135:20;;1164:37;1135:20;1164:37;:::i;:::-;1067:140;;;:::o;1212:321::-;1280:6;1288;1341:2;1329:9;1320:7;1316:23;1312:32;1309:52;;;1357:1;1354;1347:12;1309:52;1396:9;1383:23;1415:37;1446:5;1415:37;:::i;:::-;1471:5;1523:2;1508:18;;;;1495:32;;-1:-1:-1;;;1212:321:56:o;1538:127::-;1599:10;1594:3;1590:20;1587:1;1580:31;1630:4;1627:1;1620:15;1654:4;1651:1;1644:15;1670:718;1712:5;1765:3;1758:4;1750:6;1746:17;1742:27;1732:55;;1783:1;1780;1773:12;1732:55;1819:6;1806:20;-1:-1:-1;;;;;1882:2:56;1878;1875:10;1872:36;;;1888:18;;:::i;:::-;1963:2;1957:9;1931:2;2017:13;;-1:-1:-1;;2013:22:56;;;2037:2;2009:31;2005:40;1993:53;;;2061:18;;;2081:22;;;2058:46;2055:72;;;2107:18;;:::i;:::-;2147:10;2143:2;2136:22;2182:2;2174:6;2167:18;2228:3;2221:4;2216:2;2208:6;2204:15;2200:26;2197:35;2194:55;;;2245:1;2242;2235:12;2194:55;2309:2;2302:4;2294:6;2290:17;2283:4;2275:6;2271:17;2258:54;2356:1;2349:4;2344:2;2336:6;2332:15;2328:26;2321:37;2376:6;2367:15;;;;;;1670:718;;;;:::o;2393:676::-;2497:6;2505;2513;2521;2574:3;2562:9;2553:7;2549:23;2545:33;2542:53;;;2591:1;2588;2581:12;2542:53;2627:9;2614:23;2604:33;;2688:2;2677:9;2673:18;2660:32;-1:-1:-1;;;;;2752:2:56;2744:6;2741:14;2738:34;;;2768:1;2765;2758:12;2738:34;2791:49;2832:7;2823:6;2812:9;2808:22;2791:49;:::i;:::-;2781:59;;2893:2;2882:9;2878:18;2865:32;2849:48;;2922:2;2912:8;2909:16;2906:36;;;2938:1;2935;2928:12;2906:36;;2961:51;3004:7;2993:8;2982:9;2978:24;2961:51;:::i;:::-;2393:676;;;;-1:-1:-1;2951:61:56;;3059:2;3044:18;3031:32;;-1:-1:-1;;;2393:676:56:o;3074:347::-;3125:8;3135:6;3189:3;3182:4;3174:6;3170:17;3166:27;3156:55;;3207:1;3204;3197:12;3156:55;-1:-1:-1;3230:20:56;;-1:-1:-1;;;;;3262:30:56;;3259:50;;;3305:1;3302;3295:12;3259:50;3342:4;3334:6;3330:17;3318:29;;3394:3;3387:4;3378:6;3370;3366:19;3362:30;3359:39;3356:59;;;3411:1;3408;3401:12;3356:59;3074:347;;;;;:::o;3426:477::-;3505:6;3513;3521;3574:2;3562:9;3553:7;3549:23;3545:32;3542:52;;;3590:1;3587;3580:12;3542:52;3626:9;3613:23;3603:33;;3687:2;3676:9;3672:18;3659:32;-1:-1:-1;;;;;3706:6:56;3703:30;3700:50;;;3746:1;3743;3736:12;3700:50;3785:58;3835:7;3826:6;3815:9;3811:22;3785:58;:::i;:::-;3426:477;;3862:8;;-1:-1:-1;3759:84:56;;-1:-1:-1;;;;3426:477:56:o;4115:180::-;4174:6;4227:2;4215:9;4206:7;4202:23;4198:32;4195:52;;;4243:1;4240;4233:12;4195:52;-1:-1:-1;4266:23:56;;4115:180;-1:-1:-1;4115:180:56:o;4617:253::-;4676:6;4729:2;4717:9;4708:7;4704:23;4700:32;4697:52;;;4745:1;4742;4735:12;4697:52;4784:9;4771:23;4803:37;4834:5;4803:37;:::i;5067:353::-;5167:6;5175;5228:2;5216:9;5207:7;5203:23;5199:32;5196:52;;;5244:1;5241;5234:12;5196:52;5280:9;5267:23;5257:33;;5340:2;5329:9;5325:18;5312:32;5353:37;5384:5;5353:37;:::i;5425:150::-;5500:20;;5549:1;5539:12;;5529:40;;5565:1;5562;5555:12;5580:626;5690:6;5698;5706;5714;5767:3;5755:9;5746:7;5742:23;5738:33;5735:53;;;5784:1;5781;5774:12;5735:53;5823:9;5810:23;5842:37;5873:5;5842:37;:::i;:::-;5898:5;-1:-1:-1;5950:2:56;5935:18;;5922:32;;-1:-1:-1;6005:2:56;5990:18;;5977:32;-1:-1:-1;;;;;6021:30:56;;6018:50;;;6064:1;6061;6054:12;6018:50;6087:49;6128:7;6119:6;6108:9;6104:22;6087:49;:::i;:::-;6077:59;;;6155:45;6196:2;6185:9;6181:18;6155:45;:::i;:::-;6145:55;;5580:626;;;;;;;:::o;6791:250::-;6876:1;6886:113;6900:6;6897:1;6894:13;6886:113;;;6976:11;;;6970:18;6957:11;;;6950:39;6922:2;6915:10;6886:113;;;-1:-1:-1;;7033:1:56;7015:16;;7008:27;6791:250::o;7046:270::-;7087:3;7125:5;7119:12;7152:6;7147:3;7140:19;7168:76;7237:6;7230:4;7225:3;7221:14;7214:4;7207:5;7203:16;7168:76;:::i;:::-;7298:2;7277:15;-1:-1:-1;;7273:29:56;7264:39;;;;7305:4;7260:50;;7046:270;-1:-1:-1;;7046:270:56:o;7321:298::-;7504:6;7497:14;7490:22;7479:9;7472:41;7549:2;7544;7533:9;7529:18;7522:30;7453:4;7569:44;7609:2;7598:9;7594:18;7586:6;7569:44;:::i;7624:248::-;7692:6;7700;7753:2;7741:9;7732:7;7728:23;7724:32;7721:52;;;7769:1;7766;7759:12;7721:52;-1:-1:-1;;7792:23:56;;;7862:2;7847:18;;;7834:32;;-1:-1:-1;7624:248:56:o;7877:217::-;8024:2;8013:9;8006:21;7987:4;8044:44;8084:2;8073:9;8069:18;8061:6;8044:44;:::i;8284:1224::-;8467:6;8475;8483;8491;8499;8507;8515;8523;8531;8539;8547:7;8601:3;8589:9;8580:7;8576:23;8572:33;8569:53;;;8618:1;8615;8608:12;8569:53;8641:29;8660:9;8641:29;:::i;:::-;8631:39;;8717:2;8706:9;8702:18;8689:32;8679:42;;-1:-1:-1;;;;;8807:2:56;8801;8790:9;8786:18;8773:32;8770:40;8767:60;;;8823:1;8820;8813:12;8767:60;8862:84;8938:7;8931:2;8920:9;8916:18;8903:32;8892:9;8888:48;8862:84;:::i;:::-;8965:8;;-1:-1:-1;8992:8:56;-1:-1:-1;9019:45:56;9060:2;9045:18;;9019:45;:::i;:::-;9009:55;;9111:3;9100:9;9096:19;9083:33;9073:43;;9163:3;9152:9;9148:19;9135:33;9125:43;;9215:3;9204:9;9200:19;9187:33;9177:43;;9239:39;9273:3;9262:9;9258:19;9239:39;:::i;:::-;9229:49;;9297:39;9331:3;9320:9;9316:19;9297:39;:::i;:::-;9287:49;;9386:2;9379:3;9368:9;9364:19;9351:33;9348:41;9345:61;;;9402:1;9399;9392:12;9345:61;;9426:76;9494:7;9486:3;9475:9;9471:19;9458:33;9447:9;9443:49;9426:76;:::i;:::-;9415:87;;8284:1224;;;;;;;;;;;;;;:::o;9839:607::-;9934:6;9942;9950;10003:2;9991:9;9982:7;9978:23;9974:32;9971:52;;;10019:1;10016;10009:12;9971:52;10055:9;10042:23;10032:33;;10116:2;10105:9;10101:18;10088:32;-1:-1:-1;;;;;10180:2:56;10172:6;10169:14;10166:34;;;10196:1;10193;10186:12;10166:34;10219:49;10260:7;10251:6;10240:9;10236:22;10219:49;:::i;:::-;10209:59;;10321:2;10310:9;10306:18;10293:32;10277:48;;10350:2;10340:8;10337:16;10334:36;;;10366:1;10363;10356:12;10334:36;;10389:51;10432:7;10421:8;10410:9;10406:24;10389:51;:::i;:::-;10379:61;;;9839:607;;;;;:::o;10451:465::-;10504:3;10542:5;10536:12;10569:6;10564:3;10557:19;10595:4;10624;10619:3;10615:14;10608:21;;10663:4;10656:5;10652:16;10686:1;10696:195;10710:6;10707:1;10704:13;10696:195;;;10775:13;;-1:-1:-1;;;;;10771:39:56;10759:52;;10831:12;;;;10866:15;;;;10807:1;10725:9;10696:195;;;-1:-1:-1;10907:3:56;;10451:465;-1:-1:-1;;;;;10451:465:56:o;10921:261::-;11100:2;11089:9;11082:21;11063:4;11120:56;11172:2;11161:9;11157:18;11149:6;11120:56;:::i;11187:461::-;11264:6;11272;11325:2;11313:9;11304:7;11300:23;11296:32;11293:52;;;11341:1;11338;11331:12;11293:52;11380:9;11367:23;11399:37;11430:5;11399:37;:::i;:::-;11455:5;-1:-1:-1;11511:2:56;11496:18;;11483:32;-1:-1:-1;;;;;11527:30:56;;11524:50;;;11570:1;11567;11560:12;11524:50;11593:49;11634:7;11625:6;11614:9;11610:22;11593:49;:::i;:::-;11583:59;;;11187:461;;;;;:::o;11653:1353::-;11821:6;11829;11837;11845;11853;11861;11869;11877;11885;11893;11946:3;11934:9;11925:7;11921:23;11917:33;11914:53;;;11963:1;11960;11953:12;11914:53;12003:9;11990:23;-1:-1:-1;;;;;12073:2:56;12065:6;12062:14;12059:34;;;12089:1;12086;12079:12;12059:34;12127:6;12116:9;12112:22;12102:32;;12172:7;12165:4;12161:2;12157:13;12153:27;12143:55;;12194:1;12191;12184:12;12143:55;12234:2;12221:16;12260:2;12252:6;12249:14;12246:34;;;12276:1;12273;12266:12;12246:34;12331:7;12324:4;12314:6;12311:1;12307:14;12303:2;12299:23;12295:34;12292:47;12289:67;;;12352:1;12349;12342:12;12289:67;12383:4;12375:13;;;;-1:-1:-1;12407:6:56;;-1:-1:-1;12445:20:56;;12432:34;;-1:-1:-1;12485:38:56;12519:2;12504:18;;12485:38;:::i;:::-;12475:48;;12576:2;12565:9;12561:18;12548:32;12532:48;;12605:2;12595:8;12592:16;12589:36;;;12621:1;12618;12611:12;12589:36;;12660:60;12712:7;12701:8;12690:9;12686:24;12660:60;:::i;:::-;12739:8;;-1:-1:-1;12634:86:56;-1:-1:-1;12793:39:56;;-1:-1:-1;12827:3:56;12812:19;;12793:39;:::i;:::-;12783:49;;12851:39;12885:3;12874:9;12870:19;12851:39;:::i;:::-;12841:49;;12937:3;12926:9;12922:19;12909:33;12899:43;;12961:39;12995:3;12984:9;12980:19;12961:39;:::i;:::-;12951:49;;11653:1353;;;;;;;;;;;;;:::o;13011:358::-;13218:2;13207:9;13200:21;13181:4;13238:56;13290:2;13279:9;13275:18;13267:6;13238:56;:::i;:::-;13230:64;;13359:1;13355;13350:3;13346:11;13342:19;13334:6;13330:32;13325:2;13314:9;13310:18;13303:60;13011:358;;;;;:::o;13374:1289::-;13540:6;13548;13556;13564;13572;13580;13588;13596;13604;13612;13620:7;13674:3;13662:9;13653:7;13649:23;13645:33;13642:53;;;13691:1;13688;13681:12;13642:53;13730:9;13717:23;13749:37;13780:5;13749:37;:::i;:::-;13805:5;-1:-1:-1;13857:2:56;13842:18;;13829:32;;-1:-1:-1;13912:2:56;13897:18;;13884:32;-1:-1:-1;;;;;13928:30:56;;13925:50;;;13971:1;13968;13961:12;13925:50;14010:58;14060:7;14051:6;14040:9;14036:22;14010:58;:::i;:::-;14087:8;;-1:-1:-1;13984:84:56;-1:-1:-1;14141:45:56;;-1:-1:-1;14182:2:56;14167:18;;14141:45;:::i;:::-;14131:55;;14233:3;14222:9;14218:19;14205:33;14195:43;;14285:3;14274:9;14270:19;14257:33;14247:43;;14337:3;14326:9;14322:19;14309:33;14299:43;;14394:3;14383:9;14379:19;14366:33;14408:39;14439:7;14408:39;:::i;:::-;14466:7;-1:-1:-1;14525:3:56;14510:19;;14497:33;14539:39;14497:33;14539:39;:::i;:::-;14597:7;14587:17;;;14652:3;14641:9;14637:19;14624:33;14613:44;;13374:1289;;;;;;;;;;;;;;:::o;14668:400::-;14736:6;14744;14797:2;14785:9;14776:7;14772:23;14768:32;14765:52;;;14813:1;14810;14803:12;14765:52;14852:9;14839:23;14871:37;14902:5;14871:37;:::i;:::-;14927:5;-1:-1:-1;14984:2:56;14969:18;;14956:32;14997:39;14956:32;14997:39;:::i;15073:547::-;15150:6;15158;15166;15219:2;15207:9;15198:7;15194:23;15190:32;15187:52;;;15235:1;15232;15225:12;15187:52;15274:9;15261:23;15293:37;15324:5;15293:37;:::i;:::-;15349:5;-1:-1:-1;15406:2:56;15391:18;;15378:32;15419:39;15378:32;15419:39;:::i;:::-;15477:7;-1:-1:-1;15536:2:56;15521:18;;15508:32;15549:39;15508:32;15549:39;:::i;:::-;15607:7;15597:17;;;15073:547;;;;;:::o;15625:468::-;15702:6;15710;15718;15771:2;15759:9;15750:7;15746:23;15742:32;15739:52;;;15787:1;15784;15777:12;15739:52;15826:9;15813:23;15845:37;15876:5;15845:37;:::i;:::-;15901:5;-1:-1:-1;15958:2:56;15943:18;;15930:32;15971:39;15930:32;15971:39;:::i;:::-;15625:468;;16029:7;;-1:-1:-1;;;16083:2:56;16068:18;;;;16055:32;;15625:468::o;16322:328::-;16524:2;16506:21;;;16563:1;16543:18;;;16536:29;-1:-1:-1;;;16596:2:56;16581:18;;16574:35;16641:2;16626:18;;16322:328::o;16655:::-;16857:2;16839:21;;;16896:1;16876:18;;;16869:29;-1:-1:-1;;;16929:2:56;16914:18;;16907:35;16974:2;16959:18;;16655:328::o;16988:127::-;17049:10;17044:3;17040:20;17037:1;17030:31;17080:4;17077:1;17070:15;17104:4;17101:1;17094:15;17120:135;17159:3;17180:17;;;17177:43;;17200:18;;:::i;:::-;-1:-1:-1;17247:1:56;17236:13;;17120:135::o;18925:377::-;19118:2;19107:9;19100:21;19081:4;19144:44;19184:2;19173:9;19169:18;19161:6;19144:44;:::i;:::-;19236:9;19228:6;19224:22;19219:2;19208:9;19204:18;19197:50;19264:32;19289:6;19281;19264:32;:::i;19307:249::-;19376:6;19429:2;19417:9;19408:7;19404:23;19400:32;19397:52;;;19445:1;19442;19435:12;19397:52;19477:9;19471:16;19496:30;19520:5;19496:30;:::i;20612:151::-;20702:4;20695:12;;;20681;;;20677:31;;20720:14;;20717:40;;;20737:18;;:::i;21504:331::-;21609:9;21620;21662:8;21650:10;21647:24;21644:44;;;21684:1;21681;21674:12;21644:44;21713:6;21703:8;21700:20;21697:40;;;21733:1;21730;21723:12;21697:40;-1:-1:-1;;21759:23:56;;;21804:25;;;;;-1:-1:-1;21504:331:56:o;22093:676::-;22197:6;22205;22213;22221;22274:3;22262:9;22253:7;22249:23;22245:33;22242:53;;;22291:1;22288;22281:12;22242:53;22327:9;22314:23;22304:33;;22384:2;22373:9;22369:18;22356:32;22346:42;;22439:2;22428:9;22424:18;22411:32;-1:-1:-1;;;;;22503:2:56;22495:6;22492:14;22489:34;;;22519:1;22516;22509:12;22489:34;22542:49;22583:7;22574:6;22563:9;22559:22;22542:49;:::i;:::-;22532:59;;22644:2;22633:9;22629:18;22616:32;22600:48;;22673:2;22663:8;22660:16;22657:36;;;22689:1;22686;22679:12;22657:36;;22712:51;22755:7;22744:8;22733:9;22729:24;22712:51;:::i;:::-;22702:61;;;22093:676;;;;;;;:::o;22774:815::-;23092:4;23138:1;23134;23129:3;23125:11;23121:19;23179:2;23171:6;23167:15;23156:9;23149:34;23231:2;23223:6;23219:15;23214:2;23203:9;23199:18;23192:43;;23271:6;23266:2;23255:9;23251:18;23244:34;23314:6;23309:2;23298:9;23294:18;23287:34;23358:6;23352:3;23341:9;23337:19;23330:35;23402:3;23396;23385:9;23381:19;23374:32;23429:45;23469:3;23458:9;23454:19;23446:6;23429:45;:::i;:::-;23523:9;23515:6;23511:22;23505:3;23494:9;23490:19;23483:51;23551:32;23576:6;23568;23551:32;:::i;:::-;23543:40;22774:815;-1:-1:-1;;;;;;;;;;22774:815:56:o;23594:127::-;23655:10;23650:3;23646:20;23643:1;23636:31;23686:4;23683:1;23676:15;23710:4;23707:1;23700:15;23726:540;23997:3;23986:9;23979:22;23960:4;24018:57;24070:3;24059:9;24055:19;24047:6;24018:57;:::i;:::-;24106:2;24091:18;;24084:34;;;;-1:-1:-1;;;;;;24192:15:56;;;24187:2;24172:18;;24165:43;24244:15;;24239:2;24224:18;;;24217:43;24010:65;23726:540;-1:-1:-1;23726:540:56:o;24861:277::-;24928:6;24981:2;24969:9;24960:7;24956:23;24952:32;24949:52;;;24997:1;24994;24987:12;24949:52;25029:9;25023:16;25082:5;25075:13;25068:21;25061:5;25058:32;25048:60;;25104:1;25101;25094:12;26279:168;26352:9;;;26383;;26400:15;;;26394:22;;26380:37;26370:71;;26421:18;;:::i;27118:328::-;27320:2;27302:21;;;27359:1;27339:18;;;27332:29;-1:-1:-1;;;27392:2:56;27377:18;;27370:35;27437:2;27422:18;;27118:328::o;27784:127::-;27845:10;27840:3;27836:20;27833:1;27826:31;27876:4;27873:1;27866:15;27900:4;27897:1;27890:15;27916:237;27997:1;27990:5;27987:12;27977:143;;28042:10;28037:3;28033:20;28030:1;28023:31;28077:4;28074:1;28067:15;28105:4;28102:1;28095:15;27977:143;28129:18;;27916:237::o;28158:1349::-;-1:-1:-1;;;;;28666:32:56;;28648:51;;28730:2;28715:18;;28708:34;;;28636:3;28773:2;28758:18;;28751:30;;;28797:18;;28790:34;;;28607:4;28843:3;28817:6;28888;28868:18;;;28855:48;28952:1;28923:22;;;28919:31;;28912:42;29013:2;28992:15;;-1:-1:-1;;28988:29:56;28973:45;;29027:53;29076:2;29061:18;;29053:6;29027:53;:::i;:::-;29117:6;29111:3;29100:9;29096:19;29089:35;29161:6;29155:3;29144:9;29140:19;29133:35;29205:6;29199:3;29188:9;29184:19;29177:35;29221:47;29263:3;29252:9;29248:19;29240:6;-1:-1:-1;;;;;4366:31:56;4354:44;;4300:104;29221:47;-1:-1:-1;;;;;4366:31:56;;29319:3;29304:19;;4354:44;29385:2;29373:9;29369:2;29365:18;29361:27;29355:3;29344:9;29340:19;29333:56;29406:38;29440:2;29436;29432:11;29423:7;29406:38;:::i;:::-;29398:46;;;;29453:48;29496:3;29485:9;29481:19;29472:7;-1:-1:-1;;;;;4366:31:56;4354:44;;4300:104;29453:48;28158:1349;;;;;;;;;;;;;;;:::o;29512:125::-;29577:9;;;29598:10;;;29595:36;;;29611:18;;:::i;29642:217::-;29682:1;29708;29698:132;;29752:10;29747:3;29743:20;29740:1;29733:31;29787:4;29784:1;29777:15;29815:4;29812:1;29805:15;29698:132;-1:-1:-1;29844:9:56;;29642:217::o;30197:128::-;30264:9;;;30285:11;;;30282:37;;;30299:18;;:::i;31259:991::-;31543:3;31556:22;;;31528:19;;31613:22;;;31495:4;31693:6;31666:3;31651:19;;31495:4;31727:310;31741:6;31738:1;31735:13;31727:310;;;31816:6;31803:20;31836:37;31867:5;31836:37;:::i;:::-;-1:-1:-1;;;;;31898:31:56;31886:44;;31953:4;32012:15;;;;31977:12;;;;31926:1;31756:9;31727:310;;;-1:-1:-1;32088:4:56;32073:20;;32066:36;;;;-1:-1:-1;;;;;;;32176:15:56;;;32171:2;32156:18;;32149:43;32228:15;;32223:2;32208:18;;;32201:43;32054:3;31259:991;-1:-1:-1;;31259:991:56:o;34253:271::-;34436:6;34428;34423:3;34410:33;34392:3;34462:16;;34487:13;;;34462:16;34253:271;-1:-1:-1;34253:271:56:o;34529:994::-;34970:25;;;-1:-1:-1;;;;;35069:15:56;;;35064:2;35049:18;;35042:43;35116:2;35101:18;;35094:34;;;35159:2;35144:18;;35137:34;;;34957:3;34942:19;;;35180:54;35229:3;35214:19;;35206:6;35180:54;:::i;:::-;35265:3;35250:19;;35243:35;;;;35309:3;35294:19;;35287:35;;;;35353:3;35338:19;;35331:35;;;;35403:15;;;35397:3;35382:19;;35375:44;35456:15;;;35450:3;35435:19;;35428:44;35503:3;35488:19;35481:36;;;;34529:994;;-1:-1:-1;;;;;34529:994:56:o;36326:136::-;36365:3;36393:5;36383:39;;36402:18;;:::i;:::-;-1:-1:-1;;;36438:18:56;;36326:136::o;36800:359::-;36987:6;36982:3;36975:19;36957:3;37023:6;37017:13;37039:73;37105:6;37100:2;37095:3;37091:12;37086:2;37078:6;37074:15;37039:73;:::i;:::-;37132:16;;;;37150:2;37128:25;;36800:359;-1:-1:-1;;;36800:359:56:o;37164:184::-;37234:6;37287:2;37275:9;37266:7;37262:23;37258:32;37255:52;;;37303:1;37300;37293:12;37255:52;-1:-1:-1;37326:16:56;;37164:184;-1:-1:-1;37164:184:56:o;37888:448::-;38109:6;38098:9;38091:25;38152:2;38147;38136:9;38132:18;38125:30;38072:4;38178:44;38218:2;38207:9;38203:18;38195:6;38178:44;:::i;:::-;38270:9;38262:6;38258:22;38253:2;38242:9;38238:18;38231:50;38298:32;38323:6;38315;38298:32;:::i;:::-;38290:40;37888:448;-1:-1:-1;;;;;;37888:448:56:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ERC20s(uint256)": "18ec91b9",
    "VERSION()": "ffa1ad74",
    "addOwnerWithThreshold(address,uint256)": "0d582f13",
    "approveHash(bytes32)": "d4d9bdcd",
    "approvedHashes(address,bytes32)": "7d832974",
    "changeThreshold(uint256)": "694e80c3",
    "checkNSignatures(bytes32,bytes,bytes,uint256)": "12fb68e0",
    "checkSignatures(bytes32,bytes,bytes)": "934f3a11",
    "disableModule(address,address)": "e009cfde",
    "domainSeparator()": "f698da25",
    "domainVerifiers(address,bytes32)": "51cad5ee",
    "enableModule(address)": "610b5925",
    "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)": "e86637db",
    "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)": "6a761202",
    "execTransactionFromModule(address,uint256,bytes,uint8)": "468721a7",
    "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)": "5229073f",
    "getChainId()": "3408e470",
    "getModulesPaginated(address,uint256)": "cc2f8452",
    "getOwners()": "a0e67e2b",
    "getStorageAt(uint256,uint256)": "5624b25b",
    "getThreshold()": "e75235b8",
    "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)": "d8d11f78",
    "isModuleEnabled(address)": "2d9ad53d",
    "isOwner(address)": "2f54bf6e",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "mod()": "2986e054",
    "nonce()": "affed0e0",
    "removeOwner(address,address,uint256)": "f8dc5dd9",
    "safeMethods(address,bytes4)": "0a3fe054",
    "setDomainVerifier(bytes32,address)": "3365582c",
    "setFallbackHandler(address)": "f08a0323",
    "setGuard(address)": "e19a9dd9",
    "setup(address[],uint256,address,bytes,address,address,uint256,address)": "b63e800d",
    "signedMessages(bytes32)": "5ae6bd37",
    "simulateAndRevert(address,bytes)": "b4faba09",
    "swapOwner(address,address,address)": "e318b52b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Safe\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract ISafeSignatureVerifier\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"AddedDomainVerifier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"AddedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Safe\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"method\",\"type\":\"bytes32\"}],\"name\":\"AddedSafeMethod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"approvedHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ApproveHash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Safe\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract ISafeSignatureVerifier\",\"name\":\"oldVerifier\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ISafeSignatureVerifier\",\"name\":\"newVerifier\",\"type\":\"address\"}],\"name\":\"ChangedDomainVerifier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"}],\"name\":\"ChangedFallbackHandler\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guard\",\"type\":\"address\"}],\"name\":\"ChangedGuard\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Safe\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"oldMethod\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newMethod\",\"type\":\"bytes32\"}],\"name\":\"ChangedSafeMethod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"ChangedThreshold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"DisabledModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"EnabledModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"ExecutionFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ExecutionFromModuleFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ExecutionFromModuleSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"ExecutionSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"GenericEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Safe\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"}],\"name\":\"RemovedDomainVerifier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"RemovedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Safe\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"RemovedSafeMethod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"initializer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fallbackHandler\",\"type\":\"address\"}],\"name\":\"SafeSetup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"SignMsg\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ERC20s\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"addOwnerWithThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashToApprove\",\"type\":\"bytes32\"}],\"name\":\"approveHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"approvedHashes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"changeThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"requiredSignatures\",\"type\":\"uint256\"}],\"name\":\"checkNSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"checkSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevModule\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"disableModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Safe\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"domainVerifiers\",\"outputs\":[{\"internalType\":\"contract ISafeSignatureVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"enableModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"safeTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"encodeTransactionData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"safeTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"execTransaction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromModuleReturnData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"start\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pageSize\",\"type\":\"uint256\"}],\"name\":\"getModulesPaginated\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"array\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"next\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"getStorageAt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"safeTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"getTransactionHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"isModuleEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magic\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"removeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Safe\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"safeMethods\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISafeSignatureVerifier\",\"name\":\"newVerifier\",\"type\":\"address\"}],\"name\":\"setDomainVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"}],\"name\":\"setFallbackHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guard\",\"type\":\"address\"}],\"name\":\"setGuard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"fallbackHandler\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"paymentReceiver\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"signedMessages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"calldataPayload\",\"type\":\"bytes\"}],\"name\":\"simulateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"swapOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addOwnerWithThreshold(address,uint256)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"_threshold\":\"New threshold.\",\"owner\":\"New owner address.\"}},\"approveHash(bytes32)\":{\"details\":\"This can be used with a pre-approved hash transaction signature.      IMPORTANT: The approved hash stays approved forever. There's no revocation mechanism, so it behaves similarly to ECDSA signatures\",\"params\":{\"hashToApprove\":\"The hash to mark as approved for signatures that are verified by this contract.\"}},\"changeThreshold(uint256)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"_threshold\":\"New threshold.\"}},\"checkNSignatures(bytes32,bytes,bytes,uint256)\":{\"details\":\"Since the EIP-1271 does an external call, be mindful of reentrancy attacks.\",\"params\":{\"data\":\"That should be signed (this is passed to an external validator contract)\",\"dataHash\":\"Hash of the data (could be either a message hash or transaction hash)\",\"requiredSignatures\":\"Amount of required valid signatures.\",\"signatures\":\"Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash.\"}},\"checkSignatures(bytes32,bytes,bytes)\":{\"params\":{\"data\":\"That should be signed (this is passed to an external validator contract)\",\"dataHash\":\"Hash of the data (could be either a message hash or transaction hash)\",\"signatures\":\"Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash.\"}},\"disableModule(address,address)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"module\":\"Module to be removed.\",\"prevModule\":\"Previous module in the modules linked list.\"}},\"domainSeparator()\":{\"details\":\"Returns the domain separator for this contract, as defined in the EIP-712 standard.\",\"returns\":{\"_0\":\"bytes32 The domain separator hash.\"}},\"enableModule(address)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"module\":\"Module to be whitelisted.\"}},\"encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)\":{\"params\":{\"_nonce\":\"Transaction nonce.\",\"baseGas\":\"Gas costs for that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)\",\"data\":\"Data payload.\",\"gasPrice\":\"Maximum gas price that should be used for this transaction.\",\"gasToken\":\"Token address (or 0 if ETH) that is used for the payment.\",\"operation\":\"Operation type.\",\"refundReceiver\":\"Address of receiver of gas payment (or 0 if tx.origin).\",\"safeTxGas\":\"Gas that should be used for the safe transaction.\",\"to\":\"Destination address.\",\"value\":\"Ether value.\"},\"returns\":{\"_0\":\"Transaction hash bytes.\"}},\"execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)\":{\"details\":\"The fees are always transferred, even if the user transaction fails.      This method doesn't perform any sanity check of the transaction, such as:      - if the contract at `to` address has code or not      - if the `gasToken` is a contract or not      It is the responsibility of the caller to perform such checks.\",\"params\":{\"baseGas\":\"Gas costs that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)\",\"data\":\"Data payload of Safe transaction.\",\"gasPrice\":\"Gas price that should be used for the payment calculation.\",\"gasToken\":\"Token address (or 0 if ETH) that is used for the payment.\",\"operation\":\"Operation type of Safe transaction.\",\"refundReceiver\":\"Address of receiver of gas payment (or 0 if tx.origin).\",\"safeTxGas\":\"Gas that should be used for the Safe transaction.\",\"signatures\":\"Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash.\",\"to\":\"Destination address of Safe transaction.\",\"value\":\"Ether value of Safe transaction.\"},\"returns\":{\"success\":\"Boolean indicating transaction's success.\"}},\"execTransactionFromModule(address,uint256,bytes,uint8)\":{\"details\":\"Function is virtual to allow overriding for L2 singleton to emit an event for indexing.\",\"params\":{\"data\":\"Data payload of module transaction.\",\"operation\":\"Operation type of module transaction.\",\"to\":\"Destination address of module transaction.\",\"value\":\"Ether value of module transaction.\"},\"returns\":{\"success\":\"Boolean flag indicating if the call succeeded.\"}},\"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)\":{\"params\":{\"data\":\"Data payload of module transaction.\",\"operation\":\"Operation type of module transaction.\",\"to\":\"Destination address of module transaction.\",\"value\":\"Ether value of module transaction.\"},\"returns\":{\"returnData\":\"Data returned by the call.\",\"success\":\"Boolean flag indicating if the call succeeded.\"}},\"getChainId()\":{\"returns\":{\"_0\":\"The ID of the current chain as a uint256.\"}},\"getModulesPaginated(address,uint256)\":{\"params\":{\"pageSize\":\"Maximum number of modules that should be returned. Has to be > 0\",\"start\":\"Start of the page. Has to be a module or start pointer (0x1 address)\"},\"returns\":{\"array\":\"Array of modules.\",\"next\":\"Start of the next page.\"}},\"getOwners()\":{\"returns\":{\"_0\":\"Array of Safe owners.\"}},\"getStorageAt(uint256,uint256)\":{\"params\":{\"length\":\"- the number of words (32 bytes) of data to read\",\"offset\":\"- the offset in the current contract's storage in words to start reading from\"},\"returns\":{\"_0\":\"the bytes that were read.\"}},\"getThreshold()\":{\"returns\":{\"_0\":\"Threshold number.\"}},\"getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)\":{\"params\":{\"_nonce\":\"Transaction nonce.\",\"baseGas\":\"Gas costs for data used to trigger the safe transaction.\",\"data\":\"Data payload.\",\"gasPrice\":\"Maximum gas price that should be used for this transaction.\",\"gasToken\":\"Token address (or 0 if ETH) that is used for the payment.\",\"operation\":\"Operation type.\",\"refundReceiver\":\"Address of receiver of gas payment (or 0 if tx.origin).\",\"safeTxGas\":\"Fas that should be used for the safe transaction.\",\"to\":\"Destination address.\",\"value\":\"Ether value.\"},\"returns\":{\"_0\":\"Transaction hash.\"}},\"isModuleEnabled(address)\":{\"returns\":{\"_0\":\"True if the module is enabled\"}},\"isOwner(address)\":{\"returns\":{\"_0\":\"Boolean if owner is an owner of the Safe.\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"The signature format is the same as the one used by the Safe contract\",\"params\":{\"_hash\":\"Hash of the data that is signed\",\"signature\":\"The signature to be verified\"},\"returns\":{\"magic\":\"Standardised ERC1271 return value\"}},\"removeOwner(address,address,uint256)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"_threshold\":\"New threshold.\",\"owner\":\"Owner address to be removed.\",\"prevOwner\":\"Owner that pointed to the owner to be removed in the linked list\"}},\"setDomainVerifier(bytes32,address)\":{\"params\":{\"domainSeparator\":\"The domainSeparator authorised for the `ISafeSignatureVerifier`\",\"newVerifier\":\"A contract that implements `ISafeSignatureVerifier`\"}},\"setFallbackHandler(address)\":{\"details\":\"Only fallback calls without value and with data will be forwarded.      This can only be done via a Safe transaction.      Cannot be set to the Safe itself.\",\"params\":{\"handler\":\"contract to handle fallback calls.\"}},\"setGuard(address)\":{\"details\":\"Set a guard that checks transactions before execution      This can only be done via a Safe transaction.      \\u26a0\\ufe0f IMPORTANT: Since a guard has full power to block Safe transaction execution,        a broken guard can cause a denial of service for the Safe. Make sure to carefully        audit the guard code and design recovery mechanisms.\",\"params\":{\"guard\":\"The address of the guard to be used or the 0 address to disable the guard\"}},\"setup(address[],uint256,address,bytes,address,address,uint256,address)\":{\"details\":\"This method can only be called once.      If a proxy was created without setting up, anyone can call setup and claim the proxy.\",\"params\":{\"_owners\":\"List of Safe owners.\",\"_threshold\":\"Number of required confirmations for a Safe transaction.\",\"data\":\"Data payload for optional delegate call.\",\"fallbackHandler\":\"Handler for fallback calls to this contract\",\"payment\":\"Value that should be paid\",\"paymentReceiver\":\"Address that should receive the payment (or 0 if tx.origin)\",\"paymentToken\":\"Token that should be used for the payment (0 is ETH)\",\"to\":\"Contract address for optional delegate call.\"}},\"simulateAndRevert(address,bytes)\":{\"details\":\"Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.\",\"params\":{\"calldataPayload\":\"Calldata that should be sent to the target contract (encoded method name and arguments).\",\"targetContract\":\"Address of the contract containing the code to execute.\"}},\"swapOwner(address,address,address)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"newOwner\":\"New owner address.\",\"oldOwner\":\"Owner address to be replaced.\",\"prevOwner\":\"Owner that pointed to the owner to be replaced in the linked list\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addOwnerWithThreshold(address,uint256)\":{\"notice\":\"Adds the owner `owner` to the Safe and updates the threshold to `_threshold`.\"},\"approveHash(bytes32)\":{\"notice\":\"Marks hash `hashToApprove` as approved.\"},\"changeThreshold(uint256)\":{\"notice\":\"Changes the threshold of the Safe to `_threshold`.\"},\"checkNSignatures(bytes32,bytes,bytes,uint256)\":{\"notice\":\"Checks whether the signature provided is valid for the provided data and hash. Reverts otherwise.\"},\"checkSignatures(bytes32,bytes,bytes)\":{\"notice\":\"Checks whether the signature provided is valid for the provided data and hash. Reverts otherwise.\"},\"disableModule(address,address)\":{\"notice\":\"Disables the module `module` for the Safe.\"},\"enableModule(address)\":{\"notice\":\"Enables the module `module` for the Safe.\"},\"encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)\":{\"notice\":\"Returns the pre-image of the transaction hash (see getTransactionHash).\"},\"execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)\":{\"notice\":\"Executes a `operation` {0: Call, 1: DelegateCall}} transaction to `to` with `value` (Native Currency)          and pays `gasPrice` * `gasLimit` in `gasToken` token to `refundReceiver`.\"},\"execTransactionFromModule(address,uint256,bytes,uint8)\":{\"notice\":\"Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token)\"},\"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)\":{\"notice\":\"Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token) and return data\"},\"getChainId()\":{\"notice\":\"Returns the ID of the chain the contract is currently deployed on.\"},\"getModulesPaginated(address,uint256)\":{\"notice\":\"Returns an array of modules.         If all entries fit into a single page, the next pointer will be 0x1.         If another page is present, next will be the last element of the returned array.\"},\"getOwners()\":{\"notice\":\"Returns a list of Safe owners.\"},\"getStorageAt(uint256,uint256)\":{\"notice\":\"Reads `length` bytes of storage in the currents contract\"},\"getThreshold()\":{\"notice\":\"Returns the number of required confirmations for a Safe transaction aka the threshold.\"},\"getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)\":{\"notice\":\"Returns transaction hash to be signed by owners.\"},\"isModuleEnabled(address)\":{\"notice\":\"Returns if an module is enabled\"},\"isOwner(address)\":{\"notice\":\"Returns if `owner` is an owner of the Safe.\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Implements ERC1271 interface for smart contract EIP-712 signature validation\"},\"removeOwner(address,address,uint256)\":{\"notice\":\"Removes the owner `owner` from the Safe and updates the threshold to `_threshold`.\"},\"setDomainVerifier(bytes32,address)\":{\"notice\":\"Setter for the signature muxer\"},\"setFallbackHandler(address)\":{\"notice\":\"Set Fallback Handler to `handler` for the Safe.\"},\"setGuard(address)\":{\"notice\":\"Set Transaction Guard `guard` for the Safe. Make sure you trust the guard.\"},\"setup(address[],uint256,address,bytes,address,address,uint256,address)\":{\"notice\":\"Sets an initial storage of the Safe contract.\"},\"swapOwner(address,address,address)\":{\"notice\":\"Replaces the owner `oldOwner` in the Safe with `newOwner`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SafeModdato.sol\":\"SafeModdato\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":balancer/=lib/composable-cow/lib/balancer/src/\",\":canonical-weth/=lib/composable-cow/lib/canonical-weth/src/\",\":composable-cow/=lib/composable-cow/\",\":composable-test/=lib/composable-cow/test/\",\":composable/=lib/composable-cow/src/\",\":cowprotocol/=lib/composable-cow/lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/composable-cow/lib/balancer/src/lib/helpers/\",\":math/=lib/composable-cow/lib/balancer/src/lib/math/\",\":murky/=lib/composable-cow/lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":safe/=lib/composable-cow/lib/safe/contracts/\"]},\"sources\":{\"lib/safe-contracts/contracts/Safe.sol\":{\"keccak256\":\"0xbab2f7bec33283e349342e7b23f5191c678c64fe02065bac4f4f44fb3f5d2638\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f95884e85691d49ba3efb9b2a160466fed17377bfa92fc8bf5923f3c61e99119\",\"dweb:/ipfs/QmQjhP9RnB3Cj3DNpWLzWqqvRdKBya6Efx6xzmRrwLqjm9\"]},\"lib/safe-contracts/contracts/base/Executor.sol\":{\"keccak256\":\"0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c\",\"dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp\"]},\"lib/safe-contracts/contracts/base/FallbackManager.sol\":{\"keccak256\":\"0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e\",\"dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV\"]},\"lib/safe-contracts/contracts/base/GuardManager.sol\":{\"keccak256\":\"0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64\",\"dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx\"]},\"lib/safe-contracts/contracts/base/ModuleManager.sol\":{\"keccak256\":\"0xd71b0d56dce386fa6f67c51061face071b2c7b03ec535d68717e2538ec47113a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://30812896d9f57cae84a432c67fbb3007d566071ec203b2992f1c0f762722df0d\",\"dweb:/ipfs/QmRyJ3JbsUwDQxQDTrqDDX4qNtVu7XiW8cD8WP5kgNJGGz\"]},\"lib/safe-contracts/contracts/base/OwnerManager.sol\":{\"keccak256\":\"0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a\",\"dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34\",\"dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo\"]},\"lib/safe-contracts/contracts/common/NativeCurrencyPaymentFallback.sol\":{\"keccak256\":\"0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9\",\"dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g\"]},\"lib/safe-contracts/contracts/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3\",\"dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N\"]},\"lib/safe-contracts/contracts/common/SelfAuthorized.sol\":{\"keccak256\":\"0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3\",\"dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu\"]},\"lib/safe-contracts/contracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80\",\"dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4\"]},\"lib/safe-contracts/contracts/common/Singleton.sol\":{\"keccak256\":\"0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde\",\"dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo\"]},\"lib/safe-contracts/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e\",\"dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ\"]},\"lib/safe-contracts/contracts/external/SafeMath.sol\":{\"keccak256\":\"0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c\",\"dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x\"]},\"lib/safe-contracts/contracts/handler/HandlerContext.sol\":{\"keccak256\":\"0x3e105ebac003af9c8d34e3eed517ff0355d5f487e17478c85df0f225b04846f5\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://657bec347d746453883c461a3d9a2275bf2b99625dcaef0960e1c0276c3d56c4\",\"dweb:/ipfs/QmUGj8Tzs1CsmUf63LbTMK81EEGtYYnWKLGdHHtoYCd9CF\"]},\"lib/safe-contracts/contracts/handler/extensible/ExtensibleBase.sol\":{\"keccak256\":\"0xe5b71121b0020728158ee60756982e74809f9d77cb294a6d65930bff09d84d15\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fd7fd2702b31fc8569a9986a476dd9fe9aa76624d0da6d832547f624426925f9\",\"dweb:/ipfs/QmWjYGtW38Fnwvm8qFvoJYhz2nTuySGkHouwRF3eksd6Nh\"]},\"lib/safe-contracts/contracts/handler/extensible/MarshalLib.sol\":{\"keccak256\":\"0x36eacc47b1ce7697e679c1b5c0d3a86d8f46a0436b666f86e88df04765cde5c1\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://7097bfb174ea424ef55f9a5b55f4a9857f7368cdd3061888f5ffb3e29503f071\",\"dweb:/ipfs/QmRPvAvMdGRuh8AjePtamBGUU55p1tSP8ZHUUMfxWgi1ew\"]},\"lib/safe-contracts/contracts/handler/extensible/SignatureVerifierMuxer.sol\":{\"keccak256\":\"0x51e8dad81059527f9b6b6827d742a0fbc0960c66e364dd1e67c8f151970c6ee4\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://b368a4eb15d50487986db1543a5c786324a4d0de680a421d131e21c25459f666\",\"dweb:/ipfs/QmVca3J2JBEZtxW3uNMvYc9ugQH24CqantLnVzKcZwG71W\"]},\"lib/safe-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89\",\"dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38\"]},\"lib/safe-contracts/contracts/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25\",\"dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978\"]},\"src/Constants.sol\":{\"keccak256\":\"0x4f93a7ba1eaa6a2d3e576c77528b401fc6958ae10961bc64c92d504fa93a40b4\",\"urls\":[\"bzz-raw://96d8d40e6989c4a8f2f90038a34862cebc940c083358542fa55aa81ab34719ec\",\"dweb:/ipfs/QmRuMhWGv2SZ3sjAAPXEnfBMX37Zu68gKELjsGkzsbAfxS\"]},\"src/SafeModdato.sol\":{\"keccak256\":\"0x654471534c9dd843d06daf46a416a0a79ef274efd0a060416361bf9879b516fa\",\"urls\":[\"bzz-raw://ff357313d429b03e2978aea9bfb800b87e3a3d44b8644526ecc1f157ab963acf\",\"dweb:/ipfs/Qme6pJj3NuoY611vfT2FX19nygCnGK89XZW64swnMfEbSa\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.22+commit.4fc1097e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "safe",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "domainSeparator",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "contract ISafeSignatureVerifier",
              "name": "verifier",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddedDomainVerifier",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddedOwner",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "safe",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "method",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddedSafeMethod",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "approvedHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ApproveHash",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "safe",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "domainSeparator",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "contract ISafeSignatureVerifier",
              "name": "oldVerifier",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract ISafeSignatureVerifier",
              "name": "newVerifier",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChangedDomainVerifier",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "handler",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ChangedFallbackHandler",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "guard",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ChangedGuard",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "safe",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "oldMethod",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "newMethod",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChangedSafeMethod",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChangedThreshold",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "module",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DisabledModule",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "module",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "EnabledModule",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "txHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "payment",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecutionFailure",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "module",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ExecutionFromModuleFailure",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "module",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ExecutionFromModuleSuccess",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "txHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "payment",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecutionSuccess",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GenericEvent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "safe",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "domainSeparator",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemovedDomainVerifier",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RemovedOwner",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "safe",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemovedSafeMethod",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SafeReceived",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initiator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "initializer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "fallbackHandler",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SafeSetup",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgHash",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SignMsg",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ERC20s",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_threshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addOwnerWithThreshold"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "hashToApprove",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "approvedHashes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_threshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeThreshold"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signatures",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "requiredSignatures",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkNSignatures"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signatures",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkSignatures"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevModule",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "module",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableModule"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "domainVerifiers",
          "outputs": [
            {
              "internalType": "contract ISafeSignatureVerifier",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "module",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableModule"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "enum Enum.Operation",
              "name": "operation",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "safeTxGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "gasToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "refundReceiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encodeTransactionData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "enum Enum.Operation",
              "name": "operation",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "safeTxGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "gasToken",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "refundReceiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "signatures",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execTransaction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "enum Enum.Operation",
              "name": "operation",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execTransactionFromModule",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "enum Enum.Operation",
              "name": "operation",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execTransactionFromModuleReturnData",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getChainId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "start",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pageSize",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getModulesPaginated",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "array",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "next",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOwners",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStorageAt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getThreshold",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "enum Enum.Operation",
              "name": "operation",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "safeTxGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "gasToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "refundReceiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTransactionHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "module",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isModuleEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "magic",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mod"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_threshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeOwner"
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "safeMethods",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "domainSeparator",
              "type": "bytes32"
            },
            {
              "internalType": "contract ISafeSignatureVerifier",
              "name": "newVerifier",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDomainVerifier"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "handler",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFallbackHandler"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "guard",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGuard"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "_threshold",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "fallbackHandler",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "paymentToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "payment",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "paymentReceiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setup"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signedMessages",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "targetContract",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "calldataPayload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "simulateAndRevert"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "oldOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swapOwner"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addOwnerWithThreshold(address,uint256)": {
            "details": "This can only be done via a Safe transaction.",
            "params": {
              "_threshold": "New threshold.",
              "owner": "New owner address."
            }
          },
          "approveHash(bytes32)": {
            "details": "This can be used with a pre-approved hash transaction signature.      IMPORTANT: The approved hash stays approved forever. There's no revocation mechanism, so it behaves similarly to ECDSA signatures",
            "params": {
              "hashToApprove": "The hash to mark as approved for signatures that are verified by this contract."
            }
          },
          "changeThreshold(uint256)": {
            "details": "This can only be done via a Safe transaction.",
            "params": {
              "_threshold": "New threshold."
            }
          },
          "checkNSignatures(bytes32,bytes,bytes,uint256)": {
            "details": "Since the EIP-1271 does an external call, be mindful of reentrancy attacks.",
            "params": {
              "data": "That should be signed (this is passed to an external validator contract)",
              "dataHash": "Hash of the data (could be either a message hash or transaction hash)",
              "requiredSignatures": "Amount of required valid signatures.",
              "signatures": "Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash."
            }
          },
          "checkSignatures(bytes32,bytes,bytes)": {
            "params": {
              "data": "That should be signed (this is passed to an external validator contract)",
              "dataHash": "Hash of the data (could be either a message hash or transaction hash)",
              "signatures": "Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash."
            }
          },
          "disableModule(address,address)": {
            "details": "This can only be done via a Safe transaction.",
            "params": {
              "module": "Module to be removed.",
              "prevModule": "Previous module in the modules linked list."
            }
          },
          "domainSeparator()": {
            "details": "Returns the domain separator for this contract, as defined in the EIP-712 standard.",
            "returns": {
              "_0": "bytes32 The domain separator hash."
            }
          },
          "enableModule(address)": {
            "details": "This can only be done via a Safe transaction.",
            "params": {
              "module": "Module to be whitelisted."
            }
          },
          "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)": {
            "params": {
              "_nonce": "Transaction nonce.",
              "baseGas": "Gas costs for that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)",
              "data": "Data payload.",
              "gasPrice": "Maximum gas price that should be used for this transaction.",
              "gasToken": "Token address (or 0 if ETH) that is used for the payment.",
              "operation": "Operation type.",
              "refundReceiver": "Address of receiver of gas payment (or 0 if tx.origin).",
              "safeTxGas": "Gas that should be used for the safe transaction.",
              "to": "Destination address.",
              "value": "Ether value."
            },
            "returns": {
              "_0": "Transaction hash bytes."
            }
          },
          "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)": {
            "details": "The fees are always transferred, even if the user transaction fails.      This method doesn't perform any sanity check of the transaction, such as:      - if the contract at `to` address has code or not      - if the `gasToken` is a contract or not      It is the responsibility of the caller to perform such checks.",
            "params": {
              "baseGas": "Gas costs that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)",
              "data": "Data payload of Safe transaction.",
              "gasPrice": "Gas price that should be used for the payment calculation.",
              "gasToken": "Token address (or 0 if ETH) that is used for the payment.",
              "operation": "Operation type of Safe transaction.",
              "refundReceiver": "Address of receiver of gas payment (or 0 if tx.origin).",
              "safeTxGas": "Gas that should be used for the Safe transaction.",
              "signatures": "Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash.",
              "to": "Destination address of Safe transaction.",
              "value": "Ether value of Safe transaction."
            },
            "returns": {
              "success": "Boolean indicating transaction's success."
            }
          },
          "execTransactionFromModule(address,uint256,bytes,uint8)": {
            "details": "Function is virtual to allow overriding for L2 singleton to emit an event for indexing.",
            "params": {
              "data": "Data payload of module transaction.",
              "operation": "Operation type of module transaction.",
              "to": "Destination address of module transaction.",
              "value": "Ether value of module transaction."
            },
            "returns": {
              "success": "Boolean flag indicating if the call succeeded."
            }
          },
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)": {
            "params": {
              "data": "Data payload of module transaction.",
              "operation": "Operation type of module transaction.",
              "to": "Destination address of module transaction.",
              "value": "Ether value of module transaction."
            },
            "returns": {
              "returnData": "Data returned by the call.",
              "success": "Boolean flag indicating if the call succeeded."
            }
          },
          "getChainId()": {
            "returns": {
              "_0": "The ID of the current chain as a uint256."
            }
          },
          "getModulesPaginated(address,uint256)": {
            "params": {
              "pageSize": "Maximum number of modules that should be returned. Has to be > 0",
              "start": "Start of the page. Has to be a module or start pointer (0x1 address)"
            },
            "returns": {
              "array": "Array of modules.",
              "next": "Start of the next page."
            }
          },
          "getOwners()": {
            "returns": {
              "_0": "Array of Safe owners."
            }
          },
          "getStorageAt(uint256,uint256)": {
            "params": {
              "length": "- the number of words (32 bytes) of data to read",
              "offset": "- the offset in the current contract's storage in words to start reading from"
            },
            "returns": {
              "_0": "the bytes that were read."
            }
          },
          "getThreshold()": {
            "returns": {
              "_0": "Threshold number."
            }
          },
          "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)": {
            "params": {
              "_nonce": "Transaction nonce.",
              "baseGas": "Gas costs for data used to trigger the safe transaction.",
              "data": "Data payload.",
              "gasPrice": "Maximum gas price that should be used for this transaction.",
              "gasToken": "Token address (or 0 if ETH) that is used for the payment.",
              "operation": "Operation type.",
              "refundReceiver": "Address of receiver of gas payment (or 0 if tx.origin).",
              "safeTxGas": "Fas that should be used for the safe transaction.",
              "to": "Destination address.",
              "value": "Ether value."
            },
            "returns": {
              "_0": "Transaction hash."
            }
          },
          "isModuleEnabled(address)": {
            "returns": {
              "_0": "True if the module is enabled"
            }
          },
          "isOwner(address)": {
            "returns": {
              "_0": "Boolean if owner is an owner of the Safe."
            }
          },
          "isValidSignature(bytes32,bytes)": {
            "details": "The signature format is the same as the one used by the Safe contract",
            "params": {
              "_hash": "Hash of the data that is signed",
              "signature": "The signature to be verified"
            },
            "returns": {
              "magic": "Standardised ERC1271 return value"
            }
          },
          "removeOwner(address,address,uint256)": {
            "details": "This can only be done via a Safe transaction.",
            "params": {
              "_threshold": "New threshold.",
              "owner": "Owner address to be removed.",
              "prevOwner": "Owner that pointed to the owner to be removed in the linked list"
            }
          },
          "setDomainVerifier(bytes32,address)": {
            "params": {
              "domainSeparator": "The domainSeparator authorised for the `ISafeSignatureVerifier`",
              "newVerifier": "A contract that implements `ISafeSignatureVerifier`"
            }
          },
          "setFallbackHandler(address)": {
            "details": "Only fallback calls without value and with data will be forwarded.      This can only be done via a Safe transaction.      Cannot be set to the Safe itself.",
            "params": {
              "handler": "contract to handle fallback calls."
            }
          },
          "setGuard(address)": {
            "details": "Set a guard that checks transactions before execution      This can only be done via a Safe transaction.      ⚠️ IMPORTANT: Since a guard has full power to block Safe transaction execution,        a broken guard can cause a denial of service for the Safe. Make sure to carefully        audit the guard code and design recovery mechanisms.",
            "params": {
              "guard": "The address of the guard to be used or the 0 address to disable the guard"
            }
          },
          "setup(address[],uint256,address,bytes,address,address,uint256,address)": {
            "details": "This method can only be called once.      If a proxy was created without setting up, anyone can call setup and claim the proxy.",
            "params": {
              "_owners": "List of Safe owners.",
              "_threshold": "Number of required confirmations for a Safe transaction.",
              "data": "Data payload for optional delegate call.",
              "fallbackHandler": "Handler for fallback calls to this contract",
              "payment": "Value that should be paid",
              "paymentReceiver": "Address that should receive the payment (or 0 if tx.origin)",
              "paymentToken": "Token that should be used for the payment (0 is ETH)",
              "to": "Contract address for optional delegate call."
            }
          },
          "simulateAndRevert(address,bytes)": {
            "details": "Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.",
            "params": {
              "calldataPayload": "Calldata that should be sent to the target contract (encoded method name and arguments).",
              "targetContract": "Address of the contract containing the code to execute."
            }
          },
          "swapOwner(address,address,address)": {
            "details": "This can only be done via a Safe transaction.",
            "params": {
              "newOwner": "New owner address.",
              "oldOwner": "Owner address to be replaced.",
              "prevOwner": "Owner that pointed to the owner to be replaced in the linked list"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addOwnerWithThreshold(address,uint256)": {
            "notice": "Adds the owner `owner` to the Safe and updates the threshold to `_threshold`."
          },
          "approveHash(bytes32)": {
            "notice": "Marks hash `hashToApprove` as approved."
          },
          "changeThreshold(uint256)": {
            "notice": "Changes the threshold of the Safe to `_threshold`."
          },
          "checkNSignatures(bytes32,bytes,bytes,uint256)": {
            "notice": "Checks whether the signature provided is valid for the provided data and hash. Reverts otherwise."
          },
          "checkSignatures(bytes32,bytes,bytes)": {
            "notice": "Checks whether the signature provided is valid for the provided data and hash. Reverts otherwise."
          },
          "disableModule(address,address)": {
            "notice": "Disables the module `module` for the Safe."
          },
          "enableModule(address)": {
            "notice": "Enables the module `module` for the Safe."
          },
          "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)": {
            "notice": "Returns the pre-image of the transaction hash (see getTransactionHash)."
          },
          "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)": {
            "notice": "Executes a `operation` {0: Call, 1: DelegateCall}} transaction to `to` with `value` (Native Currency)          and pays `gasPrice` * `gasLimit` in `gasToken` token to `refundReceiver`."
          },
          "execTransactionFromModule(address,uint256,bytes,uint8)": {
            "notice": "Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token)"
          },
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)": {
            "notice": "Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token) and return data"
          },
          "getChainId()": {
            "notice": "Returns the ID of the chain the contract is currently deployed on."
          },
          "getModulesPaginated(address,uint256)": {
            "notice": "Returns an array of modules.         If all entries fit into a single page, the next pointer will be 0x1.         If another page is present, next will be the last element of the returned array."
          },
          "getOwners()": {
            "notice": "Returns a list of Safe owners."
          },
          "getStorageAt(uint256,uint256)": {
            "notice": "Reads `length` bytes of storage in the currents contract"
          },
          "getThreshold()": {
            "notice": "Returns the number of required confirmations for a Safe transaction aka the threshold."
          },
          "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)": {
            "notice": "Returns transaction hash to be signed by owners."
          },
          "isModuleEnabled(address)": {
            "notice": "Returns if an module is enabled"
          },
          "isOwner(address)": {
            "notice": "Returns if `owner` is an owner of the Safe."
          },
          "isValidSignature(bytes32,bytes)": {
            "notice": "Implements ERC1271 interface for smart contract EIP-712 signature validation"
          },
          "removeOwner(address,address,uint256)": {
            "notice": "Removes the owner `owner` from the Safe and updates the threshold to `_threshold`."
          },
          "setDomainVerifier(bytes32,address)": {
            "notice": "Setter for the signature muxer"
          },
          "setFallbackHandler(address)": {
            "notice": "Set Fallback Handler to `handler` for the Safe."
          },
          "setGuard(address)": {
            "notice": "Set Transaction Guard `guard` for the Safe. Make sure you trust the guard."
          },
          "setup(address[],uint256,address,bytes,address,address,uint256,address)": {
            "notice": "Sets an initial storage of the Safe contract."
          },
          "swapOwner(address,address,address)": {
            "notice": "Replaces the owner `oldOwner` in the Safe with `newOwner`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "balancer/=lib/composable-cow/lib/balancer/src/",
        "canonical-weth/=lib/composable-cow/lib/canonical-weth/src/",
        "composable-cow/=lib/composable-cow/",
        "composable-test/=lib/composable-cow/test/",
        "composable/=lib/composable-cow/src/",
        "cowprotocol/=lib/composable-cow/lib/cowprotocol/src/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "helpers/=lib/composable-cow/lib/balancer/src/lib/helpers/",
        "math/=lib/composable-cow/lib/balancer/src/lib/math/",
        "murky/=lib/composable-cow/lib/murky/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "safe/=lib/composable-cow/lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SafeModdato.sol": "SafeModdato"
      },
      "libraries": {}
    },
    "sources": {
      "lib/safe-contracts/contracts/Safe.sol": {
        "keccak256": "0xbab2f7bec33283e349342e7b23f5191c678c64fe02065bac4f4f44fb3f5d2638",
        "urls": [
          "bzz-raw://f95884e85691d49ba3efb9b2a160466fed17377bfa92fc8bf5923f3c61e99119",
          "dweb:/ipfs/QmQjhP9RnB3Cj3DNpWLzWqqvRdKBya6Efx6xzmRrwLqjm9"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/Executor.sol": {
        "keccak256": "0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a",
        "urls": [
          "bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c",
          "dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/FallbackManager.sol": {
        "keccak256": "0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165",
        "urls": [
          "bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e",
          "dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/GuardManager.sol": {
        "keccak256": "0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d",
        "urls": [
          "bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64",
          "dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/ModuleManager.sol": {
        "keccak256": "0xd71b0d56dce386fa6f67c51061face071b2c7b03ec535d68717e2538ec47113a",
        "urls": [
          "bzz-raw://30812896d9f57cae84a432c67fbb3007d566071ec203b2992f1c0f762722df0d",
          "dweb:/ipfs/QmRyJ3JbsUwDQxQDTrqDDX4qNtVu7XiW8cD8WP5kgNJGGz"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/OwnerManager.sol": {
        "keccak256": "0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c",
        "urls": [
          "bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a",
          "dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453",
        "urls": [
          "bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34",
          "dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/NativeCurrencyPaymentFallback.sol": {
        "keccak256": "0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba",
        "urls": [
          "bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9",
          "dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SecuredTokenTransfer.sol": {
        "keccak256": "0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05",
        "urls": [
          "bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3",
          "dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SelfAuthorized.sol": {
        "keccak256": "0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13",
        "urls": [
          "bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3",
          "dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SignatureDecoder.sol": {
        "keccak256": "0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c",
        "urls": [
          "bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80",
          "dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/Singleton.sol": {
        "keccak256": "0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50",
        "urls": [
          "bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde",
          "dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/StorageAccessible.sol": {
        "keccak256": "0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e",
        "urls": [
          "bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e",
          "dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/external/SafeMath.sol": {
        "keccak256": "0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89",
        "urls": [
          "bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c",
          "dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/handler/HandlerContext.sol": {
        "keccak256": "0x3e105ebac003af9c8d34e3eed517ff0355d5f487e17478c85df0f225b04846f5",
        "urls": [
          "bzz-raw://657bec347d746453883c461a3d9a2275bf2b99625dcaef0960e1c0276c3d56c4",
          "dweb:/ipfs/QmUGj8Tzs1CsmUf63LbTMK81EEGtYYnWKLGdHHtoYCd9CF"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/handler/extensible/ExtensibleBase.sol": {
        "keccak256": "0xe5b71121b0020728158ee60756982e74809f9d77cb294a6d65930bff09d84d15",
        "urls": [
          "bzz-raw://fd7fd2702b31fc8569a9986a476dd9fe9aa76624d0da6d832547f624426925f9",
          "dweb:/ipfs/QmWjYGtW38Fnwvm8qFvoJYhz2nTuySGkHouwRF3eksd6Nh"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/handler/extensible/MarshalLib.sol": {
        "keccak256": "0x36eacc47b1ce7697e679c1b5c0d3a86d8f46a0436b666f86e88df04765cde5c1",
        "urls": [
          "bzz-raw://7097bfb174ea424ef55f9a5b55f4a9857f7368cdd3061888f5ffb3e29503f071",
          "dweb:/ipfs/QmRPvAvMdGRuh8AjePtamBGUU55p1tSP8ZHUUMfxWgi1ew"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/handler/extensible/SignatureVerifierMuxer.sol": {
        "keccak256": "0x51e8dad81059527f9b6b6827d742a0fbc0960c66e364dd1e67c8f151970c6ee4",
        "urls": [
          "bzz-raw://b368a4eb15d50487986db1543a5c786324a4d0de680a421d131e21c25459f666",
          "dweb:/ipfs/QmVca3J2JBEZtxW3uNMvYc9ugQH24CqantLnVzKcZwG71W"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb",
        "urls": [
          "bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89",
          "dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/ISignatureValidator.sol": {
        "keccak256": "0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457",
        "urls": [
          "bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25",
          "dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/Constants.sol": {
        "keccak256": "0x4f93a7ba1eaa6a2d3e576c77528b401fc6958ae10961bc64c92d504fa93a40b4",
        "urls": [
          "bzz-raw://96d8d40e6989c4a8f2f90038a34862cebc940c083358542fa55aa81ab34719ec",
          "dweb:/ipfs/QmRuMhWGv2SZ3sjAAPXEnfBMX37Zu68gKELjsGkzsbAfxS"
        ],
        "license": null
      },
      "src/SafeModdato.sol": {
        "keccak256": "0x654471534c9dd843d06daf46a416a0a79ef274efd0a060416361bf9879b516fa",
        "urls": [
          "bzz-raw://ff357313d429b03e2978aea9bfb800b87e3a3d44b8644526ecc1f157ab963acf",
          "dweb:/ipfs/Qme6pJj3NuoY611vfT2FX19nygCnGK89XZW64swnMfEbSa"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SafeModdato.sol",
    "id": 48616,
    "exportedSymbols": {
      "BAT": [
        47696
      ],
      "COMPOSABLE_COW": [
        47720
      ],
      "COW": [
        47672
      ],
      "DAI": [
        47684
      ],
      "DOMAIN_SEPARATOR": [
        47723
      ],
      "EXTENSIBLE_FALLBACK_HANDLER": [
        47714
      ],
      "FACTORY": [
        47729
      ],
      "GNO": [
        47666
      ],
      "ISafeSignatureVerifier": [
        47191
      ],
      "POLY": [
        47702
      ],
      "Safe": [
        45342
      ],
      "SafeModdato": [
        48615
      ],
      "SignatureVerifierMuxer": [
        47560
      ],
      "USDC": [
        47678
      ],
      "WETH": [
        47708
      ],
      "ZRX": [
        47690
      ],
      "ierc20": [
        48454
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1848:54",
    "nodes": [
      {
        "id": 48438,
        "nodeType": "PragmaDirective",
        "src": "0:23:54",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 48440,
        "nodeType": "ImportDirective",
        "src": "24:45:54",
        "nodes": [],
        "absolutePath": "lib/safe-contracts/contracts/Safe.sol",
        "file": "safe-contracts/Safe.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48616,
        "sourceUnit": 45343,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48439,
              "name": "Safe",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45342,
              "src": "32:4:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48443,
        "nodeType": "ImportDirective",
        "src": "70:124:54",
        "nodes": [],
        "absolutePath": "lib/safe-contracts/contracts/handler/extensible/SignatureVerifierMuxer.sol",
        "file": "safe-contracts/handler/extensible/SignatureVerifierMuxer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48616,
        "sourceUnit": 47594,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48441,
              "name": "ISafeSignatureVerifier",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47191,
              "src": "78:22:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 48442,
              "name": "SignatureVerifierMuxer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47560,
              "src": "102:22:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48444,
        "nodeType": "ImportDirective",
        "src": "195:25:54",
        "nodes": [],
        "absolutePath": "src/Constants.sol",
        "file": "./Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48616,
        "sourceUnit": 47730,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48454,
        "nodeType": "ContractDefinition",
        "src": "221:84:54",
        "nodes": [
          {
            "id": 48453,
            "nodeType": "FunctionDefinition",
            "src": "244:59:54",
            "nodes": [],
            "functionSelector": "095ea7b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "253:7:54",
            "parameters": {
              "id": 48449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48446,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48453,
                  "src": "261:7:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48448,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48453,
                  "src": "270:7:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "270:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "260:18:54"
            },
            "returnParameters": {
              "id": 48452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48451,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48453,
                  "src": "297:4:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 48450,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:4:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "296:6:54"
            },
            "scope": 48454,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ierc20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          48454
        ],
        "name": "ierc20",
        "nameLocation": "231:6:54",
        "scope": 48616,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 48615,
        "nodeType": "ContractDefinition",
        "src": "306:1541:54",
        "nodes": [
          {
            "id": 48470,
            "nodeType": "VariableDeclaration",
            "src": "726:139:54",
            "nodes": [],
            "constant": false,
            "functionSelector": "18ec91b9",
            "mutability": "mutable",
            "name": "ERC20s",
            "nameLocation": "743:6:54",
            "scope": 48615,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 48459,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "726:7:54",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 48460,
              "nodeType": "ArrayTypeName",
              "src": "726:9:54",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": {
              "components": [
                {
                  "id": 48461,
                  "name": "GNO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 47666,
                  "src": "762:3:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 48462,
                  "name": "COW",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 47672,
                  "src": "775:3:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 48463,
                  "name": "USDC",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 47678,
                  "src": "788:4:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 48464,
                  "name": "DAI",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 47684,
                  "src": "802:3:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 48465,
                  "name": "ZRX",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 47690,
                  "src": "815:3:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 48466,
                  "name": "BAT",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 47696,
                  "src": "828:3:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 48467,
                  "name": "POLY",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 47702,
                  "src": "841:4:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 48468,
                  "name": "WETH",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 47708,
                  "src": "855:4:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "id": 48469,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "752:113:54",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$8_memory_ptr",
                "typeString": "address[8] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48476,
            "nodeType": "EventDefinition",
            "src": "872:33:54",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "1edad1c6ff5ba2b89661ff119ddb2ccd9027f5284831aecdacc3b20aba63a051",
            "name": "GenericEvent",
            "nameLocation": "878:12:54",
            "parameters": {
              "id": 48475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48472,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48476,
                  "src": "891:6:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48471,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48474,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48476,
                  "src": "899:4:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48473,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:4:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "890:14:54"
            }
          },
          {
            "id": 48508,
            "nodeType": "FunctionDefinition",
            "src": "915:171:54",
            "nodes": [],
            "body": {
              "id": 48507,
              "nodeType": "Block",
              "src": "943:143:54",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48485,
                      "mutability": "mutable",
                      "name": "_owners",
                      "nameLocation": "970:7:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 48507,
                      "src": "953:24:54",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 48483,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "953:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48484,
                        "nodeType": "ArrayTypeName",
                        "src": "953:9:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48491,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 48489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "994:1:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 48488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "980:13:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 48486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "984:7:54",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48487,
                        "nodeType": "ArrayTypeName",
                        "src": "984:9:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 48490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "980:16:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "953:43:54"
                },
                {
                  "expression": {
                    "id": 48496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 48492,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48485,
                        "src": "1006:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 48494,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 48493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1014:1:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1006:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48495,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48478,
                      "src": "1019:6:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1006:19:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 48497,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:19:54"
                },
                {
                  "expression": {
                    "id": 48500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48498,
                      "name": "threshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46024,
                      "src": "1035:9:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 48499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1045:1:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1035:11:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48501,
                  "nodeType": "ExpressionStatement",
                  "src": "1035:11:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48503,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48485,
                        "src": "1068:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 48504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1077:1:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 48502,
                      "name": "setupOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46141,
                      "src": "1056:11:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address[] memory,uint256)"
                      }
                    },
                    "id": 48505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1056:23:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48506,
                  "nodeType": "ExpressionStatement",
                  "src": "1056:23:54"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 48479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48478,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "935:6:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 48508,
                  "src": "927:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "926:16:54"
            },
            "returnParameters": {
              "id": 48480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:0:54"
            },
            "scope": 48615,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48614,
            "nodeType": "FunctionDefinition",
            "src": "1096:749:54",
            "nodes": [],
            "body": {
              "id": 48613,
              "nodeType": "Block",
              "src": "1118:727:54",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48515
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48515,
                      "mutability": "mutable",
                      "name": "_owners",
                      "nameLocation": "1144:7:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 48613,
                      "src": "1128:23:54",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 48513,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1128:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48514,
                        "nodeType": "ArrayTypeName",
                        "src": "1128:9:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48518,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48516,
                      "name": "getOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46504,
                      "src": "1154:9:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (address[] memory)"
                      }
                    },
                    "id": 48517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1154:11:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1128:37:54"
                },
                {
                  "assignments": [
                    48520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48520,
                      "mutability": "mutable",
                      "name": "AddressZero",
                      "nameLocation": "1189:11:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 48613,
                      "src": "1181:19:54",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 48519,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1181:7:54",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48525,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 48523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1211:1:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 48522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1203:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 48521,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1203:7:54",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 48524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1203:10:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1181:32:54"
                },
                {
                  "assignments": [
                    48527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48527,
                      "mutability": "mutable",
                      "name": "zeroBytes",
                      "nameLocation": "1236:9:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 48613,
                      "src": "1223:22:54",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 48526,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1223:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48532,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 48530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1258:1:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 48529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1248:9:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 48528,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1252:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 48531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1248:12:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1223:37:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48534,
                        "name": "EXTENSIBLE_FALLBACK_HANDLER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47714,
                        "src": "1297:27:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48533,
                      "name": "internalSetFallbackHandler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45410,
                      "src": "1270:26:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 48535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1270:55:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48536,
                  "nodeType": "ExpressionStatement",
                  "src": "1270:55:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48538,
                        "name": "AddressZero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48520,
                        "src": "1348:11:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48539,
                        "name": "zeroBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48527,
                        "src": "1361:9:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 48537,
                      "name": "setupModules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45661,
                      "src": "1335:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 48540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1335:36:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48541,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:36:54"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 48543,
                          "name": "_owners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48515,
                          "src": "1397:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 48545,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 48544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1405:1:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1397:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48546,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48515,
                        "src": "1409:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 48547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1418:1:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 48548,
                        "name": "AddressZero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48520,
                        "src": "1421:11:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48549,
                        "name": "EXTENSIBLE_FALLBACK_HANDLER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47714,
                        "src": "1434:27:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48542,
                      "name": "SafeSetup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44486,
                      "src": "1387:9:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address[] memory,uint256,address,address)"
                      }
                    },
                    "id": 48550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1387:75:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48551,
                  "nodeType": "EmitStatement",
                  "src": "1382:80:54"
                },
                {
                  "expression": {
                    "id": 48568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 48552,
                          "name": "domainVerifiers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47233,
                          "src": "1473:15:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_Safe_$45342_$_t_mapping$_t_bytes32_$_t_contract$_ISafeSignatureVerifier_$47191_$_$",
                            "typeString": "mapping(contract Safe => mapping(bytes32 => contract ISafeSignatureVerifier))"
                          }
                        },
                        "id": 48563,
                        "indexExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 48558,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "1510:4:54",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeModdato_$48615",
                                        "typeString": "contract SafeModdato"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeModdato_$48615",
                                        "typeString": "contract SafeModdato"
                                      }
                                    ],
                                    "id": 48557,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1502:7:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 48556,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1502:7:54",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 48559,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1502:13:54",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 48555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1494:8:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 48554,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1494:8:54",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 48560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1494:22:54",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 48553,
                            "name": "Safe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45342,
                            "src": "1489:4:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Safe_$45342_$",
                              "typeString": "type(contract Safe)"
                            }
                          },
                          "id": 48561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1489:28:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Safe_$45342",
                            "typeString": "contract Safe"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1473:45:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_ISafeSignatureVerifier_$47191_$",
                          "typeString": "mapping(bytes32 => contract ISafeSignatureVerifier)"
                        }
                      },
                      "id": 48564,
                      "indexExpression": {
                        "id": 48562,
                        "name": "DOMAIN_SEPARATOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47723,
                        "src": "1519:16:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1473:63:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISafeSignatureVerifier_$47191",
                        "typeString": "contract ISafeSignatureVerifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48566,
                          "name": "COMPOSABLE_COW",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47720,
                          "src": "1562:14:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 48565,
                        "name": "ISafeSignatureVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47191,
                        "src": "1539:22:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISafeSignatureVerifier_$47191_$",
                          "typeString": "type(contract ISafeSignatureVerifier)"
                        }
                      },
                      "id": 48567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1539:38:54",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISafeSignatureVerifier_$47191",
                        "typeString": "contract ISafeSignatureVerifier"
                      }
                    },
                    "src": "1473:104:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISafeSignatureVerifier_$47191",
                      "typeString": "contract ISafeSignatureVerifier"
                    }
                  },
                  "id": 48569,
                  "nodeType": "ExpressionStatement",
                  "src": "1473:104:54"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 48576,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "1633:4:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SafeModdato_$48615",
                                      "typeString": "contract SafeModdato"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SafeModdato_$48615",
                                      "typeString": "contract SafeModdato"
                                    }
                                  ],
                                  "id": 48575,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1625:7:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 48574,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1625:7:54",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 48577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1625:13:54",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 48573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1617:8:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 48572,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1617:8:54",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1617:22:54",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 48571,
                          "name": "Safe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45342,
                          "src": "1612:4:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Safe_$45342_$",
                            "typeString": "type(contract Safe)"
                          }
                        },
                        "id": 48579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1612:28:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$45342",
                          "typeString": "contract Safe"
                        }
                      },
                      {
                        "id": 48580,
                        "name": "DOMAIN_SEPARATOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47723,
                        "src": "1642:16:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 48582,
                            "name": "COMPOSABLE_COW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47720,
                            "src": "1683:14:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48581,
                          "name": "ISafeSignatureVerifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47191,
                          "src": "1660:22:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISafeSignatureVerifier_$47191_$",
                            "typeString": "type(contract ISafeSignatureVerifier)"
                          }
                        },
                        "id": 48583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1660:38:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafeSignatureVerifier_$47191",
                          "typeString": "contract ISafeSignatureVerifier"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Safe_$45342",
                          "typeString": "contract Safe"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_ISafeSignatureVerifier_$47191",
                          "typeString": "contract ISafeSignatureVerifier"
                        }
                      ],
                      "id": 48570,
                      "name": "AddedDomainVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47243,
                      "src": "1592:19:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Safe_$45342_$_t_bytes32_$_t_contract$_ISafeSignatureVerifier_$47191_$returns$__$",
                        "typeString": "function (contract Safe,bytes32,contract ISafeSignatureVerifier)"
                      }
                    },
                    "id": 48584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1592:107:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48585,
                  "nodeType": "EmitStatement",
                  "src": "1587:112:54"
                },
                {
                  "body": {
                    "id": 48611,
                    "nodeType": "Block",
                    "src": "1754:85:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48603,
                              "name": "COMPOSABLE_COW",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47720,
                              "src": "1794:14:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 48606,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1815:7:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 48605,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1815:7:54",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 48604,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "1810:4:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 48607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1810:13:54",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 48608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1824:3:54",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "1810:17:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 48598,
                                    "name": "ERC20s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48470,
                                    "src": "1775:6:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 48600,
                                  "indexExpression": {
                                    "id": 48599,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48587,
                                    "src": "1782:1:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1775:9:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 48597,
                                "name": "ierc20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48454,
                                "src": "1768:6:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ierc20_$48454_$",
                                  "typeString": "type(contract ierc20)"
                                }
                              },
                              "id": 48601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1768:17:54",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ierc20_$48454",
                                "typeString": "contract ierc20"
                              }
                            },
                            "id": 48602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1786:7:54",
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48453,
                            "src": "1768:25:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 48609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1768:60:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 48610,
                        "nodeType": "ExpressionStatement",
                        "src": "1768:60:54"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 48590,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48587,
                      "src": "1730:1:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 48591,
                        "name": "ERC20s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48470,
                        "src": "1734:6:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 48592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1741:6:54",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1734:13:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1730:17:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48612,
                  "initializationExpression": {
                    "assignments": [
                      48587
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 48587,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1723:1:54",
                        "nodeType": "VariableDeclaration",
                        "scope": 48612,
                        "src": "1715:9:54",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 48586,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1715:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 48589,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 48588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1727:1:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1715:13:54"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 48595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1749:3:54",
                      "subExpression": {
                        "id": 48594,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48587,
                        "src": "1749:1:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48596,
                    "nodeType": "ExpressionStatement",
                    "src": "1749:3:54"
                  },
                  "nodeType": "ForStatement",
                  "src": "1710:129:54"
                }
              ]
            },
            "functionSelector": "2986e054",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mod",
            "nameLocation": "1105:3:54",
            "parameters": {
              "id": 48509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1108:2:54"
            },
            "returnParameters": {
              "id": 48510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1118:0:54"
            },
            "scope": 48615,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48455,
              "name": "Safe",
              "nameLocations": [
                "330:4:54"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45342,
              "src": "330:4:54"
            },
            "id": 48456,
            "nodeType": "InheritanceSpecifier",
            "src": "330:4:54"
          },
          {
            "baseName": {
              "id": 48457,
              "name": "SignatureVerifierMuxer",
              "nameLocations": [
                "336:22:54"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47560,
              "src": "336:22:54"
            },
            "id": 48458,
            "nodeType": "InheritanceSpecifier",
            "src": "336:22:54"
          }
        ],
        "canonicalName": "SafeModdato",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          48615,
          47560,
          47211,
          47168,
          47048,
          46799,
          45342,
          45566,
          46662,
          45437,
          47611,
          46561,
          46607,
          46505,
          45992,
          45375,
          46587,
          46534,
          46613
        ],
        "name": "SafeModdato",
        "nameLocation": "315:11:54",
        "scope": 48616,
        "usedErrors": [],
        "usedEvents": [
          44486,
          44492,
          44496,
          44502,
          44508,
          45385,
          45511,
          45580,
          45584,
          45588,
          45592,
          46002,
          46006,
          46010,
          46521,
          46849,
          46860,
          46867,
          47243,
          47256,
          47263,
          48476
        ]
      }
    ]
  },
  "id": 54
}