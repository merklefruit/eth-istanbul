{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Safe",
          "name": "safe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract ISafeSignatureVerifier",
          "name": "verifier",
          "type": "address"
        }
      ],
      "name": "AddedDomainVerifier",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "AddedOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Safe",
          "name": "safe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "method",
          "type": "bytes32"
        }
      ],
      "name": "AddedSafeMethod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "approvedHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ApproveHash",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Safe",
          "name": "safe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract ISafeSignatureVerifier",
          "name": "oldVerifier",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ISafeSignatureVerifier",
          "name": "newVerifier",
          "type": "address"
        }
      ],
      "name": "ChangedDomainVerifier",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "handler",
          "type": "address"
        }
      ],
      "name": "ChangedFallbackHandler",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "guard",
          "type": "address"
        }
      ],
      "name": "ChangedGuard",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Safe",
          "name": "safe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "oldMethod",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newMethod",
          "type": "bytes32"
        }
      ],
      "name": "ChangedSafeMethod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        }
      ],
      "name": "ChangedThreshold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "DisabledModule",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "EnabledModule",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        }
      ],
      "name": "ExecutionFailure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "ExecutionFromModuleFailure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "ExecutionFromModuleSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        }
      ],
      "name": "ExecutionSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Safe",
          "name": "safe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        }
      ],
      "name": "RemovedDomainVerifier",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "RemovedOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Safe",
          "name": "safe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "RemovedSafeMethod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SafeReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "owners",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "initializer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "fallbackHandler",
          "type": "address"
        }
      ],
      "name": "SafeSetup",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        }
      ],
      "name": "SignMsg",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ERC20s",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "addOwnerWithThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hashToApprove",
          "type": "bytes32"
        }
      ],
      "name": "approveHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "approvedHashes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "changeThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signatures",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "requiredSignatures",
          "type": "uint256"
        }
      ],
      "name": "checkNSignatures",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signatures",
          "type": "bytes"
        }
      ],
      "name": "checkSignatures",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "prevModule",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "disableModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Safe",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "domainVerifiers",
      "outputs": [
        {
          "internalType": "contract ISafeSignatureVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "enableModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "safeTxGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "gasToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "refundReceiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "encodeTransactionData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "safeTxGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "gasToken",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "refundReceiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "signatures",
          "type": "bytes"
        }
      ],
      "name": "execTransaction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        }
      ],
      "name": "execTransactionFromModule",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        }
      ],
      "name": "execTransactionFromModuleReturnData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "returnData",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "start",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pageSize",
          "type": "uint256"
        }
      ],
      "name": "getModulesPaginated",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "array",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "next",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "getStorageAt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "safeTxGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "gasToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "refundReceiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "getTransactionHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "module",
          "type": "address"
        }
      ],
      "name": "isModuleEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magic",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "removeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Safe",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "name": "safeMethods",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        },
        {
          "internalType": "contract ISafeSignatureVerifier",
          "name": "newVerifier",
          "type": "address"
        }
      ],
      "name": "setDomainVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "handler",
          "type": "address"
        }
      ],
      "name": "setFallbackHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guard",
          "type": "address"
        }
      ],
      "name": "setGuard",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_threshold",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "fallbackHandler",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "paymentReceiver",
          "type": "address"
        }
      ],
      "name": "setup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "signedMessages",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "targetContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "calldataPayload",
          "type": "bytes"
        }
      ],
      "name": "simulateAndRevert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "swapOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6101806040527302abbdbaaa7b1bb64b5c878f7ac17f8dda16953260809081527391056d4a53e1faa1a84306d4deaec71085394bc860a05273d87ba7a50b2e7e660f678a895e4b72e7cb4ccd9c60c05273dc31ee1784292379fbb2964b3b9c4124d8f89c6060e05273e4e81fa6b16327d4b78cfeb83aade04ba7075165610100527370cba46d2e933030e2f274ae58c951c800548aef61012052739e32c0eff886b6ccae99350fd5e7002dced55f156101405273b4fbf271143f4fbf7b91a5ded31805e42b2208d661016052620000db90600b90600862000575565b50348015620000e957600080fd5b5060016004556200010e732f55e8b20d0b9fefa187aa7d00b6cbe563605bf562000219565b6200014e7ffb378b35457022ecc5709ae5dafad9393c1387ae6d8ce24913a0c969074c07fb73fdafc9d1902f4e0b84f65f49f244b32b31013b7462000265565b60005b600b548110156200021257600b8181548110620001725762000172620005f6565b60009182526020909120015460405163095ea7b360e01b815273fdafc9d1902f4e0b84f65f49f244b32b31013b74600482015260001960248201526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015620001e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020891906200060c565b5060010162000151565b5062000637565b6200022362000472565b6200022e81620004ad565b6040516001600160a01b038216907f5ac6c46c93c8d0e53714ba3b53db3e7c046da994313d7ed0d192028bc7c228b090600090a250565b336200027062000513565b6001600160a01b031614620002cc5760405162461bcd60e51b815260206004820152601e60248201527f6f6e6c7920736166652063616e2063616c6c2074686973206d6574686f64000060448201526064015b60405180910390fd5b6000620002d862000513565b6001600160a01b038082166000908152600a602090815260408083208884529091529020549192509081169083161580156200031c57506001600160a01b03811615155b156200038b576001600160a01b0382166000818152600a6020908152604080832088845282529182902080546001600160a01b031916905590518681527ff1984d1a49cc75dcbf01cd175870cb7eb9a4fd87b538a87007e4dbb0399b61a991015b60405180910390a26200046c565b6001600160a01b038281166000908152600a60209081526040808320888452909152902080546001600160a01b03191685831617905581166200040b57604080518581526001600160a01b0385811660208301528416917fae938181ed4437a46f12ead84e69947e6d84a1113a49d9c0075d8d35c6ce273c91016200037d565b816001600160a01b03167f06341ac2f62eb79165de8c8b54ab89a8825b12746c2b98e01dff1007837d2ba885838660405162000463939291909283526001600160a01b03918216602084015216604082015260600190565b60405180910390a25b50505050565b333014620004ab5760405162461bcd60e51b8152602060048201526005602482015264475330333160d81b6044820152606401620002c3565b565b306001600160a01b03821603620004ef5760405162461bcd60e51b8152602060048201526005602482015264047533430360dc1b6044820152606401620002c3565b7f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d555565b60006014361015620005685760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642063616c6c64617461206c656e6774680000000000000000006044820152606401620002c3565b5060131936013560601c90565b828054828255906000526020600020908101928215620005cd579160200282015b82811115620005cd57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000596565b50620005db929150620005df565b5090565b5b80821115620005db5760008155600101620005e0565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156200061f57600080fd5b815180151581146200063057600080fd5b9392505050565b613ace80620006476000396000f3fe6080604052600436106102085760003560e01c80637d83297411610118578063e009cfde116100a0578063e86637db1161006f578063e86637db1461071a578063f08a03231461073a578063f698da251461075a578063f8dc5dd91461076f578063ffa1ad741461078f57610244565b8063e009cfde146106a5578063e19a9dd9146106c5578063e318b52b146106e5578063e75235b81461070557610244565b8063b4faba09116100e7578063b4faba09146105f7578063b63e800d14610617578063cc2f845214610637578063d4d9bdcd14610665578063d8d11f781461068557610244565b80637d83297414610567578063934f3a111461059f578063a0e67e2b146105bf578063affed0e0146105e157610244565b80633408e4701161019b5780635624b25b1161016a5780635624b25b146104ba5780635ae6bd37146104e7578063610b592514610514578063694e80c3146105345780636a7612021461055457610244565b80633408e47014610418578063468721a71461042b57806351cad5ee1461044b5780635229073f1461048c57610244565b806318ec91b9116101d757806318ec91b9146103705780632d9ad53d146103a85780632f54bf6e146103d85780633365582c146103f857610244565b80630a3fe054146102aa5780630d582f13146102f557806312fb68e0146103175780631626ba7e1461033757610244565b366102445760405134815233907f3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d9060200160405180910390a2005b34801561025057600080fd5b507f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d580548061027b57005b36600080373360601b365260008060143601600080855af190503d6000803e806102a4573d6000fd5b503d6000f35b3480156102b657600080fd5b506102e26102c5366004612d96565b600960209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561030157600080fd5b50610315610310366004612ddf565b6107c0565b005b34801561032357600080fd5b50610315610332366004612ead565b610918565b34801561034357600080fd5b50610357610352366004612f69565b610db7565b6040516001600160e01b031990911681526020016102ec565b34801561037c57600080fd5b5061039061038b366004612fb4565b610f62565b6040516001600160a01b0390911681526020016102ec565b3480156103b457600080fd5b506103c86103c3366004612fcd565b610f8c565b60405190151581526020016102ec565b3480156103e457600080fd5b506103c86103f3366004612fcd565b610fc7565b34801561040457600080fd5b50610315610413366004612fea565b610fff565b34801561042457600080fd5b50466102e2565b34801561043757600080fd5b506103c861044636600461301e565b6111fc565b34801561045757600080fd5b50610390610466366004612ddf565b600a6020908152600092835260408084209091529082529020546001600160a01b031681565b34801561049857600080fd5b506104ac6104a736600461301e565b6112d5565b6040516102ec9291906130d7565b3480156104c657600080fd5b506104da6104d53660046130f2565b61130b565b6040516102ec9190613114565b3480156104f357600080fd5b506102e2610502366004612fb4565b60076020526000908152604090205481565b34801561052057600080fd5b5061031561052f366004612fcd565b611386565b34801561054057600080fd5b5061031561054f366004612fb4565b6114bf565b6103c8610562366004613127565b61155d565b34801561057357600080fd5b506102e2610582366004612ddf565b600860209081526000928352604080842090915290825290205481565b3480156105ab57600080fd5b506103156105ba3660046131ff565b6118a8565b3480156105cb57600080fd5b506105d46118ec565b6040516102ec91906132b0565b3480156105ed57600080fd5b506102e260055481565b34801561060357600080fd5b506103156106123660046132c3565b6119dc565b34801561062357600080fd5b50610315610632366004613312565b6119ff565b34801561064357600080fd5b50610657610652366004612ddf565b611b01565b6040516102ec929190613406565b34801561067157600080fd5b50610315610680366004612fb4565b611cbc565b34801561069157600080fd5b506102e26106a0366004613430565b611d51565b3480156106b157600080fd5b506103156106c03660046134f0565b611d7e565b3480156106d157600080fd5b506103156106e0366004612fcd565b611ea0565b3480156106f157600080fd5b5061031561070036600461351e565b611fb6565b34801561071157600080fd5b506004546102e2565b34801561072657600080fd5b506104da610735366004613430565b612191565b34801561074657600080fd5b50610315610755366004612fcd565b61226a565b34801561076657600080fd5b506102e26122b2565b34801561077b57600080fd5b5061031561078a366004613569565b612309565b34801561079b57600080fd5b506104da60405180604001604052806005815260200164312e342e3160d81b81525081565b6107c8612474565b6001600160a01b038216158015906107ea57506001600160a01b038216600114155b80156107ff57506001600160a01b0382163014155b6108245760405162461bcd60e51b815260040161081b906135aa565b60405180910390fd5b6001600160a01b03828116600090815260026020526040902054161561085c5760405162461bcd60e51b815260040161081b906135c9565b60026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e080546001600160a01b038481166000818152604081208054939094166001600160a01b0319938416179093556001835283549091161790915560038054916108c9836135fe565b90915550506040516001600160a01b038316907f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2690600090a2806004541461091457610914816114bf565b5050565b6109238160416124ad565b8251101561095b5760405162461bcd60e51b8152602060048201526005602482015264047533032360dc1b604482015260640161081b565b6000808060008060005b86811015610dab576041818102890160208101516040820151919092015160ff16955090935091506000849003610b7357885160208a01208a146109d35760405162461bcd60e51b8152602060048201526005602482015264475330323760d81b604482015260640161081b565b91935083916109e38760416124ad565b821015610a1a5760405162461bcd60e51b8152602060048201526005602482015264475330323160d81b604482015260640161081b565b8751610a278360206124e2565b1115610a5d5760405162461bcd60e51b815260206004820152600560248201526423a998191960d91b604482015260640161081b565b602082890181015189519091610a80908390610a7a9087906124e2565b906124e2565b1115610ab65760405162461bcd60e51b8152602060048201526005602482015264475330323360d81b604482015260640161081b565b6040516320c13b0b60e01b8082528a8501602001916001600160a01b038916906320c13b0b90610aec908f908690600401613617565b602060405180830381865afa158015610b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2d919061363c565b6001600160e01b03191614610b6c5760405162461bcd60e51b815260206004820152600560248201526411d4cc0c8d60da1b604482015260640161081b565b5050610d1a565b8360ff16600103610bf5579193508391336001600160a01b0384161480610bbc57506001600160a01b03851660009081526008602090815260408083208d845290915290205415155b610bf05760405162461bcd60e51b8152602060048201526005602482015264475330323560d81b604482015260640161081b565b610d1a565b601e8460ff161115610cba576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018b9052600190605c0160405160208183030381529060405280519060200120600486610c5a9190613659565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610ca9573d6000803e3d6000fd5b505050602060405103519450610d1a565b6040805160008152602081018083528c905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610d0d573d6000803e3d6000fd5b5050506020604051035194505b856001600160a01b0316856001600160a01b0316118015610d5457506001600160a01b038581166000908152600260205260409020541615155b8015610d6a57506001600160a01b038516600114155b610d9e5760405162461bcd60e51b815260206004820152600560248201526423a998191b60d91b604482015260640161081b565b9394508493600101610965565b50505050505050505050565b6000806000610dc46124fe565b909250905060048410610f15576001600160e01b0319853516635fd7e97d60e01b81148015610df4575060448510155b15610f1357600080610e0a60446004898b613672565b810190610e1791906130f2565b6001600160a01b038088166000908152600a60209081526040808320868452909152902054929450909250168015610f0f57600080610e598a6004818e613672565b810190610e66919061369c565b9350935050508b610e7886868561250f565b8051906020012003610f0c57826001600160a01b03166353f00b1489898f898988886040518863ffffffff1660e01b8152600401610ebc9796959493929190613712565b602060405180830381865afa158015610ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efd919061363c565b98505050505050505050610f5b565b50505b5050505b505b610f56828787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061258992505050565b925050505b9392505050565b600b8181548110610f7257600080fd5b6000918252602090912001546001600160a01b0316905081565b600060016001600160a01b03831614801590610fc157506001600160a01b038281166000908152600160205260409020541615155b92915050565b60006001600160a01b038216600114801590610fc15750506001600160a01b0390811660009081526002602052604090205416151590565b33611008612788565b6001600160a01b03161461105e5760405162461bcd60e51b815260206004820152601e60248201527f6f6e6c7920736166652063616e2063616c6c2074686973206d6574686f640000604482015260640161081b565b6000611068612788565b6001600160a01b038082166000908152600a602090815260408083208884529091529020549192509081169083161580156110ab57506001600160a01b03811615155b15611118576001600160a01b0382166000818152600a6020908152604080832088845282529182902080546001600160a01b031916905590518681527ff1984d1a49cc75dcbf01cd175870cb7eb9a4fd87b538a87007e4dbb0399b61a991015b60405180910390a26111f6565b6001600160a01b038281166000908152600a60209081526040808320888452909152902080546001600160a01b031916858316179055811661119657604080518581526001600160a01b0385811660208301528416917fae938181ed4437a46f12ead84e69947e6d84a1113a49d9c0075d8d35c6ce273c910161110b565b816001600160a01b03167f06341ac2f62eb79165de8c8b54ab89a8825b12746c2b98e01dff1007837d2ba88583866040516111ed939291909283526001600160a01b03918216602084015216604082015260600190565b60405180910390a25b50505050565b6000336001148015906112265750336000908152600160205260409020546001600160a01b031615155b61125a5760405162461bcd60e51b815260206004820152600560248201526411d4cc4c0d60da1b604482015260640161081b565b611269858585856000196127e8565b905080156112a15760405133907f6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb890600090a26112cd565b60405133907facd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd37590600090a25b949350505050565b600060606112e5868686866111fc565b915060405160203d0181016040523d81523d6000602083013e8091505094509492505050565b6060600061131a83602061376f565b6001600160401b0381111561133157611331612e0b565b6040519080825280601f01601f19166020018201604052801561135b576020820181803683370190505b50905060005b8381101561137e5784810154602080830284010152600101611361565b509392505050565b61138e612474565b6001600160a01b038116158015906113b057506001600160a01b038116600114155b6113e45760405162461bcd60e51b8152602060048201526005602482015264475331303160d81b604482015260640161081b565b6001600160a01b0381811660009081526001602052604090205416156114345760405162461bcd60e51b815260206004820152600560248201526423a998981960d91b604482015260640161081b565b600160208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f80546001600160a01b03848116600081815260408082208054949095166001600160a01b031994851617909455948552835490911681179092555190917fecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f844091a250565b6114c7612474565b6003548111156114e95760405162461bcd60e51b815260040161081b90613786565b60018110156115225760405162461bcd60e51b815260206004820152600560248201526423a999181960d91b604482015260640161081b565b60048190556040518181527f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c939060200160405180910390a150565b60008060006115778e8e8e8e8e8e8e8e8e8e600554612191565b600580549192506000611589836135fe565b90915550508051602082012091506115a28282866118a8565b5060006115cd7f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c85490565b90506001600160a01b0381161561165357806001600160a01b03166375f0bb528f8f8f8f8f8f8f8f8f8f8f336040518d63ffffffff1660e01b81526004016116209c9b9a999897969594939291906137dd565b600060405180830381600087803b15801561163a57600080fd5b505af115801561164e573d6000803e3d6000fd5b505050505b61167f6116628a6109c46138a2565b603f61166f8c604061376f565b61167991906138b5565b9061282f565b61168b906101f46138a2565b5a10156116c25760405162461bcd60e51b8152602060048201526005602482015264047533031360dc1b604482015260640161081b565b60005a90506117338f8f8f8f8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508e8c600014611720578e6127e8565b6109c45a61172e91906138d7565b6127e8565b93506117405a8290612846565b9050838061174d57508915155b8061175757508715155b61178b5760405162461bcd60e51b8152602060048201526005602482015264475330313360d81b604482015260640161081b565b600088156117a3576117a0828b8b8b8b612861565b90505b84156117e857837f442e715f626346e8c54381002da614f62bee8d27386535b2521ec8540898556e826040516117db91815260200190565b60405180910390a2611823565b837f23428b18acfb3ea64b08dc0c1d296ea9c09702c09083ca5272e64d115b687d238260405161181a91815260200190565b60405180910390a25b50506001600160a01b0381161561189757604051631264e26d60e31b81526004810183905283151560248201526001600160a01b03821690639327136890604401600060405180830381600087803b15801561187e57600080fd5b505af1158015611892573d6000803e3d6000fd5b505050505b50509b9a5050505050505050505050565b600454806118e05760405162461bcd60e51b8152602060048201526005602482015264475330303160d81b604482015260640161081b565b6111f684848484610918565b606060006003546001600160401b0381111561190a5761190a612e0b565b604051908082528060200260200182016040528015611933578160200160208202803683370190505b506001600090815260026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e054919250906001600160a01b03165b6001600160a01b0381166001146119d45780838381518110611994576119946138ea565b6001600160a01b039283166020918202929092018101919091529181166000908152600290925260409091205416816119cc816135fe565b925050611970565b509092915050565b600080825160208401855af480600052503d6020523d600060403e60403d016000fd5b611a3d8a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508c9250612967915050565b6001600160a01b03841615611a5557611a5584612b43565b611a958787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612ba792505050565b8115611aac57611aaa82600060018685612861565b505b336001600160a01b03167f141df868a6331af528e38c83b7aa03edc19be66e37ae67f9285bf4f8e3c6a1a88b8b8b8b89604051611aed959493929190613900565b60405180910390a250505050505050505050565b606060006001600160a01b03841660011480611b215750611b2184610f8c565b611b555760405162461bcd60e51b8152602060048201526005602482015264475331303560d81b604482015260640161081b565b60008311611b8d5760405162461bcd60e51b815260206004820152600560248201526423a998981b60d91b604482015260640161081b565b826001600160401b03811115611ba557611ba5612e0b565b604051908082528060200260200182016040528015611bce578160200160208202803683370190505b506001600160a01b03808616600090815260016020526040812054929450911691505b6001600160a01b03821615801590611c1357506001600160a01b038216600114155b8015611c1e57508381105b15611c795781838281518110611c3657611c366138ea565b6001600160a01b03928316602091820292909201810191909152928116600090815260019093526040909220549091169080611c71816135fe565b915050611bf1565b6001600160a01b038216600114611cb15782611c966001836138d7565b81518110611ca657611ca66138ea565b602002602001015191505b808352509250929050565b336000908152600260205260409020546001600160a01b0316611d095760405162461bcd60e51b8152602060048201526005602482015264047533033360dc1b604482015260640161081b565b336000818152600860209081526040808320858452909152808220600190555183917ff2a0eb156472d1440255b0d7c1e19cc07115d1051fe605b0dce69acfec884d9c91a350565b6000611d668c8c8c8c8c8c8c8c8c8c8c612191565b8051906020012090509b9a5050505050505050505050565b611d86612474565b6001600160a01b03811615801590611da857506001600160a01b038116600114155b611ddc5760405162461bcd60e51b8152602060048201526005602482015264475331303160d81b604482015260640161081b565b6001600160a01b03828116600090815260016020526040902054811690821614611e305760405162461bcd60e51b8152602060048201526005602482015264475331303360d81b604482015260640161081b565b6001600160a01b03818116600081815260016020526040808220805487861684528284208054919096166001600160a01b0319918216179095558383528054909416909355915190917faab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace405427691a25050565b611ea8612474565b6001600160a01b03811615611f5a576040516301ffc9a760e01b815263736bd41d60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015611f02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f26919061396c565b611f5a5760405162461bcd60e51b8152602060048201526005602482015264047533330360dc1b604482015260640161081b565b7f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c88181556040516001600160a01b038316907f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa290600090a25050565b611fbe612474565b6001600160a01b03811615801590611fe057506001600160a01b038116600114155b8015611ff557506001600160a01b0381163014155b6120115760405162461bcd60e51b815260040161081b906135aa565b6001600160a01b0381811660009081526002602052604090205416156120495760405162461bcd60e51b815260040161081b906135c9565b6001600160a01b0382161580159061206b57506001600160a01b038216600114155b6120875760405162461bcd60e51b815260040161081b906135aa565b6001600160a01b038381166000908152600260205260409020548116908316146120db5760405162461bcd60e51b8152602060048201526005602482015264475332303560d81b604482015260640161081b565b6001600160a01b03828116600081815260026020526040808220805486861680855283852080549288166001600160a01b03199384161790559589168452828420805482169096179095558383528054909416909355915190917ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf91a26040516001600160a01b038216907f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2690600090a2505050565b606060007fbb8310d486368db6bd6f849402fdd73ad53d316b5a4b2644ad6efe0f941286d860001b8d8d8d8d6040516121cb92919061398e565b6040519081900381206121f1949392918e908e908e908e908e908e908e9060200161399e565b60408051601f1981840301815291905280516020909101209050601960f81b600160f81b61221d6122b2565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150509b9a5050505050505050505050565b612272612474565b61227b81612b43565b6040516001600160a01b038216907f5ac6c46c93c8d0e53714ba3b53db3e7c046da994313d7ed0d192028bc7c228b090600090a250565b60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b612311612474565b80600160035461232191906138d7565b101561233f5760405162461bcd60e51b815260040161081b90613786565b6001600160a01b0382161580159061236157506001600160a01b038216600114155b61237d5760405162461bcd60e51b815260040161081b906135aa565b6001600160a01b038381166000908152600260205260409020548116908316146123d15760405162461bcd60e51b8152602060048201526005602482015264475332303560d81b604482015260640161081b565b6001600160a01b03828116600081815260026020526040808220805488861684529183208054929095166001600160a01b0319928316179094559181528254909116909155600380549161242483613a0d565b90915550506040516001600160a01b038316907ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf90600090a2806004541461246f5761246f816114bf565b505050565b3330146124ab5760405162461bcd60e51b8152602060048201526005602482015264475330333160d81b604482015260640161081b565b565b6000826000036124bf57506000610fc1565b60006124cb838561376f565b9050826124d885836138b5565b14610f5b57600080fd5b6000806124ef83856138a2565b905083811015610f5b57600080fd5b336000612509612788565b90509091565b6060601960f81b600160f81b85858560405160200161252f929190613a24565b60408051808303601f190181529082905280516020918201206001600160f81b0319958616918301919091529290931660218401526022830152604282015260620160405160208183030381529060405290509392505050565b600080612650856001600160a01b031663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f19190613a4a565b60408051602081018890527f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca910160408051601f198184030181528282528051602091820120908301520160405160208183030381529060405261250f565b8051602082012084519192509060000361271557604051635ae6bd3760e01b8152600481018290526001600160a01b03871690635ae6bd3790602401602060405180830381865afa1580156126a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126cd9190613a4a565b6000036127105760405162461bcd60e51b815260206004820152601160248201527012185cda081b9bdd08185c1c1c9bdd9959607a1b604482015260640161081b565b612776565b60405163934f3a1160e01b81526001600160a01b0387169063934f3a119061274590849086908990600401613a63565b60006040518083038186803b15801561275d57600080fd5b505afa158015612771573d6000803e3d6000fd5b505050505b50630b135d3f60e11b95945050505050565b600060143610156127db5760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642063616c6c64617461206c656e677468000000000000000000604482015260640161081b565b5060131936013560601c90565b600060018360018111156127fe576127fe6137a5565b03612816576000808551602087018986f49050612826565b600080855160208701888a87f190505b95945050505050565b60008183101561283f5781610f5b565b5090919050565b60008282111561285557600080fd5b60006112cd83856138d7565b6000806001600160a01b03831615612879578261287b565b325b90506001600160a01b03841661290e576128ad3a861061289b573a61289d565b855b6128a789896124e2565b906124ad565b6040519092506001600160a01b0382169083156108fc029084906000818181858888f193505050506129095760405162461bcd60e51b8152602060048201526005602482015264475330313160d81b604482015260640161081b565b61295d565b61291c856128a789896124e2565b9150612929848284612cd9565b61295d5760405162461bcd60e51b815260206004820152600560248201526423a998189960d91b604482015260640161081b565b5095945050505050565b6004541561299f5760405162461bcd60e51b8152602060048201526005602482015264047533230360dc1b604482015260640161081b565b81518111156129c05760405162461bcd60e51b815260040161081b90613786565b60018110156129f95760405162461bcd60e51b815260206004820152600560248201526423a999181960d91b604482015260640161081b565b600160005b8351811015612b10576000848281518110612a1b57612a1b6138ea565b6020026020010151905060006001600160a01b0316816001600160a01b031614158015612a5257506001600160a01b038116600114155b8015612a6757506001600160a01b0381163014155b8015612a855750806001600160a01b0316836001600160a01b031614155b612aa15760405162461bcd60e51b815260040161081b906135aa565b6001600160a01b038181166000908152600260205260409020541615612ad95760405162461bcd60e51b815260040161081b906135c9565b6001600160a01b03928316600090815260026020526040902080546001600160a01b031916938216939093179092556001016129fe565b506001600160a01b0316600090815260026020526040902080546001600160a01b03191660011790559051600355600455565b306001600160a01b03821603612b835760405162461bcd60e51b8152602060048201526005602482015264047533430360dc1b604482015260640161081b565b7f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d555565b600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f546001600160a01b031615612c115760405162461bcd60e51b8152602060048201526005602482015264047533130360dc1b604482015260640161081b565b6001600081905260208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f80546001600160a01b03191690911790556001600160a01b0382161561091457813b612c945760405162461bcd60e51b815260206004820152600560248201526423a998181960d91b604482015260640161081b565b612ca58260008360016000196127e8565b6109145760405162461bcd60e51b8152602060048201526005602482015264047533030360dc1b604482015260640161081b565b604080516001600160a01b03841660248201526044808201849052825180830390910181526064909101909152602080820180516001600160e01b031663a9059cbb60e01b1781528251600093929184919082896127105a03f13d8015612d4b5760208114612d535760009350612d5e565b819350612d5e565b600051158215171593505b5050509392505050565b6001600160a01b0381168114612d7d57600080fd5b50565b6001600160e01b031981168114612d7d57600080fd5b60008060408385031215612da957600080fd5b8235612db481612d68565b91506020830135612dc481612d80565b809150509250929050565b8035612dda81612d68565b919050565b60008060408385031215612df257600080fd5b8235612dfd81612d68565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112612e3257600080fd5b81356001600160401b0380821115612e4c57612e4c612e0b565b604051601f8301601f19908116603f01168101908282118183101715612e7457612e74612e0b565b81604052838152866020858801011115612e8d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215612ec357600080fd5b8435935060208501356001600160401b0380821115612ee157600080fd5b612eed88838901612e21565b94506040870135915080821115612f0357600080fd5b50612f1087828801612e21565b949793965093946060013593505050565b60008083601f840112612f3357600080fd5b5081356001600160401b03811115612f4a57600080fd5b602083019150836020828501011115612f6257600080fd5b9250929050565b600080600060408486031215612f7e57600080fd5b8335925060208401356001600160401b03811115612f9b57600080fd5b612fa786828701612f21565b9497909650939450505050565b600060208284031215612fc657600080fd5b5035919050565b600060208284031215612fdf57600080fd5b8135610f5b81612d68565b60008060408385031215612ffd57600080fd5b823591506020830135612dc481612d68565b803560028110612dda57600080fd5b6000806000806080858703121561303457600080fd5b843561303f81612d68565b93506020850135925060408501356001600160401b0381111561306157600080fd5b61306d87828801612e21565b92505061307c6060860161300f565b905092959194509250565b60005b838110156130a257818101518382015260200161308a565b50506000910152565b600081518084526130c3816020860160208601613087565b601f01601f19169290920160200192915050565b82151581526040602082015260006112cd60408301846130ab565b6000806040838503121561310557600080fd5b50508035926020909101359150565b602081526000610f5b60208301846130ab565b60008060008060008060008060008060006101408c8e03121561314957600080fd5b6131528c612dcf565b9a5060208c013599506001600160401b038060408e0135111561317457600080fd5b6131848e60408f01358f01612f21565b909a50985061319560608e0161300f565b975060808d0135965060a08d0135955060c08d013594506131b860e08e01612dcf565b93506131c76101008e01612dcf565b9250806101208e013511156131db57600080fd5b506131ed8d6101208e01358e01612e21565b90509295989b509295989b9093969950565b60008060006060848603121561321457600080fd5b8335925060208401356001600160401b038082111561323257600080fd5b61323e87838801612e21565b9350604086013591508082111561325457600080fd5b5061326186828701612e21565b9150509250925092565b60008151808452602080850194506020840160005b838110156132a55781516001600160a01b031687529582019590820190600101613280565b509495945050505050565b602081526000610f5b602083018461326b565b600080604083850312156132d657600080fd5b82356132e181612d68565b915060208301356001600160401b038111156132fc57600080fd5b61330885828601612e21565b9150509250929050565b6000806000806000806000806000806101008b8d03121561333257600080fd5b8a356001600160401b038082111561334957600080fd5b818d0191508d601f83011261335d57600080fd5b81358181111561336c57600080fd5b8e60208260051b850101111561338157600080fd5b60208381019d50909b508d0135995061339c60408e01612dcf565b985060608d01359150808211156133b257600080fd5b506133bf8d828e01612f21565b90975095506133d2905060808c01612dcf565b93506133e060a08c01612dcf565b925060c08b013591506133f560e08c01612dcf565b90509295989b9194979a5092959850565b604081526000613419604083018561326b565b905060018060a01b03831660208301529392505050565b60008060008060008060008060008060006101408c8e03121561345257600080fd5b8b3561345d81612d68565b9a5060208c0135995060408c01356001600160401b0381111561347f57600080fd5b61348b8e828f01612f21565b909a50985061349e905060608d0161300f565b965060808c0135955060a08c0135945060c08c0135935060e08c01356134c381612d68565b92506101008c01356134d481612d68565b809250506101208c013590509295989b509295989b9093969950565b6000806040838503121561350357600080fd5b823561350e81612d68565b91506020830135612dc481612d68565b60008060006060848603121561353357600080fd5b833561353e81612d68565b9250602084013561354e81612d68565b9150604084013561355e81612d68565b809150509250925092565b60008060006060848603121561357e57600080fd5b833561358981612d68565b9250602084013561359981612d68565b929592945050506040919091013590565b602080825260059082015264475332303360d81b604082015260600190565b60208082526005908201526411d4cc8c0d60da1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600060018201613610576136106135e8565b5060010190565b60408152600061362a60408301856130ab565b828103602084015261282681856130ab565b60006020828403121561364e57600080fd5b8151610f5b81612d80565b60ff8281168282160390811115610fc157610fc16135e8565b6000808585111561368257600080fd5b8386111561368f57600080fd5b5050820193919092039150565b600080600080608085870312156136b257600080fd5b843593506020850135925060408501356001600160401b03808211156136d757600080fd5b6136e388838901612e21565b935060608701359150808211156136f957600080fd5b5061370687828801612e21565b91505092959194509250565b600060018060a01b03808a16835280891660208401525086604083015285606083015284608083015260e060a083015261374f60e08301856130ab565b82810360c084015261376181856130ab565b9a9950505050505050505050565b8082028115828204841417610fc157610fc16135e8565b602080825260059082015264475332303160d81b604082015260600190565b634e487b7160e01b600052602160045260246000fd5b600281106137d957634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038d168152602081018c90526101606040820181905281018a905260006101808b8d828501376000838d01820152601f8c01601f19168301613829606085018d6137bb565b8a60808501528960a08501528860c085015261385060e08501896001600160a01b03169052565b6001600160a01b0387166101008501528184820301610120850152613877828201876130ab565b925050506138916101408301846001600160a01b03169052565b9d9c50505050505050505050505050565b80820180821115610fc157610fc16135e8565b6000826138d257634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610fc157610fc16135e8565b634e487b7160e01b600052603260045260246000fd5b6080808252810185905260008660a08301825b8881101561394357823561392681612d68565b6001600160a01b0316825260209283019290910190600101613913565b50602084019690965250506001600160a01b039283166040820152911660609091015292915050565b60006020828403121561397e57600080fd5b81518015158114610f5b57600080fd5b8183823760009101908152919050565b8b81526001600160a01b038b81166020830152604082018b9052606082018a90526101608201906139d2608084018b6137bb565b60a083019890985260c082019690965260e0810194909452918516610100840152909316610120820152610140019190915295945050505050565b600081613a1c57613a1c6135e8565b506000190190565b82815260008251613a3c816020850160208701613087565b919091016020019392505050565b600060208284031215613a5c57600080fd5b5051919050565b838152606060208201526000613a7c60608301856130ab565b8281036040840152613a8e81856130ab565b969550505050505056fea2646970667358221220666a32cc8b6faadc42cd832bb774addcd69cdf17ce56bc8f231a0c66c9b133ac64736f6c63430008160033",
    "sourceMap": "712:139:78:-:0;292:909;712:139;57:42:76;292:909:78;712:139;;;134:42:76;712:139:78;;211:42:76;712:139:78;;288:42:76;712:139:78;;365:42:76;712:139:78;;442:42:76;712:139:78;;519:42:76;712:139:78;;596:42:76;712:139:78;;;;;;;;:::i;:::-;;862:337;;;;;;;;;-1:-1:-1;3963:1:55;3951:9;:13;886:47:78;697:42:76;886:18:78;:47::i;:::-;944:109;866:66:76;784:42;944:17:78;:109::i;:::-;1069:9;1064:129;1088:6;:13;1084:17;;1064:129;;;1129:6;1136:1;1129:9;;;;;;;;:::i;:::-;;;;;;;;;;;1122:60;;-1:-1:-1;;;1122:60:78;;784:42:76;1122:60:78;;;320:51:79;-1:-1:-1;;387:18:79;;;380:34;-1:-1:-1;;;;;1129:9:78;;;;1122:25;;293:18:79;;1122:60:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1103:3:78;;1064:129;;;;292:909;;2437:161:57;505:17:64;:15;:17::i;:::-;2510:35:57::1;2537:7:::0;2510:26:::1;:35::i;:::-;2560:31;::::0;-1:-1:-1;;;;;2560:31:57;::::1;::::0;::::1;::::0;;;::::1;2437:161:::0;:::o;3615:817:72:-;1614:10:69;1779:12:70;:10;:12::i;:::-;-1:-1:-1;;;;;1779:26:70;;1771:69;;;;-1:-1:-1;;;1771:69:70;;909:2:79;1771:69:70;;;891:21:79;948:2;928:18;;;921:30;987:32;967:18;;;960:60;1037:18;;1771:69:70;;;;;;;;;3738:9:72::1;3763:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;3824:21:72;;::::1;3787:34;3824:21:::0;;;:15:::1;:21;::::0;;;;;;;:38;;;;;;;;;3738:39;;-1:-1:-1;3824:38:72;;::::1;::::0;3876:34;::::1;::::0;:72;::::1;;;-1:-1:-1::0;;;;;;3914:34:72;::::1;::::0;::::1;3876:72;3872:554;;;-1:-1:-1::0;;;;;3971:21:72;::::1;;::::0;;;:15:::1;:21;::::0;;;;;;;:38;;;;;;;;;3964:45;;-1:-1:-1;;;;;;3964:45:72::1;::::0;;4028:44;;1212:25:79;;;4028:44:72::1;::::0;1185:18:79;4028:44:72::1;;;;;;;;3872:554;;;-1:-1:-1::0;;;;;4103:21:72;;::::1;;::::0;;;:15:::1;:21;::::0;;;;;;;:38;;;;;;;;:52;;-1:-1:-1;;;;;;4103:52:72::1;::::0;;::::1;;::::0;;4173:34;::::1;4169:247;;4232:55;::::0;;1454:25:79;;;-1:-1:-1;;;;;1515:32:79;;;1510:2;1495:18;;1488:60;4232:55:72;::::1;::::0;::::1;::::0;1427:18:79;4232:55:72::1;1248:306:79::0;4169:247:72::1;4353:4;-1:-1:-1::0;;;;;4331:70:72::1;;4359:15;4376:11;4389;4331:70;;;;;;;1825:25:79::0;;;-1:-1:-1;;;;;1924:15:79;;;1919:2;1904:18;;1897:43;1976:15;1971:2;1956:18;;1949:43;1813:2;1798:18;;1559:439;4331:70:72::1;;;;;;;;4169:247;3728:704;;3615:817:::0;;:::o;248:102:64:-;306:10;328:4;306:27;298:45;;;;-1:-1:-1;;;298:45:64;;2205:2:79;298:45:64;;;2187:21:79;2244:1;2224:18;;;2217:29;-1:-1:-1;;;2262:18:79;;;2255:35;2307:18;;298:45:64;2003:328:79;298:45:64;248:102::o;689:1423:57:-;1916:4;-1:-1:-1;;;;;1897:24:57;;;1889:42;;;;-1:-1:-1;;;1889:42:57;;2538:2:79;1889:42:57;;;2520:21:79;2577:1;2557:18;;;2550:29;-1:-1:-1;;;2595:18:79;;;2588:35;2640:18;;1889:42:57;2336:328:79;1889:42:57;479:66;2075:21;689:1423::o;1053:379:69:-;1098:14;1151:2;1132:8;:21;;1124:57;;;;-1:-1:-1;;;1124:57:69;;2871:2:79;1124:57:69;;;2853:21:79;2910:2;2890:18;;;2883:30;2949:25;2929:18;;;2922:53;2992:18;;1124:57:69;2669:347:79;1124:57:69;-1:-1:-1;;;1395:14:69;1391:23;1378:37;1374:2;1370:46;;1053:379::o;292:909:78:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;292:909:78;-1:-1:-1;;;;;292:909:78;;;;;;;;;;;-1:-1:-1;292:909:78;;;;;;;-1:-1:-1;292:909:78;;;-1:-1:-1;292:909:78;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:79;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;425:277;492:6;545:2;533:9;524:7;520:23;516:32;513:52;;;561:1;558;551:12;513:52;593:9;587:16;646:5;639:13;632:21;625:5;622:32;612:60;;668:1;665;658:12;612:60;691:5;425:277;-1:-1:-1;;;425:277:79:o;2669:347::-;292:909:78;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102085760003560e01c80637d83297411610118578063e009cfde116100a0578063e86637db1161006f578063e86637db1461071a578063f08a03231461073a578063f698da251461075a578063f8dc5dd91461076f578063ffa1ad741461078f57610244565b8063e009cfde146106a5578063e19a9dd9146106c5578063e318b52b146106e5578063e75235b81461070557610244565b8063b4faba09116100e7578063b4faba09146105f7578063b63e800d14610617578063cc2f845214610637578063d4d9bdcd14610665578063d8d11f781461068557610244565b80637d83297414610567578063934f3a111461059f578063a0e67e2b146105bf578063affed0e0146105e157610244565b80633408e4701161019b5780635624b25b1161016a5780635624b25b146104ba5780635ae6bd37146104e7578063610b592514610514578063694e80c3146105345780636a7612021461055457610244565b80633408e47014610418578063468721a71461042b57806351cad5ee1461044b5780635229073f1461048c57610244565b806318ec91b9116101d757806318ec91b9146103705780632d9ad53d146103a85780632f54bf6e146103d85780633365582c146103f857610244565b80630a3fe054146102aa5780630d582f13146102f557806312fb68e0146103175780631626ba7e1461033757610244565b366102445760405134815233907f3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d9060200160405180910390a2005b34801561025057600080fd5b507f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d580548061027b57005b36600080373360601b365260008060143601600080855af190503d6000803e806102a4573d6000fd5b503d6000f35b3480156102b657600080fd5b506102e26102c5366004612d96565b600960209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561030157600080fd5b50610315610310366004612ddf565b6107c0565b005b34801561032357600080fd5b50610315610332366004612ead565b610918565b34801561034357600080fd5b50610357610352366004612f69565b610db7565b6040516001600160e01b031990911681526020016102ec565b34801561037c57600080fd5b5061039061038b366004612fb4565b610f62565b6040516001600160a01b0390911681526020016102ec565b3480156103b457600080fd5b506103c86103c3366004612fcd565b610f8c565b60405190151581526020016102ec565b3480156103e457600080fd5b506103c86103f3366004612fcd565b610fc7565b34801561040457600080fd5b50610315610413366004612fea565b610fff565b34801561042457600080fd5b50466102e2565b34801561043757600080fd5b506103c861044636600461301e565b6111fc565b34801561045757600080fd5b50610390610466366004612ddf565b600a6020908152600092835260408084209091529082529020546001600160a01b031681565b34801561049857600080fd5b506104ac6104a736600461301e565b6112d5565b6040516102ec9291906130d7565b3480156104c657600080fd5b506104da6104d53660046130f2565b61130b565b6040516102ec9190613114565b3480156104f357600080fd5b506102e2610502366004612fb4565b60076020526000908152604090205481565b34801561052057600080fd5b5061031561052f366004612fcd565b611386565b34801561054057600080fd5b5061031561054f366004612fb4565b6114bf565b6103c8610562366004613127565b61155d565b34801561057357600080fd5b506102e2610582366004612ddf565b600860209081526000928352604080842090915290825290205481565b3480156105ab57600080fd5b506103156105ba3660046131ff565b6118a8565b3480156105cb57600080fd5b506105d46118ec565b6040516102ec91906132b0565b3480156105ed57600080fd5b506102e260055481565b34801561060357600080fd5b506103156106123660046132c3565b6119dc565b34801561062357600080fd5b50610315610632366004613312565b6119ff565b34801561064357600080fd5b50610657610652366004612ddf565b611b01565b6040516102ec929190613406565b34801561067157600080fd5b50610315610680366004612fb4565b611cbc565b34801561069157600080fd5b506102e26106a0366004613430565b611d51565b3480156106b157600080fd5b506103156106c03660046134f0565b611d7e565b3480156106d157600080fd5b506103156106e0366004612fcd565b611ea0565b3480156106f157600080fd5b5061031561070036600461351e565b611fb6565b34801561071157600080fd5b506004546102e2565b34801561072657600080fd5b506104da610735366004613430565b612191565b34801561074657600080fd5b50610315610755366004612fcd565b61226a565b34801561076657600080fd5b506102e26122b2565b34801561077b57600080fd5b5061031561078a366004613569565b612309565b34801561079b57600080fd5b506104da60405180604001604052806005815260200164312e342e3160d81b81525081565b6107c8612474565b6001600160a01b038216158015906107ea57506001600160a01b038216600114155b80156107ff57506001600160a01b0382163014155b6108245760405162461bcd60e51b815260040161081b906135aa565b60405180910390fd5b6001600160a01b03828116600090815260026020526040902054161561085c5760405162461bcd60e51b815260040161081b906135c9565b60026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e080546001600160a01b038481166000818152604081208054939094166001600160a01b0319938416179093556001835283549091161790915560038054916108c9836135fe565b90915550506040516001600160a01b038316907f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2690600090a2806004541461091457610914816114bf565b5050565b6109238160416124ad565b8251101561095b5760405162461bcd60e51b8152602060048201526005602482015264047533032360dc1b604482015260640161081b565b6000808060008060005b86811015610dab576041818102890160208101516040820151919092015160ff16955090935091506000849003610b7357885160208a01208a146109d35760405162461bcd60e51b8152602060048201526005602482015264475330323760d81b604482015260640161081b565b91935083916109e38760416124ad565b821015610a1a5760405162461bcd60e51b8152602060048201526005602482015264475330323160d81b604482015260640161081b565b8751610a278360206124e2565b1115610a5d5760405162461bcd60e51b815260206004820152600560248201526423a998191960d91b604482015260640161081b565b602082890181015189519091610a80908390610a7a9087906124e2565b906124e2565b1115610ab65760405162461bcd60e51b8152602060048201526005602482015264475330323360d81b604482015260640161081b565b6040516320c13b0b60e01b8082528a8501602001916001600160a01b038916906320c13b0b90610aec908f908690600401613617565b602060405180830381865afa158015610b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2d919061363c565b6001600160e01b03191614610b6c5760405162461bcd60e51b815260206004820152600560248201526411d4cc0c8d60da1b604482015260640161081b565b5050610d1a565b8360ff16600103610bf5579193508391336001600160a01b0384161480610bbc57506001600160a01b03851660009081526008602090815260408083208d845290915290205415155b610bf05760405162461bcd60e51b8152602060048201526005602482015264475330323560d81b604482015260640161081b565b610d1a565b601e8460ff161115610cba576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018b9052600190605c0160405160208183030381529060405280519060200120600486610c5a9190613659565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610ca9573d6000803e3d6000fd5b505050602060405103519450610d1a565b6040805160008152602081018083528c905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610d0d573d6000803e3d6000fd5b5050506020604051035194505b856001600160a01b0316856001600160a01b0316118015610d5457506001600160a01b038581166000908152600260205260409020541615155b8015610d6a57506001600160a01b038516600114155b610d9e5760405162461bcd60e51b815260206004820152600560248201526423a998191b60d91b604482015260640161081b565b9394508493600101610965565b50505050505050505050565b6000806000610dc46124fe565b909250905060048410610f15576001600160e01b0319853516635fd7e97d60e01b81148015610df4575060448510155b15610f1357600080610e0a60446004898b613672565b810190610e1791906130f2565b6001600160a01b038088166000908152600a60209081526040808320868452909152902054929450909250168015610f0f57600080610e598a6004818e613672565b810190610e66919061369c565b9350935050508b610e7886868561250f565b8051906020012003610f0c57826001600160a01b03166353f00b1489898f898988886040518863ffffffff1660e01b8152600401610ebc9796959493929190613712565b602060405180830381865afa158015610ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efd919061363c565b98505050505050505050610f5b565b50505b5050505b505b610f56828787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061258992505050565b925050505b9392505050565b600b8181548110610f7257600080fd5b6000918252602090912001546001600160a01b0316905081565b600060016001600160a01b03831614801590610fc157506001600160a01b038281166000908152600160205260409020541615155b92915050565b60006001600160a01b038216600114801590610fc15750506001600160a01b0390811660009081526002602052604090205416151590565b33611008612788565b6001600160a01b03161461105e5760405162461bcd60e51b815260206004820152601e60248201527f6f6e6c7920736166652063616e2063616c6c2074686973206d6574686f640000604482015260640161081b565b6000611068612788565b6001600160a01b038082166000908152600a602090815260408083208884529091529020549192509081169083161580156110ab57506001600160a01b03811615155b15611118576001600160a01b0382166000818152600a6020908152604080832088845282529182902080546001600160a01b031916905590518681527ff1984d1a49cc75dcbf01cd175870cb7eb9a4fd87b538a87007e4dbb0399b61a991015b60405180910390a26111f6565b6001600160a01b038281166000908152600a60209081526040808320888452909152902080546001600160a01b031916858316179055811661119657604080518581526001600160a01b0385811660208301528416917fae938181ed4437a46f12ead84e69947e6d84a1113a49d9c0075d8d35c6ce273c910161110b565b816001600160a01b03167f06341ac2f62eb79165de8c8b54ab89a8825b12746c2b98e01dff1007837d2ba88583866040516111ed939291909283526001600160a01b03918216602084015216604082015260600190565b60405180910390a25b50505050565b6000336001148015906112265750336000908152600160205260409020546001600160a01b031615155b61125a5760405162461bcd60e51b815260206004820152600560248201526411d4cc4c0d60da1b604482015260640161081b565b611269858585856000196127e8565b905080156112a15760405133907f6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb890600090a26112cd565b60405133907facd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd37590600090a25b949350505050565b600060606112e5868686866111fc565b915060405160203d0181016040523d81523d6000602083013e8091505094509492505050565b6060600061131a83602061376f565b6001600160401b0381111561133157611331612e0b565b6040519080825280601f01601f19166020018201604052801561135b576020820181803683370190505b50905060005b8381101561137e5784810154602080830284010152600101611361565b509392505050565b61138e612474565b6001600160a01b038116158015906113b057506001600160a01b038116600114155b6113e45760405162461bcd60e51b8152602060048201526005602482015264475331303160d81b604482015260640161081b565b6001600160a01b0381811660009081526001602052604090205416156114345760405162461bcd60e51b815260206004820152600560248201526423a998981960d91b604482015260640161081b565b600160208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f80546001600160a01b03848116600081815260408082208054949095166001600160a01b031994851617909455948552835490911681179092555190917fecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f844091a250565b6114c7612474565b6003548111156114e95760405162461bcd60e51b815260040161081b90613786565b60018110156115225760405162461bcd60e51b815260206004820152600560248201526423a999181960d91b604482015260640161081b565b60048190556040518181527f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c939060200160405180910390a150565b60008060006115778e8e8e8e8e8e8e8e8e8e600554612191565b600580549192506000611589836135fe565b90915550508051602082012091506115a28282866118a8565b5060006115cd7f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c85490565b90506001600160a01b0381161561165357806001600160a01b03166375f0bb528f8f8f8f8f8f8f8f8f8f8f336040518d63ffffffff1660e01b81526004016116209c9b9a999897969594939291906137dd565b600060405180830381600087803b15801561163a57600080fd5b505af115801561164e573d6000803e3d6000fd5b505050505b61167f6116628a6109c46138a2565b603f61166f8c604061376f565b61167991906138b5565b9061282f565b61168b906101f46138a2565b5a10156116c25760405162461bcd60e51b8152602060048201526005602482015264047533031360dc1b604482015260640161081b565b60005a90506117338f8f8f8f8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508e8c600014611720578e6127e8565b6109c45a61172e91906138d7565b6127e8565b93506117405a8290612846565b9050838061174d57508915155b8061175757508715155b61178b5760405162461bcd60e51b8152602060048201526005602482015264475330313360d81b604482015260640161081b565b600088156117a3576117a0828b8b8b8b612861565b90505b84156117e857837f442e715f626346e8c54381002da614f62bee8d27386535b2521ec8540898556e826040516117db91815260200190565b60405180910390a2611823565b837f23428b18acfb3ea64b08dc0c1d296ea9c09702c09083ca5272e64d115b687d238260405161181a91815260200190565b60405180910390a25b50506001600160a01b0381161561189757604051631264e26d60e31b81526004810183905283151560248201526001600160a01b03821690639327136890604401600060405180830381600087803b15801561187e57600080fd5b505af1158015611892573d6000803e3d6000fd5b505050505b50509b9a5050505050505050505050565b600454806118e05760405162461bcd60e51b8152602060048201526005602482015264475330303160d81b604482015260640161081b565b6111f684848484610918565b606060006003546001600160401b0381111561190a5761190a612e0b565b604051908082528060200260200182016040528015611933578160200160208202803683370190505b506001600090815260026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e054919250906001600160a01b03165b6001600160a01b0381166001146119d45780838381518110611994576119946138ea565b6001600160a01b039283166020918202929092018101919091529181166000908152600290925260409091205416816119cc816135fe565b925050611970565b509092915050565b600080825160208401855af480600052503d6020523d600060403e60403d016000fd5b611a3d8a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508c9250612967915050565b6001600160a01b03841615611a5557611a5584612b43565b611a958787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612ba792505050565b8115611aac57611aaa82600060018685612861565b505b336001600160a01b03167f141df868a6331af528e38c83b7aa03edc19be66e37ae67f9285bf4f8e3c6a1a88b8b8b8b89604051611aed959493929190613900565b60405180910390a250505050505050505050565b606060006001600160a01b03841660011480611b215750611b2184610f8c565b611b555760405162461bcd60e51b8152602060048201526005602482015264475331303560d81b604482015260640161081b565b60008311611b8d5760405162461bcd60e51b815260206004820152600560248201526423a998981b60d91b604482015260640161081b565b826001600160401b03811115611ba557611ba5612e0b565b604051908082528060200260200182016040528015611bce578160200160208202803683370190505b506001600160a01b03808616600090815260016020526040812054929450911691505b6001600160a01b03821615801590611c1357506001600160a01b038216600114155b8015611c1e57508381105b15611c795781838281518110611c3657611c366138ea565b6001600160a01b03928316602091820292909201810191909152928116600090815260019093526040909220549091169080611c71816135fe565b915050611bf1565b6001600160a01b038216600114611cb15782611c966001836138d7565b81518110611ca657611ca66138ea565b602002602001015191505b808352509250929050565b336000908152600260205260409020546001600160a01b0316611d095760405162461bcd60e51b8152602060048201526005602482015264047533033360dc1b604482015260640161081b565b336000818152600860209081526040808320858452909152808220600190555183917ff2a0eb156472d1440255b0d7c1e19cc07115d1051fe605b0dce69acfec884d9c91a350565b6000611d668c8c8c8c8c8c8c8c8c8c8c612191565b8051906020012090509b9a5050505050505050505050565b611d86612474565b6001600160a01b03811615801590611da857506001600160a01b038116600114155b611ddc5760405162461bcd60e51b8152602060048201526005602482015264475331303160d81b604482015260640161081b565b6001600160a01b03828116600090815260016020526040902054811690821614611e305760405162461bcd60e51b8152602060048201526005602482015264475331303360d81b604482015260640161081b565b6001600160a01b03818116600081815260016020526040808220805487861684528284208054919096166001600160a01b0319918216179095558383528054909416909355915190917faab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace405427691a25050565b611ea8612474565b6001600160a01b03811615611f5a576040516301ffc9a760e01b815263736bd41d60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015611f02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f26919061396c565b611f5a5760405162461bcd60e51b8152602060048201526005602482015264047533330360dc1b604482015260640161081b565b7f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c88181556040516001600160a01b038316907f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa290600090a25050565b611fbe612474565b6001600160a01b03811615801590611fe057506001600160a01b038116600114155b8015611ff557506001600160a01b0381163014155b6120115760405162461bcd60e51b815260040161081b906135aa565b6001600160a01b0381811660009081526002602052604090205416156120495760405162461bcd60e51b815260040161081b906135c9565b6001600160a01b0382161580159061206b57506001600160a01b038216600114155b6120875760405162461bcd60e51b815260040161081b906135aa565b6001600160a01b038381166000908152600260205260409020548116908316146120db5760405162461bcd60e51b8152602060048201526005602482015264475332303560d81b604482015260640161081b565b6001600160a01b03828116600081815260026020526040808220805486861680855283852080549288166001600160a01b03199384161790559589168452828420805482169096179095558383528054909416909355915190917ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf91a26040516001600160a01b038216907f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2690600090a2505050565b606060007fbb8310d486368db6bd6f849402fdd73ad53d316b5a4b2644ad6efe0f941286d860001b8d8d8d8d6040516121cb92919061398e565b6040519081900381206121f1949392918e908e908e908e908e908e908e9060200161399e565b60408051601f1981840301815291905280516020909101209050601960f81b600160f81b61221d6122b2565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150509b9a5050505050505050505050565b612272612474565b61227b81612b43565b6040516001600160a01b038216907f5ac6c46c93c8d0e53714ba3b53db3e7c046da994313d7ed0d192028bc7c228b090600090a250565b60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b612311612474565b80600160035461232191906138d7565b101561233f5760405162461bcd60e51b815260040161081b90613786565b6001600160a01b0382161580159061236157506001600160a01b038216600114155b61237d5760405162461bcd60e51b815260040161081b906135aa565b6001600160a01b038381166000908152600260205260409020548116908316146123d15760405162461bcd60e51b8152602060048201526005602482015264475332303560d81b604482015260640161081b565b6001600160a01b03828116600081815260026020526040808220805488861684529183208054929095166001600160a01b0319928316179094559181528254909116909155600380549161242483613a0d565b90915550506040516001600160a01b038316907ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf90600090a2806004541461246f5761246f816114bf565b505050565b3330146124ab5760405162461bcd60e51b8152602060048201526005602482015264475330333160d81b604482015260640161081b565b565b6000826000036124bf57506000610fc1565b60006124cb838561376f565b9050826124d885836138b5565b14610f5b57600080fd5b6000806124ef83856138a2565b905083811015610f5b57600080fd5b336000612509612788565b90509091565b6060601960f81b600160f81b85858560405160200161252f929190613a24565b60408051808303601f190181529082905280516020918201206001600160f81b0319958616918301919091529290931660218401526022830152604282015260620160405160208183030381529060405290509392505050565b600080612650856001600160a01b031663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f19190613a4a565b60408051602081018890527f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca910160408051601f198184030181528282528051602091820120908301520160405160208183030381529060405261250f565b8051602082012084519192509060000361271557604051635ae6bd3760e01b8152600481018290526001600160a01b03871690635ae6bd3790602401602060405180830381865afa1580156126a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126cd9190613a4a565b6000036127105760405162461bcd60e51b815260206004820152601160248201527012185cda081b9bdd08185c1c1c9bdd9959607a1b604482015260640161081b565b612776565b60405163934f3a1160e01b81526001600160a01b0387169063934f3a119061274590849086908990600401613a63565b60006040518083038186803b15801561275d57600080fd5b505afa158015612771573d6000803e3d6000fd5b505050505b50630b135d3f60e11b95945050505050565b600060143610156127db5760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642063616c6c64617461206c656e677468000000000000000000604482015260640161081b565b5060131936013560601c90565b600060018360018111156127fe576127fe6137a5565b03612816576000808551602087018986f49050612826565b600080855160208701888a87f190505b95945050505050565b60008183101561283f5781610f5b565b5090919050565b60008282111561285557600080fd5b60006112cd83856138d7565b6000806001600160a01b03831615612879578261287b565b325b90506001600160a01b03841661290e576128ad3a861061289b573a61289d565b855b6128a789896124e2565b906124ad565b6040519092506001600160a01b0382169083156108fc029084906000818181858888f193505050506129095760405162461bcd60e51b8152602060048201526005602482015264475330313160d81b604482015260640161081b565b61295d565b61291c856128a789896124e2565b9150612929848284612cd9565b61295d5760405162461bcd60e51b815260206004820152600560248201526423a998189960d91b604482015260640161081b565b5095945050505050565b6004541561299f5760405162461bcd60e51b8152602060048201526005602482015264047533230360dc1b604482015260640161081b565b81518111156129c05760405162461bcd60e51b815260040161081b90613786565b60018110156129f95760405162461bcd60e51b815260206004820152600560248201526423a999181960d91b604482015260640161081b565b600160005b8351811015612b10576000848281518110612a1b57612a1b6138ea565b6020026020010151905060006001600160a01b0316816001600160a01b031614158015612a5257506001600160a01b038116600114155b8015612a6757506001600160a01b0381163014155b8015612a855750806001600160a01b0316836001600160a01b031614155b612aa15760405162461bcd60e51b815260040161081b906135aa565b6001600160a01b038181166000908152600260205260409020541615612ad95760405162461bcd60e51b815260040161081b906135c9565b6001600160a01b03928316600090815260026020526040902080546001600160a01b031916938216939093179092556001016129fe565b506001600160a01b0316600090815260026020526040902080546001600160a01b03191660011790559051600355600455565b306001600160a01b03821603612b835760405162461bcd60e51b8152602060048201526005602482015264047533430360dc1b604482015260640161081b565b7f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d555565b600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f546001600160a01b031615612c115760405162461bcd60e51b8152602060048201526005602482015264047533130360dc1b604482015260640161081b565b6001600081905260208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f80546001600160a01b03191690911790556001600160a01b0382161561091457813b612c945760405162461bcd60e51b815260206004820152600560248201526423a998181960d91b604482015260640161081b565b612ca58260008360016000196127e8565b6109145760405162461bcd60e51b8152602060048201526005602482015264047533030360dc1b604482015260640161081b565b604080516001600160a01b03841660248201526044808201849052825180830390910181526064909101909152602080820180516001600160e01b031663a9059cbb60e01b1781528251600093929184919082896127105a03f13d8015612d4b5760208114612d535760009350612d5e565b819350612d5e565b600051158215171593505b5050509392505050565b6001600160a01b0381168114612d7d57600080fd5b50565b6001600160e01b031981168114612d7d57600080fd5b60008060408385031215612da957600080fd5b8235612db481612d68565b91506020830135612dc481612d80565b809150509250929050565b8035612dda81612d68565b919050565b60008060408385031215612df257600080fd5b8235612dfd81612d68565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112612e3257600080fd5b81356001600160401b0380821115612e4c57612e4c612e0b565b604051601f8301601f19908116603f01168101908282118183101715612e7457612e74612e0b565b81604052838152866020858801011115612e8d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215612ec357600080fd5b8435935060208501356001600160401b0380821115612ee157600080fd5b612eed88838901612e21565b94506040870135915080821115612f0357600080fd5b50612f1087828801612e21565b949793965093946060013593505050565b60008083601f840112612f3357600080fd5b5081356001600160401b03811115612f4a57600080fd5b602083019150836020828501011115612f6257600080fd5b9250929050565b600080600060408486031215612f7e57600080fd5b8335925060208401356001600160401b03811115612f9b57600080fd5b612fa786828701612f21565b9497909650939450505050565b600060208284031215612fc657600080fd5b5035919050565b600060208284031215612fdf57600080fd5b8135610f5b81612d68565b60008060408385031215612ffd57600080fd5b823591506020830135612dc481612d68565b803560028110612dda57600080fd5b6000806000806080858703121561303457600080fd5b843561303f81612d68565b93506020850135925060408501356001600160401b0381111561306157600080fd5b61306d87828801612e21565b92505061307c6060860161300f565b905092959194509250565b60005b838110156130a257818101518382015260200161308a565b50506000910152565b600081518084526130c3816020860160208601613087565b601f01601f19169290920160200192915050565b82151581526040602082015260006112cd60408301846130ab565b6000806040838503121561310557600080fd5b50508035926020909101359150565b602081526000610f5b60208301846130ab565b60008060008060008060008060008060006101408c8e03121561314957600080fd5b6131528c612dcf565b9a5060208c013599506001600160401b038060408e0135111561317457600080fd5b6131848e60408f01358f01612f21565b909a50985061319560608e0161300f565b975060808d0135965060a08d0135955060c08d013594506131b860e08e01612dcf565b93506131c76101008e01612dcf565b9250806101208e013511156131db57600080fd5b506131ed8d6101208e01358e01612e21565b90509295989b509295989b9093969950565b60008060006060848603121561321457600080fd5b8335925060208401356001600160401b038082111561323257600080fd5b61323e87838801612e21565b9350604086013591508082111561325457600080fd5b5061326186828701612e21565b9150509250925092565b60008151808452602080850194506020840160005b838110156132a55781516001600160a01b031687529582019590820190600101613280565b509495945050505050565b602081526000610f5b602083018461326b565b600080604083850312156132d657600080fd5b82356132e181612d68565b915060208301356001600160401b038111156132fc57600080fd5b61330885828601612e21565b9150509250929050565b6000806000806000806000806000806101008b8d03121561333257600080fd5b8a356001600160401b038082111561334957600080fd5b818d0191508d601f83011261335d57600080fd5b81358181111561336c57600080fd5b8e60208260051b850101111561338157600080fd5b60208381019d50909b508d0135995061339c60408e01612dcf565b985060608d01359150808211156133b257600080fd5b506133bf8d828e01612f21565b90975095506133d2905060808c01612dcf565b93506133e060a08c01612dcf565b925060c08b013591506133f560e08c01612dcf565b90509295989b9194979a5092959850565b604081526000613419604083018561326b565b905060018060a01b03831660208301529392505050565b60008060008060008060008060008060006101408c8e03121561345257600080fd5b8b3561345d81612d68565b9a5060208c0135995060408c01356001600160401b0381111561347f57600080fd5b61348b8e828f01612f21565b909a50985061349e905060608d0161300f565b965060808c0135955060a08c0135945060c08c0135935060e08c01356134c381612d68565b92506101008c01356134d481612d68565b809250506101208c013590509295989b509295989b9093969950565b6000806040838503121561350357600080fd5b823561350e81612d68565b91506020830135612dc481612d68565b60008060006060848603121561353357600080fd5b833561353e81612d68565b9250602084013561354e81612d68565b9150604084013561355e81612d68565b809150509250925092565b60008060006060848603121561357e57600080fd5b833561358981612d68565b9250602084013561359981612d68565b929592945050506040919091013590565b602080825260059082015264475332303360d81b604082015260600190565b60208082526005908201526411d4cc8c0d60da1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600060018201613610576136106135e8565b5060010190565b60408152600061362a60408301856130ab565b828103602084015261282681856130ab565b60006020828403121561364e57600080fd5b8151610f5b81612d80565b60ff8281168282160390811115610fc157610fc16135e8565b6000808585111561368257600080fd5b8386111561368f57600080fd5b5050820193919092039150565b600080600080608085870312156136b257600080fd5b843593506020850135925060408501356001600160401b03808211156136d757600080fd5b6136e388838901612e21565b935060608701359150808211156136f957600080fd5b5061370687828801612e21565b91505092959194509250565b600060018060a01b03808a16835280891660208401525086604083015285606083015284608083015260e060a083015261374f60e08301856130ab565b82810360c084015261376181856130ab565b9a9950505050505050505050565b8082028115828204841417610fc157610fc16135e8565b602080825260059082015264475332303160d81b604082015260600190565b634e487b7160e01b600052602160045260246000fd5b600281106137d957634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038d168152602081018c90526101606040820181905281018a905260006101808b8d828501376000838d01820152601f8c01601f19168301613829606085018d6137bb565b8a60808501528960a08501528860c085015261385060e08501896001600160a01b03169052565b6001600160a01b0387166101008501528184820301610120850152613877828201876130ab565b925050506138916101408301846001600160a01b03169052565b9d9c50505050505050505050505050565b80820180821115610fc157610fc16135e8565b6000826138d257634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610fc157610fc16135e8565b634e487b7160e01b600052603260045260246000fd5b6080808252810185905260008660a08301825b8881101561394357823561392681612d68565b6001600160a01b0316825260209283019290910190600101613913565b50602084019690965250506001600160a01b039283166040820152911660609091015292915050565b60006020828403121561397e57600080fd5b81518015158114610f5b57600080fd5b8183823760009101908152919050565b8b81526001600160a01b038b81166020830152604082018b9052606082018a90526101608201906139d2608084018b6137bb565b60a083019890985260c082019690965260e0810194909452918516610100840152909316610120820152610140019190915295945050505050565b600081613a1c57613a1c6135e8565b506000190190565b82815260008251613a3c816020850160208701613087565b919091016020019392505050565b600060208284031215613a5c57600080fd5b5051919050565b838152606060208201526000613a7c60608301856130ab565b8281036040840152613a8e81856130ab565b969550505050505056fea2646970667358221220666a32cc8b6faadc42cd832bb774addcd69cdf17ce56bc8f231a0c66c9b133ac64736f6c63430008160033",
    "sourceMap": "292:909:78:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;538:35:62;;563:9;160:25:79;;551:10:62;;538:35;;148:2:79;133:18;538:35:62;;;;;;;292:909:78;;;;;;;;;;;-1:-1:-1;479:66:57;3341:11;;;3365:63;;3402:12;3365:63;3460:14;3457:1;3454;3441:34;3697:8;3693:2;3689:17;3673:14;3666:41;3855:1;3852;3847:2;3831:14;3827:23;3824:1;3821;3812:7;3805:5;3800:57;3785:72;;3891:16;3888:1;3885;3870:38;3931:7;3921:78;;3968:16;3965:1;3958:27;3921:78;;4022:16;4019:1;4012:27;1409:62:70;;;;;;;;;;-1:-1:-1;1409:62:70;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;160:25:79;;;148:2;133:18;1409:62:70;;;;;;;;2399:625:60;;;;;;;;;;-1:-1:-1;2399:625:60;;;;;:::i;:::-;;:::i;:::-;;13892:3837:55;;;;;;;;;;-1:-1:-1;13892:3837:55;;;;;:::i;:::-;;:::i;4788:2460:72:-;;;;;;;;;;-1:-1:-1;4788:2460:72;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;4070:33:79;;;4052:52;;4040:2;4025:18;4788:2460:72;3908:202:79;712:139:78;;;;;;;;;;-1:-1:-1;712:139:78;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4573:32:79;;;4555:51;;4543:2;4528:18;712:139:78;4409:203:79;5780:151:59;;;;;;;;;;-1:-1:-1;5780:151:59;;;;;:::i;:::-;;:::i;:::-;;;5040:14:79;;5033:22;5015:41;;5003:2;4988:18;5780:151:59;4875:187:79;6140:138:60;;;;;;;;;;-1:-1:-1;6140:138:60;;;;;:::i;:::-;;:::i;3615:817:72:-;;;;;;;;;;-1:-1:-1;3615:817:72;;;;;:::i;:::-;;:::i;18522:211:55:-;;;;;;;;;;-1:-1:-1;18689:9:55;18522:211;;3622:594:59;;;;;;;;;;-1:-1:-1;3622:594:59;;;;;:::i;:::-;;:::i;2896:91:72:-;;;;;;;;;;-1:-1:-1;2896:91:72;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2896:91:72;;;4707:959:59;;;;;;;;;;-1:-1:-1;4707:959:59;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;785:464:67:-;;;;;;;;;;-1:-1:-1;785:464:67;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3360:49:55:-;;;;;;;;;;-1:-1:-1;3360:49:55;;;;;:::i;:::-;;;;;;;;;;;;;;2001:426:59;;;;;;;;;;-1:-1:-1;2001:426:59;;;;;:::i;:::-;;:::i;5398:360:60:-;;;;;;;;;;-1:-1:-1;5398:360:60;;;;;:::i;:::-;;:::i;7433:3556:55:-;;;;;;:::i;:::-;;:::i;3521:69::-;;;;;;;;;;-1:-1:-1;3521:69:55;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;12858:353;;;;;;;;;;-1:-1:-1;12858:353:55;;;;;:::i;:::-;;:::i;6383:437:60:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3188:20:55:-;;;;;;;;;;;;;;;;1882:486:67;;;;;;;;;;-1:-1:-1;1882:486:67;;;;;:::i;:::-;;:::i;4740:1151:55:-;;;;;;;;;;-1:-1:-1;4740:1151:55;;;;;:::i;:::-;;:::i;6437:1535:59:-;;;;;;;;;;-1:-1:-1;6437:1535:59;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;18133:228:55:-;;;;;;;;;;-1:-1:-1;18133:228:55;;;;;:::i;:::-;;:::i;21385:478::-;;;;;;;;;;-1:-1:-1;21385:478:55;;;;;:::i;:::-;;:::i;2677:423:59:-;;;;;;;;;;-1:-1:-1;2677:423:59;;;;;:::i;:::-;;:::i;1962:386:58:-;;;;;;;;;;-1:-1:-1;1962:386:58;;;;;:::i;:::-;;:::i;4416:796:60:-;;;;;;;;;;-1:-1:-1;4416:796:60;;;;;:::i;:::-;;:::i;5915:87::-;;;;;;;;;;-1:-1:-1;5986:9:60;;5915:87;;19858:822:55;;;;;;;;;;-1:-1:-1;19858:822:55;;;;;:::i;:::-;;:::i;2437:161:57:-;;;;;;;;;;-1:-1:-1;2437:161:57;;;;;:::i;:::-;;:::i;18901:149:55:-;;;;;;;;;;;;;:::i;3380:697:60:-;;;;;;;;;;-1:-1:-1;3380:697:60;;;;;:::i;:::-;;:::i;2205:40:55:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2205:40:55;;;;;2399:625:60;505:17:64;:15;:17::i;:::-;-1:-1:-1;;;;;2575:19:60;::::1;::::0;;::::1;::::0;:47:::1;;-1:-1:-1::0;;;;;;2598:24:60;::::1;687:3;2598:24;;2575:47;:73;;;;-1:-1:-1::0;;;;;;2626:22:60;::::1;2643:4;2626:22;;2575:73;2567:91;;;;-1:-1:-1::0;;;2567:91:60::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;2716:13:60;;::::1;2741:1;2716:13:::0;;;:6:::1;:13;::::0;;;;;::::1;:27:::0;2708:45:::1;;;;-1:-1:-1::0;;;2708:45:60::1;;;;;;;:::i;:::-;2779:6;:23;::::0;;;;-1:-1:-1;;;;;2763:13:60;;::::1;2779:23;2763:13:::0;;;2779:23;2763:13;;:39;;2779:23;;;::::1;-1:-1:-1::0;;;;;;2763:39:60;;::::1;;::::0;;;-1:-1:-1;2812:23:60;;:31;;;;::::1;;::::0;;;2853:10:::1;:12:::0;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;2880:17:60::1;::::0;-1:-1:-1;;;;;2880:17:60;::::1;::::0;::::1;::::0;;;::::1;2978:10;2965:9;;:23;2961:56;;2990:27;3006:10;2990:15;:27::i;:::-;2399:625:::0;;:::o;13892:3837:55:-;14126:26;:18;14149:2;14126:22;:26::i;:::-;14105:10;:17;:47;;14097:65;;;;-1:-1:-1;;;14097:65:55;;17462:2:79;14097:65:55;;;17444:21:79;17501:1;17481:18;;;17474:29;-1:-1:-1;;;17519:18:79;;;17512:35;17564:18;;14097:65:55;17260:328:79;14097:65:55;14224:17;14264:20;14294:7;14311:9;14330;14349;14368:3355;14384:18;14380:1;:22;14368:3355;;;1176:4:65;1172:14;;;1210:40;;1244:4;1210:40;;1204:47;1309:4;1275:40;;1269:47;1627:40;;;;1621:47;1670:4;1617:58;;-1:-1:-1;1204:47:65;;-1:-1:-1;1269:47:65;-1:-1:-1;14487:1:55;14482:6;;;14478:3068;;14516:15;;;;;;:27;;14508:45;;;;-1:-1:-1;;;14508:45:55;;17795:2:79;14508:45:55;;;17777:21:79;17834:1;17814:18;;;17807:29;-1:-1:-1;;;17852:18:79;;;17845:35;17897:18;;14508:45:55;17593:328:79;14508:45:55;14770:1;;-1:-1:-1;14770:1:55;;15175:26;:18;15198:2;15175:22;:26::i;:::-;15161:40;;;15153:58;;;;-1:-1:-1;;;15153:58:55;;18128:2:79;15153:58:55;;;18110:21:79;18167:1;18147:18;;;18140:29;-1:-1:-1;;;18185:18:79;;;18178:35;18230:18;;15153:58:55;17926:328:79;15153:58:55;15373:17;;15351:18;15359:1;15366:2;15351:14;:18::i;:::-;:39;;15343:57;;;;-1:-1:-1;;;15343:57:55;;18461:2:79;15343:57:55;;;18443:21:79;18500:1;18480:18;;;18473:29;-1:-1:-1;;;18518:18:79;;;18511:35;18563:18;;15343:57:55;18259:328:79;15343:57:55;15739:4;15719:18;;;15715:29;;15709:36;15836:17;;15709:36;;15788:44;;15709:36;;15788:18;;15719;;15788:14;:18::i;:::-;:22;;:44::i;:::-;:65;;15780:83;;;;-1:-1:-1;;;15780:83:55;;18794:2:79;15780:83:55;;;18776:21:79;18833:1;18813:18;;;18806:29;-1:-1:-1;;;18851:18:79;;;18844:35;18896:18;;15780:83:55;18592:328:79;15780:83:55;16292:75;;-1:-1:-1;;;16292:75:55;;;16224:18;;;16244:4;16220:29;;-1:-1:-1;;;;;16292:50:55;;;223:10:74;;16292:75:55;;16343:4;;16220:29;;16292:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;16292:98:55;;16284:116;;;;-1:-1:-1;;;16284:116:55;;19763:2:79;16284:116:55;;;19745:21:79;19802:1;19782:18;;;19775:29;-1:-1:-1;;;19820:18:79;;;19813:35;19865:18;;16284:116:55;19561:328:79;16284:116:55;14490:1925;;14478:3068;;;16425:1;:6;;16430:1;16425:6;16421:1125;;16642:1;;-1:-1:-1;16642:1:55;;16817:10;-1:-1:-1;;;;;16817:26:55;;;;:73;;-1:-1:-1;;;;;;16847:28:55;;;;;;:14;:28;;;;;;;;:38;;;;;;;;;:43;;16817:73;16809:91;;;;-1:-1:-1;;;16809:91:55;;20096:2:79;16809:91:55;;;20078:21:79;20135:1;20115:18;;;20108:29;-1:-1:-1;;;20153:18:79;;;20146:35;20198:18;;16809:91:55;19894:328:79;16809:91:55;16421:1125;;;16929:2;16925:1;:6;;;16921:625;;;17222:62;;20469:66:79;17222:62:55;;;20457:79:79;20552:12;;;20545:28;;;17202:97:55;;20589:12:79;;17222:62:55;;;;;;;;;;;;17212:73;;;;;;17291:1;17287;:5;;;;:::i;:::-;17202:97;;;;;;;;;;;;20995:25:79;;;;21068:4;21056:17;;;21036:18;;;21029:45;21090:18;;;21083:34;;;21133:18;;;21126:34;;;20967:19;;17202:97:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17187:112;;16921:625;;;17503:28;;;;;;;;;;;;20995:25:79;;;21068:4;21056:17;;21036:18;;;21029:45;;;;21090:18;;;21083:34;;;21133:18;;;21126:34;;;17503:28:55;;20967:19:79;;17503:28:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17488:43;;16921:625;17582:9;-1:-1:-1;;;;;17567:24:55;:12;-1:-1:-1;;;;;17567:24:55;;:62;;;;-1:-1:-1;;;;;;17595:20:55;;;17627:1;17595:20;;;:6;:20;;;;;;;:34;;17567:62;:97;;;;-1:-1:-1;;;;;;17633:31:55;;687:3:60;17633:31:55;;17567:97;17559:115;;;;-1:-1:-1;;;17559:115:55;;21373:2:79;17559:115:55;;;21355:21:79;21412:1;21392:18;;;21385:29;-1:-1:-1;;;21430:18:79;;;21423:35;21475:18;;17559:115:55;21171:328:79;17559:115:55;17700:12;;-1:-1:-1;17700:12:55;;14404:3;;14368:3355;;;14020:3709;;;;;;13892:3837;;;;:::o;4788:2460:72:-;4887:12;4912:9;4923:14;4941:13;:11;:13::i;:::-;4911:43;;-1:-1:-1;4911:43:72;-1:-1:-1;5093:1:72;5073:21;;5069:1998;;-1:-1:-1;;;;;;5262:30:72;;5244:50;-1:-1:-1;;;5411:41:72;;:67;;;;-1:-1:-1;5476:2:72;5456:22;;;5411:67;5407:1650;;;6118:23;;6174:15;6186:2;6184:1;6174:9;;:15;:::i;:::-;6163:47;;;;;;;:::i;:::-;-1:-1:-1;;;;;6263:21:72;;;6229:31;6263:21;;;:15;:21;;;;;;;;:38;;;;;;;;;6117:93;;-1:-1:-1;6117:93:72;;-1:-1:-1;6263:38:72;6404:31;;6400:643;;6464:23;;6524:13;:9;6534:1;6524:9;;:13;:::i;:::-;6513:59;;;;;;;:::i;:::-;6459:113;;;;;;6750:5;6682:63;6707:15;6724:8;6734:10;6682:24;:63::i;:::-;6672:74;;;;;;:83;6668:357;;6904:8;-1:-1:-1;;;;;6904:29:72;;6934:4;6940:6;6948:5;6955:15;6972:8;6982:10;6994:7;6904:98;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6897:105;;;;;;;;;;;;6668:357;6437:606;;6400:643;5480:1577;;;5407:1650;5096:1971;5069:1998;7194:47;7218:4;7224:5;7231:9;;7194:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7194:23:72;;-1:-1:-1;;;7194:47:72:i;:::-;7187:54;;;;4788:2460;;;;;;:::o;712:139:78:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;712:139:78;;-1:-1:-1;712:139:78;:::o;5780:151:59:-;5842:4;1005:3;-1:-1:-1;;;;;5865:26:59;;;;;;:59;;-1:-1:-1;;;;;;5895:15:59;;;5922:1;5895:15;;;:7;:15;;;;;;;:29;;5865:59;5858:66;5780:151;-1:-1:-1;;5780:151:59:o;6140:138:60:-;6193:4;-1:-1:-1;;;;;6216:24:60;;687:3;6216:24;;;;:55;;-1:-1:-1;;;;;;;6244:13:60;;;6269:1;6244:13;;;:6;:13;;;;;;;:27;;;6140:138::o;3615:817:72:-;1614:10:69;1779:12:70;:10;:12::i;:::-;-1:-1:-1;;;;;1779:26:70;;1771:69;;;;-1:-1:-1;;;1771:69:70;;23796:2:79;1771:69:70;;;23778:21:79;23835:2;23815:18;;;23808:30;23874:32;23854:18;;;23847:60;23924:18;;1771:69:70;23594:354:79;1771:69:70;3738:9:72::1;3763:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;3824:21:72;;::::1;3787:34;3824:21:::0;;;:15:::1;:21;::::0;;;;;;;:38;;;;;;;;;3738:39;;-1:-1:-1;3824:38:72;;::::1;::::0;3876:34;::::1;::::0;:72;::::1;;;-1:-1:-1::0;;;;;;3914:34:72;::::1;::::0;::::1;3876:72;3872:554;;;-1:-1:-1::0;;;;;3971:21:72;::::1;;::::0;;;:15:::1;:21;::::0;;;;;;;:38;;;;;;;;;3964:45;;-1:-1:-1;;;;;;3964:45:72::1;::::0;;4028:44;;160:25:79;;;4028:44:72::1;::::0;133:18:79;4028:44:72::1;;;;;;;;3872:554;;;-1:-1:-1::0;;;;;4103:21:72;;::::1;;::::0;;;:15:::1;:21;::::0;;;;;;;:38;;;;;;;;:52;;-1:-1:-1;;;;;;4103:52:72::1;::::0;;::::1;;::::0;;4173:34;::::1;4169:247;;4232:55;::::0;;24159:25:79;;;-1:-1:-1;;;;;24220:32:79;;;24215:2;24200:18;;24193:60;4232:55:72;::::1;::::0;::::1;::::0;24132:18:79;4232:55:72::1;23953:306:79::0;4169:247:72::1;4353:4;-1:-1:-1::0;;;;;4331:70:72::1;;4359:15;4376:11;4389;4331:70;;;;;;;24530:25:79::0;;;-1:-1:-1;;;;;24629:15:79;;;24624:2;24609:18;;24602:43;24681:15;24676:2;24661:18;;24654:43;24518:2;24503:18;;24264:439;4331:70:72::1;;;;;;;;4169:247;3728:704;;3615:817:::0;;:::o;3622:594:59:-;3791:12;3872:10;1005:3;3872:30;;;;:67;;-1:-1:-1;3914:10:59;3937:1;3906:19;;;:7;:19;;;;;;-1:-1:-1;;;;;3906:19:59;:33;;3872:67;3864:85;;;;-1:-1:-1;;;3864:85:59;;24910:2:79;3864:85:59;;;24892:21:79;24949:1;24929:18;;;24922:29;-1:-1:-1;;;24967:18:79;;;24960:35;25012:18;;3864:85:59;24708:328:79;3864:85:59;4031:54;4039:2;4043:5;4050:4;4056:9;-1:-1:-1;;4031:7:59;:54::i;:::-;4021:64;;4099:7;4095:114;;;4113:38;;4140:10;;4113:38;;;;;4095:114;;;4171:38;;4198:10;;4171:38;;;;;4095:114;3622:594;;;;;;:::o;4707:959::-;4878:12;4892:23;4937:53;4963:2;4967:5;4974:4;4980:9;4937:25;:53::i;:::-;4927:63;;5137:4;5131:11;5379:4;5361:16;5357:27;5352:3;5348:37;5342:4;5335:51;5441:16;5436:3;5429:29;5535:16;5532:1;5525:4;5520:3;5516:14;5501:51;5647:3;5633:17;;;4707:959;;;;;;;:::o;785:464:67:-;860:12;884:19;916:11;:6;925:2;916:11;:::i;:::-;-1:-1:-1;;;;;906:22:67;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;906:22:67;;884:44;;943:13;938:282;970:6;962:5;:14;938:282;;;1106:18;;;1100:25;1183:4;1172:16;;;1149:40;;;1142:54;978:7;;938:282;;;-1:-1:-1;1236:6:67;785:464;-1:-1:-1;;;785:464:67:o;2001:426:59:-;505:17:64;:15;:17::i;:::-;-1:-1:-1;;;;;2129:20:59;::::1;::::0;;::::1;::::0;:50:::1;;-1:-1:-1::0;;;;;;2153:26:59;::::1;1005:3;2153:26;;2129:50;2121:68;;;::::0;-1:-1:-1;;;2121:68:59;;25416:2:79;2121:68:59::1;::::0;::::1;25398:21:79::0;25455:1;25435:18;;;25428:29;-1:-1:-1;;;25473:18:79;;;25466:35;25518:18;;2121:68:59::1;25214:328:79::0;2121:68:59::1;-1:-1:-1::0;;;;;2248:15:59;;::::1;2275:1;2248:15:::0;;;:7:::1;:15;::::0;;;;;::::1;:29:::0;2240:47:::1;;;::::0;-1:-1:-1;;;2240:47:59;;25749:2:79;2240:47:59::1;::::0;::::1;25731:21:79::0;25788:1;25768:18;;;25761:29;-1:-1:-1;;;25806:18:79;;;25799:35;25851:18;;2240:47:59::1;25547:328:79::0;2240:47:59::1;2315:7;:25;::::0;;;;;;-1:-1:-1;;;;;2297:15:59;;::::1;2315:25;2297:15:::0;;;2315:25;2297:15;;;:43;;2315:25;;;::::1;-1:-1:-1::0;;;;;;2297:43:59;;::::1;;::::0;;;2350:25;;;:34;;;;::::1;::::0;::::1;::::0;;;2399:21;2297:15;;2399:21:::1;::::0;::::1;2001:426:::0;:::o;5398:360:60:-;505:17:64;:15;:17::i;:::-;5562:10:60::1;;5548;:24;;5540:42;;;;-1:-1:-1::0;;;5540:42:60::1;;;;;;;:::i;:::-;5666:1;5652:10;:15;;5644:33;;;::::0;-1:-1:-1;;;5644:33:60;;26415:2:79;5644:33:60::1;::::0;::::1;26397:21:79::0;26454:1;26434:18;;;26427:29;-1:-1:-1;;;26472:18:79;;;26465:35;26517:18;;5644:33:60::1;26213:328:79::0;5644:33:60::1;5687:9;:22:::0;;;5724:27:::1;::::0;160:25:79;;;5724:27:60::1;::::0;148:2:79;133:18;5724:27:60::1;;;;;;;5398:360:::0;:::o;7433:3556:55:-;7779:12;7803:14;7930:23;7956:388;8031:2;8051:5;8074:4;;8096:9;8123;8182:7;8207:8;8233;8259:14;8325:5;;7956:21;:388::i;:::-;8413:5;:7;;7930:414;;-1:-1:-1;8413:5:55;:7;;;:::i;:::-;;;;-1:-1:-1;;8443:21:55;;;;;;;-1:-1:-1;8478:47:55;8443:21;8453:10;8514;8478:15;:47::i;:::-;7916:620;8545:13;8561:10;1306:66:58;2911:11;;2712:226;8561:10:55;8545:26;-1:-1:-1;;;;;;8599:19:55;;;8595:547;;8644:5;-1:-1:-1;;;;;8638:29:55;;8729:2;8753:5;8780:4;;8806:9;8837;8904:7;8933:8;8963;8993:14;9067:10;9099;8638:489;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8595:547;9456:45;9484:16;:9;9496:4;9484:16;:::i;:::-;9476:2;9458:14;:9;9470:2;9458:14;:::i;:::-;9457:21;;;;:::i;:::-;9456:27;;:45::i;:::-;:51;;9504:3;9456:51;:::i;:::-;9443:9;:64;;9435:82;;;;-1:-1:-1;;;9435:82:55;;28828:2:79;9435:82:55;;;28810:21:79;28867:1;28847:18;;;28840:29;-1:-1:-1;;;28885:18:79;;;28878:35;28930:18;;9435:82:55;28626:328:79;9435:82:55;9630:15;9648:9;9630:27;;9936:83;9944:2;9948:5;9955:4;;9936:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9961:9;9972:8;9984:1;9972:13;:46;;10009:9;9936:7;:83::i;9972:46::-;10001:4;9989:9;:16;;;;:::i;:::-;9936:7;:83::i;:::-;9926:93;;10043:22;10055:9;10043:7;;:11;:22::i;:::-;10033:32;;10349:7;:25;;;-1:-1:-1;10360:14:55;;;10349:25;:42;;;-1:-1:-1;10378:13:55;;;10349:42;10341:60;;;;-1:-1:-1;;;10341:60:55;;29294:2:79;10341:60:55;;;29276:21:79;29333:1;29313:18;;;29306:29;-1:-1:-1;;;29351:18:79;;;29344:35;29396:18;;10341:60:55;29092:328:79;10341:60:55;10550:15;10587:12;;10583:128;;10629:67;10643:7;10652;10661:8;10671;10681:14;10629:13;:67::i;:::-;10619:77;;10583:128;10728:7;10724:108;;;10759:6;10742:33;10767:7;10742:33;;;;160:25:79;;148:2;133:18;;14:177;10742:33:55;;;;;;;;10724:108;;;10816:6;10799:33;10824:7;10799:33;;;;160:25:79;;148:2;133:18;;14:177;10799:33:55;;;;;;;;10724:108;-1:-1:-1;;;;;;;10870:19:55;;;10866:107;;10909:49;;-1:-1:-1;;;10909:49:55;;;;;29593:25:79;;;29661:14;;29654:22;29634:18;;;29627:50;-1:-1:-1;;;;;10909:32:55;;;;;29566:18:79;;10909:49:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10866:107;7793:3196;;7433:3556;;;;;;;;;;;;;:::o;12858:353::-;13046:9;;13114:14;13106:32;;;;-1:-1:-1;;;13106:32:55;;29890:2:79;13106:32:55;;;29872:21:79;29929:1;29909:18;;;29902:29;-1:-1:-1;;;29947:18:79;;;29940:35;29992:18;;13106:32:55;29688:328:79;13106:32:55;13148:56;13165:8;13175:4;13181:10;13193;13148:16;:56::i;6383:437:60:-;6425:16;6453:22;6492:10;;-1:-1:-1;;;;;6478:25:60;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6478:25:60;-1:-1:-1;687:3:60;6547:13;6597:23;;;:6;:23;;;;6453:50;;-1:-1:-1;6547:13:60;-1:-1:-1;;;;;6597:23:60;6630:162;-1:-1:-1;;;;;6637:31:60;;687:3;6637:31;6630:162;;6699:12;6684:5;6690;6684:12;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6684:27:60;;;:12;;;;;;;;;;:27;;;;6740:20;;;;;;;:6;:20;;;;;;;;;6774:7;;;;:::i;:::-;;;;6630:162;;;-1:-1:-1;6808:5:60;;6383:437;-1:-1:-1;;6383:437:60:o;1882:486:67:-;2167:1;2164;2146:15;2140:22;2133:4;2116:15;2112:26;2096:14;2089:5;2076:93;2196:7;2190:4;2183:21;;2230:16;2224:4;2217:30;2284:16;2281:1;2275:4;2260:41;2346:4;2328:16;2324:27;2321:1;2314:38;4740:1151:55;5139:32;5151:7;;5139:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5160:10:55;;-1:-1:-1;5139:11:55;;-1:-1:-1;;5139:32:55:i;:::-;-1:-1:-1;;;;;5185:29:55;;;5181:78;;5216:43;5243:15;5216:26;:43::i;:::-;5394:22;5407:2;5411:4;;5394:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5394:12:55;;-1:-1:-1;;;5394:22:55:i;:::-;5431:11;;5427:380;;5737:59;5751:7;5760:1;5763;5766:12;5780:15;5737:13;:59::i;:::-;;5427:380;5831:10;-1:-1:-1;;;;;5821:63:55;;5843:7;;5852:10;5864:2;5868:15;5821:63;;;;;;;;;;:::i;:::-;;;;;;;;4740:1151;;;;;;;;;;:::o;6437:1535:59:-;6522:22;6546:12;-1:-1:-1;;;;;6578:25:59;;1005:3;6578:25;;:51;;;6607:22;6623:5;6607:15;:22::i;:::-;6570:69;;;;-1:-1:-1;;;6570:69:59;;31351:2:79;6570:69:59;;;31333:21:79;31390:1;31370:18;;;31363:29;-1:-1:-1;;;31408:18:79;;;31401:35;31453:18;;6570:69:59;31149:328:79;6570:69:59;6668:1;6657:8;:12;6649:30;;;;-1:-1:-1;;;6649:30:59;;31684:2:79;6649:30:59;;;31666:21:79;31723:1;31703:18;;;31696:29;-1:-1:-1;;;31741:18:79;;;31734:35;31786:18;;6649:30:59;31482:328:79;6649:30:59;6752:8;-1:-1:-1;;;;;6738:23:59;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6738:23:59;-1:-1:-1;;;;;;6845:14:59;;;6805:19;6845:14;;;:7;:14;;;;;;6730:31;;-1:-1:-1;6845:14:59;;;-1:-1:-1;6869:192:59;-1:-1:-1;;;;;6876:18:59;;;;;;:46;;-1:-1:-1;;;;;;6898:24:59;;1005:3;6898:24;;6876:46;:72;;;;;6940:8;6926:11;:22;6876:72;6869:192;;;6985:4;6964:5;6970:11;6964:18;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6964:25:59;;;:18;;;;;;;;;;:25;;;;7010:13;;;;;;;:7;:13;;;;;;;;;;;;7037;;;;:::i;:::-;;;;6869:192;;;-1:-1:-1;;;;;7716:24:59;;1005:3;7716:24;7712:84;;7763:5;7769:15;7783:1;7769:11;:15;:::i;:::-;7763:22;;;;;;;;:::i;:::-;;;;;;;7756:29;;7712:84;7944:11;7937:5;7930:26;7916:50;6437:1535;;;;;:::o;18133:228:55:-;18211:10;18234:1;18204:18;;;:6;:18;;;;;;-1:-1:-1;;;;;18204:18:55;18196:50;;;;-1:-1:-1;;;18196:50:55;;32017:2:79;18196:50:55;;;31999:21:79;32056:1;32036:18;;;32029:29;-1:-1:-1;;;32074:18:79;;;32067:35;32119:18;;18196:50:55;31815:328:79;18196:50:55;18271:10;18256:26;;;;:14;:26;;;;;;;;:41;;;;;;;;;18300:1;18256:45;;18316:38;18283:13;;18316:38;;;18133:228;:::o;21385:478::-;21706:7;21742:113;21764:2;21768:5;21775:4;;21781:9;21792;21803:7;21812:8;21822;21832:14;21848:6;21742:21;:113::i;:::-;21732:124;;;;;;21725:131;;21385:478;;;;;;;;;;;;;:::o;2677:423:59:-;505:17:64;:15;:17::i;:::-;-1:-1:-1;;;;;2854:20:59;::::1;::::0;;::::1;::::0;:50:::1;;-1:-1:-1::0;;;;;;2878:26:59;::::1;1005:3;2878:26;;2854:50;2846:68;;;::::0;-1:-1:-1;;;2846:68:59;;25416:2:79;2846:68:59::1;::::0;::::1;25398:21:79::0;25455:1;25435:18;;;25428:29;-1:-1:-1;;;25473:18:79;;;25466:35;25518:18;;2846:68:59::1;25214:328:79::0;2846:68:59::1;-1:-1:-1::0;;;;;2932:19:59;;::::1;;::::0;;;:7:::1;:19;::::0;;;;;;::::1;:29:::0;;::::1;;2924:47;;;::::0;-1:-1:-1;;;2924:47:59;;32350:2:79;2924:47:59::1;::::0;::::1;32332:21:79::0;32389:1;32369:18;;;32362:29;-1:-1:-1;;;32407:18:79;;;32400:35;32452:18;;2924:47:59::1;32148:328:79::0;2924:47:59::1;-1:-1:-1::0;;;;;3003:15:59;;::::1;;::::0;;;:7:::1;:15;::::0;;;;;;;2981:19;;::::1;::::0;;;;;:37;;3003:15;;;::::1;-1:-1:-1::0;;;;;;2981:37:59;;::::1;;::::0;;;3028:15;;;:28;;;;::::1;::::0;;;3071:22;;3003:15;;3071:22:::1;::::0;::::1;2677:423:::0;;:::o;1962:386:58:-;505:17:64;:15;:17::i;:::-;-1:-1:-1;;;;;2029:19:58;::::1;::::0;2025:123:::1;;2072:55;::::0;-1:-1:-1;;;2072:55:58;;-1:-1:-1;;;2072:55:58::1;::::0;::::1;4052:52:79::0;-1:-1:-1;;;;;2072:30:58;::::1;::::0;::::1;::::0;4025:18:79;;2072:55:58::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2064:73;;;::::0;-1:-1:-1;;;2064:73:58;;32965:2:79;2064:73:58::1;::::0;::::1;32947:21:79::0;33004:1;32984:18;;;32977:29;-1:-1:-1;;;33022:18:79;;;33015:35;33067:18;;2064:73:58::1;32763:328:79::0;2064:73:58::1;1306:66;2279:19:::0;;;2322::::1;::::0;-1:-1:-1;;;;;2322:19:58;::::1;::::0;::::1;::::0;2157:12:::1;::::0;2322:19:::1;2015:333;1962:386:::0;:::o;4416:796:60:-;505:17:64;:15;:17::i;:::-;-1:-1:-1;;;;;4600:22:60;::::1;::::0;;::::1;::::0;:53:::1;;-1:-1:-1::0;;;;;;4626:27:60;::::1;687:3;4626:27;;4600:53;:82;;;;-1:-1:-1::0;;;;;;4657:25:60;::::1;4677:4;4657:25;;4600:82;4592:100;;;;-1:-1:-1::0;;;4592:100:60::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4750:16:60;;::::1;4778:1;4750:16:::0;;;:6:::1;:16;::::0;;;;;::::1;:30:::0;4742:48:::1;;;;-1:-1:-1::0;;;4742:48:60::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4891:22:60;::::1;::::0;;::::1;::::0;:53:::1;;-1:-1:-1::0;;;;;;4917:27:60;::::1;687:3;4917:27;;4891:53;4883:71;;;;-1:-1:-1::0;;;4883:71:60::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4972:17:60;;::::1;;::::0;;;:6:::1;:17;::::0;;;;;;::::1;:29:::0;;::::1;;4964:47;;;::::0;-1:-1:-1;;;4964:47:60;;33298:2:79;4964:47:60::1;::::0;::::1;33280:21:79::0;33337:1;33317:18;;;33310:29;-1:-1:-1;;;33355:18:79;;;33348:35;33400:18;;4964:47:60::1;33096:328:79::0;4964:47:60::1;-1:-1:-1::0;;;;;5040:16:60;;::::1;;::::0;;;:6:::1;:16;::::0;;;;;;;5021;;::::1;::::0;;;;;;:35;;5040:16;;::::1;-1:-1:-1::0;;;;;;5021:35:60;;::::1;;::::0;;5066:17;;::::1;::::0;;;;;:28;;;::::1;::::0;;::::1;::::0;;;5104:16;;;:29;;;;::::1;::::0;;;5148:22;;5040:16;;5148:22:::1;::::0;::::1;5185:20;::::0;-1:-1:-1;;;;;5185:20:60;::::1;::::0;::::1;::::0;;;::::1;4416:796:::0;;;:::o;19858:822:55:-;20182:12;20206:18;2725:66;20278:16;;20312:2;20332:5;20365:4;;20355:15;;;;;;;:::i;:::-;;;;;;;;;20250:321;;;;;20388:9;;20415;;20442:7;;20467:8;;20493;;20519:14;;20551:6;;20250:321;;;:::i;:::-;;;;-1:-1:-1;;20250:321:55;;;;;;;;;20227:354;;20250:321;20227:354;;;;;-1:-1:-1;;;;;;;20643:17:55;:15;:17::i;:::-;20598:75;;-1:-1:-1;;;;;;34957:15:79;;;20598:75:55;;;34945:28:79;35002:15;;;;34989:11;;;34982:36;35034:11;;;35027:27;35070:12;;;35063:28;;;35107:12;;20598:75:55;;;;;;;;;;;;20591:82;;;19858:822;;;;;;;;;;;;;:::o;2437:161:57:-;505:17:64;:15;:17::i;:::-;2510:35:57::1;2537:7;2510:26;:35::i;:::-;2560:31;::::0;-1:-1:-1;;;;;2560:31:57;::::1;::::0;::::1;::::0;;;::::1;2437:161:::0;:::o;18901:149:55:-;18949:7;2402:66;18689:9;18985:57;;;;;;35354:25:79;;;;35395:18;;35388:34;19037:4:55;35438:18:79;;;35431:60;35327:18;;18985:57:55;;;;;;;;;;;;18975:68;;;;;;18968:75;;18901:149;:::o;3380:697:60:-;505:17:64;:15;:17::i;:::-;3586:10:60::1;3581:1;3568:10;;:14;;;;:::i;:::-;:28;;3560:46;;;;-1:-1:-1::0;;;3560:46:60::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3704:19:60;::::1;::::0;;::::1;::::0;:47:::1;;-1:-1:-1::0;;;;;;3727:24:60;::::1;687:3;3727:24;;3704:47;3696:65;;;;-1:-1:-1::0;;;3696:65:60::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3779:17:60;;::::1;;::::0;;;:6:::1;:17;::::0;;;;;;::::1;:26:::0;;::::1;;3771:44;;;::::0;-1:-1:-1;;;3771:44:60;;33298:2:79;3771:44:60::1;::::0;::::1;33280:21:79::0;33337:1;33317:18;;;33310:29;-1:-1:-1;;;33355:18:79;;;33348:35;33400:18;;3771:44:60::1;33096:328:79::0;3771:44:60::1;-1:-1:-1::0;;;;;3845:13:60;;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;;3825:17;;::::1;::::0;;;;;:33;;3845:13;;;::::1;-1:-1:-1::0;;;;;;3825:33:60;;::::1;;::::0;;;3868:13;;;:26;;;;::::1;::::0;;;3904:10:::1;:12:::0;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;3931:19:60::1;::::0;-1:-1:-1;;;;;3931:19:60;::::1;::::0;::::1;::::0;;;::::1;4031:10;4018:9;;:23;4014:56;;4043:27;4059:10;4043:15;:27::i;:::-;3380:697:::0;;;:::o;248:102:64:-;306:10;328:4;306:27;298:45;;;;-1:-1:-1;;;298:45:64;;35845:2:79;298:45:64;;;35827:21:79;35884:1;35864:18;;;35857:29;-1:-1:-1;;;35902:18:79;;;35895:35;35947:18;;298:45:64;35643:328:79;298:45:64;248:102::o;382:421:68:-;440:7;680:1;685;680:6;676:45;;-1:-1:-1;709:1:68;702:8;;676:45;731:9;743:5;747:1;743;:5;:::i;:::-;731:17;-1:-1:-1;775:1:68;766:5;770:1;731:17;766:5;:::i;:::-;:10;758:19;;;;;1335:145;1393:7;;1424:5;1428:1;1424;:5;:::i;:::-;1412:17;;1452:1;1447;:6;;1439:15;;;;;2922:153:70;1614:10:69;2968:9:70;3056:12;:10;:12::i;:::-;3047:21;;2922:153;;:::o;8255:262:72:-;8370:12;8425:4;8418:12;;8439:4;8432:12;;8446:15;8490:8;8500:7;8473:35;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;8473:35:72;;;;;;;8463:46;;8473:35;8463:46;;;;-1:-1:-1;;;;;;34957:15:79;;;8401:109:72;;;34945:28:79;;;;35002:15;;;;34989:11;;;34982:36;35034:11;;;35027:27;35070:12;;;35063:28;35107:12;;8401:109:72;;;;;;;;;;;;8394:116;;8255:262;;;;;:::o;7523:707::-;7629:12;7653:24;7680:155;7718:4;-1:-1:-1;;;;;7718:20:72;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7806:17;;;;;;160:25:79;;;2667:66:72;;133:18:79;7806:17:72;;;-1:-1:-1;;7806:17:72;;;;;;;;;7796:28;;7806:17;7796:28;;;;7785:40;;;160:25:79;133:18;7785:40:72;;;;;;;;;;;;7680:24;:155::i;:::-;7867:22;;;;;;7903:16;;7653:182;;-1:-1:-1;7867:22:72;7845:19;7903:21;7899:274;;7979:32;;-1:-1:-1;;;7979:32:72;;;;;160:25:79;;;-1:-1:-1;;;;;7979:19:72;;;;;133:18:79;;7979:32:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8015:1;7979:37;7971:67;;;;-1:-1:-1;;;7971:67:72;;36920:2:79;7971:67:72;;;36902:21:79;36959:2;36939:18;;;36932:30;-1:-1:-1;;;36978:18:79;;;36971:47;37035:18;;7971:67:72;36718:341:79;7971:67:72;7899:274;;;8105:57;;-1:-1:-1;;;8105:57:72;;-1:-1:-1;;;;;8105:20:72;;;;;:57;;8126:11;;8139;;8152:9;;8105:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7899:274;-1:-1:-1;;;;8190:33:72;7523:707;-1:-1:-1;;;;;7523:707:72:o;1053:379:69:-;1098:14;1151:2;1132:8;:21;;1124:57;;;;-1:-1:-1;;;1124:57:69;;37719:2:79;1124:57:69;;;37701:21:79;37758:2;37738:18;;;37731:30;37797:25;37777:18;;;37770:53;37840:18;;1124:57:69;37517:347:79;1124:57:69;-1:-1:-1;;;1395:14:69;1391:23;1378:37;1374:2;1370:46;;1053:379::o;783:639:56:-;951:12;992:27;979:9;:40;;;;;;;;:::i;:::-;;975:441;;1190:1;1187;1180:4;1174:11;1167:4;1161;1157:15;1153:2;1146:5;1133:59;1122:70;;975:441;;;1390:1;1387;1380:4;1374:11;1367:4;1361;1357:15;1350:5;1346:2;1339:5;1334:58;1323:69;;975:441;783:639;;;;;;;:::o;1646:105:68:-;1704:7;1735:1;1730;:6;;:14;;1743:1;1730:14;;;-1:-1:-1;1739:1:68;;1723:21;-1:-1:-1;1646:105:68:o;1025:145::-;1083:7;1115:1;1110;:6;;1102:15;;;;;;1127:9;1139:5;1143:1;1139;:5;:::i;11514:821:55:-;11702:15;;-1:-1:-1;;;;;11809:28:55;;;:66;;11861:14;11809:66;;;11848:9;11809:66;11782:93;-1:-1:-1;;;;;;11889:22:55;;11885:444;;12042:73;12078:11;12067:8;:22;:47;;12103:11;12067:47;;;12092:8;12067:47;12042:20;:7;12054;12042:11;:20::i;:::-;:24;;:73::i;:::-;12137:22;;12032:83;;-1:-1:-1;;;;;;12137:13:55;;;:22;;;;;12032:83;;12137:22;;;;12032:83;12137:13;:22;;;;;;;12129:40;;;;-1:-1:-1;;;12129:40:55;;38071:2:79;12129:40:55;;;38053:21:79;38110:1;38090:18;;;38083:29;-1:-1:-1;;;38128:18:79;;;38121:35;38173:18;;12129:40:55;37869:328:79;12129:40:55;11885:444;;;12210:34;12235:8;12210:20;:7;12222;12210:11;:20::i;:34::-;12200:44;;12266:42;12280:8;12290;12300:7;12266:13;:42::i;:::-;12258:60;;;;-1:-1:-1;;;12258:60:55;;38404:2:79;12258:60:55;;;38386:21:79;38443:1;38423:18;;;38416:29;-1:-1:-1;;;38461:18:79;;;38454:35;38506:18;;12258:60:55;38202:328:79;12258:60:55;11719:616;11514:821;;;;;;;:::o;1011:1136:60:-;1229:9;;:14;1221:32;;;;-1:-1:-1;;;1221:32:60;;38737:2:79;1221:32:60;;;38719:21:79;38776:1;38756:18;;;38749:29;-1:-1:-1;;;38794:18:79;;;38787:35;38839:18;;1221:32:60;38535:328:79;1221:32:60;1360:7;:14;1346:10;:28;;1338:46;;;;-1:-1:-1;;;1338:46:60;;;;;;;:::i;:::-;1468:1;1454:10;:15;;1446:33;;;;-1:-1:-1;;;1446:33:60;;26415:2:79;1446:33:60;;;26397:21:79;26454:1;26434:18;;;26427:29;-1:-1:-1;;;26472:18:79;;;26465:35;26517:18;;1446:33:60;26213:328:79;1446:33:60;687:3;1526:20;1574:450;1598:7;:14;1594:1;:18;1574:450;;;1678:13;1694:7;1702:1;1694:10;;;;;;;;:::i;:::-;;;;;;;1678:26;;1743:1;-1:-1:-1;;;;;1726:19:60;:5;-1:-1:-1;;;;;1726:19:60;;;:47;;;;-1:-1:-1;;;;;;1749:24:60;;687:3;1749:24;;1726:47;:73;;;;-1:-1:-1;;;;;;1777:22:60;;1794:4;1777:22;;1726:73;:98;;;;;1819:5;-1:-1:-1;;;;;1803:21:60;:12;-1:-1:-1;;;;;1803:21:60;;;1726:98;1718:116;;;;-1:-1:-1;;;1718:116:60;;;;;;;:::i;:::-;-1:-1:-1;;;;;1900:13:60;;;1925:1;1900:13;;;:6;:13;;;;;;;:27;1892:45;;;;-1:-1:-1;;;1892:45:60;;;;;;;:::i;:::-;-1:-1:-1;;;;;1951:20:60;;;;;;;:6;:20;;;;;:28;;-1:-1:-1;;;;;;1951:28:60;;;;;;;;;;;-1:-1:-1;1614:3:60;1574:450;;;-1:-1:-1;;;;;;2033:20:60;;;;;:6;:20;;;;;:38;;-1:-1:-1;;;;;;2033:38:60;687:3;2033:38;;;2094:14;;2081:10;:27;2118:9;:22;1011:1136::o;689:1423:57:-;1916:4;-1:-1:-1;;;;;1897:24:57;;;1889:42;;;;-1:-1:-1;;;1889:42:57;;39070:2:79;1889:42:57;;;39052:21:79;39109:1;39089:18;;;39082:29;-1:-1:-1;;;39127:18:79;;;39120:35;39172:18;;1889:42:57;38868:328:79;1889:42:57;479:66;2075:21;689:1423::o;1367:450:59:-;1447:7;1484:1;1447:25;;;;;;;-1:-1:-1;;;;;1447:25:59;:39;1439:57;;;;-1:-1:-1;;;1439:57:59;;39403:2:79;1439:57:59;;;39385:21:79;39442:1;39422:18;;;39415:29;-1:-1:-1;;;39460:18:79;;;39453:35;39505:18;;1439:57:59;39201:328:79;1439:57:59;1005:3;1506:25;;;;;;;;;:44;;-1:-1:-1;;;;;;1506:44:59;;;;;;-1:-1:-1;;;;;1564:16:59;;;1560:251;;8462:20;;1596:32;;;;-1:-1:-1;;;1596:32:59;;39736:2:79;1596:32:59;;;39718:21:79;39775:1;39755:18;;;39748:29;-1:-1:-1;;;39793:18:79;;;39786:35;39838:18;;1596:32:59;39534:328:79;1596:32:59;1722:68;1730:2;1734:1;1737:4;1743:27;-1:-1:-1;;1722:7:59;:68::i;:::-;1714:86;;;;-1:-1:-1;;;1714:86:59;;40069:2:79;1714:86:59;;;40051:21:79;40108:1;40088:18;;;40081:29;-1:-1:-1;;;40126:18:79;;;40119:35;40171:18;;1714:86:59;39867:328:79;763:904:63;962:52;;;-1:-1:-1;;;;;40392:32:79;;962:52:63;;;40374:51:79;40441:18;;;;40434:34;;;962:52:63;;;;;;;;;;40347:18:79;;;;962:52:63;;;;;;;;;-1:-1:-1;;;;;962:52:63;-1:-1:-1;;;962:52:63;;;1336:11;;-1:-1:-1;;962:52:63;;-1:-1:-1;;1336:11:63;-1:-1:-1;1309:5:63;1301;1294;1290:17;1285:72;1377:16;1406:61;;;;1485:4;1480:102;;;;1636:1;1621:16;;1370:281;;1406:61;1446:7;1431:22;;1406:61;;1480:102;1563:1;1557:8;1550:16;1540:7;1533:15;1530:37;1523:45;1508:60;;1370:281;;;1089:572;763:904;;;;;:::o;196:137:79:-;-1:-1:-1;;;;;277:31:79;;267:42;;257:70;;323:1;320;313:12;257:70;196:137;:::o;338:131::-;-1:-1:-1;;;;;;412:32:79;;402:43;;392:71;;459:1;456;449:12;474:406;555:6;563;616:2;604:9;595:7;591:23;587:32;584:52;;;632:1;629;622:12;584:52;671:9;658:23;690:37;721:5;690:37;:::i;:::-;746:5;-1:-1:-1;803:2:79;788:18;;775:32;816;775;816;:::i;:::-;867:7;857:17;;;474:406;;;;;:::o;1067:140::-;1135:20;;1164:37;1135:20;1164:37;:::i;:::-;1067:140;;;:::o;1212:321::-;1280:6;1288;1341:2;1329:9;1320:7;1316:23;1312:32;1309:52;;;1357:1;1354;1347:12;1309:52;1396:9;1383:23;1415:37;1446:5;1415:37;:::i;:::-;1471:5;1523:2;1508:18;;;;1495:32;;-1:-1:-1;;;1212:321:79:o;1538:127::-;1599:10;1594:3;1590:20;1587:1;1580:31;1630:4;1627:1;1620:15;1654:4;1651:1;1644:15;1670:718;1712:5;1765:3;1758:4;1750:6;1746:17;1742:27;1732:55;;1783:1;1780;1773:12;1732:55;1819:6;1806:20;-1:-1:-1;;;;;1882:2:79;1878;1875:10;1872:36;;;1888:18;;:::i;:::-;1963:2;1957:9;1931:2;2017:13;;-1:-1:-1;;2013:22:79;;;2037:2;2009:31;2005:40;1993:53;;;2061:18;;;2081:22;;;2058:46;2055:72;;;2107:18;;:::i;:::-;2147:10;2143:2;2136:22;2182:2;2174:6;2167:18;2228:3;2221:4;2216:2;2208:6;2204:15;2200:26;2197:35;2194:55;;;2245:1;2242;2235:12;2194:55;2309:2;2302:4;2294:6;2290:17;2283:4;2275:6;2271:17;2258:54;2356:1;2349:4;2344:2;2336:6;2332:15;2328:26;2321:37;2376:6;2367:15;;;;;;1670:718;;;;:::o;2393:676::-;2497:6;2505;2513;2521;2574:3;2562:9;2553:7;2549:23;2545:33;2542:53;;;2591:1;2588;2581:12;2542:53;2627:9;2614:23;2604:33;;2688:2;2677:9;2673:18;2660:32;-1:-1:-1;;;;;2752:2:79;2744:6;2741:14;2738:34;;;2768:1;2765;2758:12;2738:34;2791:49;2832:7;2823:6;2812:9;2808:22;2791:49;:::i;:::-;2781:59;;2893:2;2882:9;2878:18;2865:32;2849:48;;2922:2;2912:8;2909:16;2906:36;;;2938:1;2935;2928:12;2906:36;;2961:51;3004:7;2993:8;2982:9;2978:24;2961:51;:::i;:::-;2393:676;;;;-1:-1:-1;2951:61:79;;3059:2;3044:18;3031:32;;-1:-1:-1;;;2393:676:79:o;3074:347::-;3125:8;3135:6;3189:3;3182:4;3174:6;3170:17;3166:27;3156:55;;3207:1;3204;3197:12;3156:55;-1:-1:-1;3230:20:79;;-1:-1:-1;;;;;3262:30:79;;3259:50;;;3305:1;3302;3295:12;3259:50;3342:4;3334:6;3330:17;3318:29;;3394:3;3387:4;3378:6;3370;3366:19;3362:30;3359:39;3356:59;;;3411:1;3408;3401:12;3356:59;3074:347;;;;;:::o;3426:477::-;3505:6;3513;3521;3574:2;3562:9;3553:7;3549:23;3545:32;3542:52;;;3590:1;3587;3580:12;3542:52;3626:9;3613:23;3603:33;;3687:2;3676:9;3672:18;3659:32;-1:-1:-1;;;;;3706:6:79;3703:30;3700:50;;;3746:1;3743;3736:12;3700:50;3785:58;3835:7;3826:6;3815:9;3811:22;3785:58;:::i;:::-;3426:477;;3862:8;;-1:-1:-1;3759:84:79;;-1:-1:-1;;;;3426:477:79:o;4115:180::-;4174:6;4227:2;4215:9;4206:7;4202:23;4198:32;4195:52;;;4243:1;4240;4233:12;4195:52;-1:-1:-1;4266:23:79;;4115:180;-1:-1:-1;4115:180:79:o;4617:253::-;4676:6;4729:2;4717:9;4708:7;4704:23;4700:32;4697:52;;;4745:1;4742;4735:12;4697:52;4784:9;4771:23;4803:37;4834:5;4803:37;:::i;5067:353::-;5167:6;5175;5228:2;5216:9;5207:7;5203:23;5199:32;5196:52;;;5244:1;5241;5234:12;5196:52;5280:9;5267:23;5257:33;;5340:2;5329:9;5325:18;5312:32;5353:37;5384:5;5353:37;:::i;5425:150::-;5500:20;;5549:1;5539:12;;5529:40;;5565:1;5562;5555:12;5580:626;5690:6;5698;5706;5714;5767:3;5755:9;5746:7;5742:23;5738:33;5735:53;;;5784:1;5781;5774:12;5735:53;5823:9;5810:23;5842:37;5873:5;5842:37;:::i;:::-;5898:5;-1:-1:-1;5950:2:79;5935:18;;5922:32;;-1:-1:-1;6005:2:79;5990:18;;5977:32;-1:-1:-1;;;;;6021:30:79;;6018:50;;;6064:1;6061;6054:12;6018:50;6087:49;6128:7;6119:6;6108:9;6104:22;6087:49;:::i;:::-;6077:59;;;6155:45;6196:2;6185:9;6181:18;6155:45;:::i;:::-;6145:55;;5580:626;;;;;;;:::o;6791:250::-;6876:1;6886:113;6900:6;6897:1;6894:13;6886:113;;;6976:11;;;6970:18;6957:11;;;6950:39;6922:2;6915:10;6886:113;;;-1:-1:-1;;7033:1:79;7015:16;;7008:27;6791:250::o;7046:270::-;7087:3;7125:5;7119:12;7152:6;7147:3;7140:19;7168:76;7237:6;7230:4;7225:3;7221:14;7214:4;7207:5;7203:16;7168:76;:::i;:::-;7298:2;7277:15;-1:-1:-1;;7273:29:79;7264:39;;;;7305:4;7260:50;;7046:270;-1:-1:-1;;7046:270:79:o;7321:298::-;7504:6;7497:14;7490:22;7479:9;7472:41;7549:2;7544;7533:9;7529:18;7522:30;7453:4;7569:44;7609:2;7598:9;7594:18;7586:6;7569:44;:::i;7624:248::-;7692:6;7700;7753:2;7741:9;7732:7;7728:23;7724:32;7721:52;;;7769:1;7766;7759:12;7721:52;-1:-1:-1;;7792:23:79;;;7862:2;7847:18;;;7834:32;;-1:-1:-1;7624:248:79:o;7877:217::-;8024:2;8013:9;8006:21;7987:4;8044:44;8084:2;8073:9;8069:18;8061:6;8044:44;:::i;8284:1224::-;8467:6;8475;8483;8491;8499;8507;8515;8523;8531;8539;8547:7;8601:3;8589:9;8580:7;8576:23;8572:33;8569:53;;;8618:1;8615;8608:12;8569:53;8641:29;8660:9;8641:29;:::i;:::-;8631:39;;8717:2;8706:9;8702:18;8689:32;8679:42;;-1:-1:-1;;;;;8807:2:79;8801;8790:9;8786:18;8773:32;8770:40;8767:60;;;8823:1;8820;8813:12;8767:60;8862:84;8938:7;8931:2;8920:9;8916:18;8903:32;8892:9;8888:48;8862:84;:::i;:::-;8965:8;;-1:-1:-1;8992:8:79;-1:-1:-1;9019:45:79;9060:2;9045:18;;9019:45;:::i;:::-;9009:55;;9111:3;9100:9;9096:19;9083:33;9073:43;;9163:3;9152:9;9148:19;9135:33;9125:43;;9215:3;9204:9;9200:19;9187:33;9177:43;;9239:39;9273:3;9262:9;9258:19;9239:39;:::i;:::-;9229:49;;9297:39;9331:3;9320:9;9316:19;9297:39;:::i;:::-;9287:49;;9386:2;9379:3;9368:9;9364:19;9351:33;9348:41;9345:61;;;9402:1;9399;9392:12;9345:61;;9426:76;9494:7;9486:3;9475:9;9471:19;9458:33;9447:9;9443:49;9426:76;:::i;:::-;9415:87;;8284:1224;;;;;;;;;;;;;;:::o;9839:607::-;9934:6;9942;9950;10003:2;9991:9;9982:7;9978:23;9974:32;9971:52;;;10019:1;10016;10009:12;9971:52;10055:9;10042:23;10032:33;;10116:2;10105:9;10101:18;10088:32;-1:-1:-1;;;;;10180:2:79;10172:6;10169:14;10166:34;;;10196:1;10193;10186:12;10166:34;10219:49;10260:7;10251:6;10240:9;10236:22;10219:49;:::i;:::-;10209:59;;10321:2;10310:9;10306:18;10293:32;10277:48;;10350:2;10340:8;10337:16;10334:36;;;10366:1;10363;10356:12;10334:36;;10389:51;10432:7;10421:8;10410:9;10406:24;10389:51;:::i;:::-;10379:61;;;9839:607;;;;;:::o;10451:465::-;10504:3;10542:5;10536:12;10569:6;10564:3;10557:19;10595:4;10624;10619:3;10615:14;10608:21;;10663:4;10656:5;10652:16;10686:1;10696:195;10710:6;10707:1;10704:13;10696:195;;;10775:13;;-1:-1:-1;;;;;10771:39:79;10759:52;;10831:12;;;;10866:15;;;;10807:1;10725:9;10696:195;;;-1:-1:-1;10907:3:79;;10451:465;-1:-1:-1;;;;;10451:465:79:o;10921:261::-;11100:2;11089:9;11082:21;11063:4;11120:56;11172:2;11161:9;11157:18;11149:6;11120:56;:::i;11187:461::-;11264:6;11272;11325:2;11313:9;11304:7;11300:23;11296:32;11293:52;;;11341:1;11338;11331:12;11293:52;11380:9;11367:23;11399:37;11430:5;11399:37;:::i;:::-;11455:5;-1:-1:-1;11511:2:79;11496:18;;11483:32;-1:-1:-1;;;;;11527:30:79;;11524:50;;;11570:1;11567;11560:12;11524:50;11593:49;11634:7;11625:6;11614:9;11610:22;11593:49;:::i;:::-;11583:59;;;11187:461;;;;;:::o;11653:1353::-;11821:6;11829;11837;11845;11853;11861;11869;11877;11885;11893;11946:3;11934:9;11925:7;11921:23;11917:33;11914:53;;;11963:1;11960;11953:12;11914:53;12003:9;11990:23;-1:-1:-1;;;;;12073:2:79;12065:6;12062:14;12059:34;;;12089:1;12086;12079:12;12059:34;12127:6;12116:9;12112:22;12102:32;;12172:7;12165:4;12161:2;12157:13;12153:27;12143:55;;12194:1;12191;12184:12;12143:55;12234:2;12221:16;12260:2;12252:6;12249:14;12246:34;;;12276:1;12273;12266:12;12246:34;12331:7;12324:4;12314:6;12311:1;12307:14;12303:2;12299:23;12295:34;12292:47;12289:67;;;12352:1;12349;12342:12;12289:67;12383:4;12375:13;;;;-1:-1:-1;12407:6:79;;-1:-1:-1;12445:20:79;;12432:34;;-1:-1:-1;12485:38:79;12519:2;12504:18;;12485:38;:::i;:::-;12475:48;;12576:2;12565:9;12561:18;12548:32;12532:48;;12605:2;12595:8;12592:16;12589:36;;;12621:1;12618;12611:12;12589:36;;12660:60;12712:7;12701:8;12690:9;12686:24;12660:60;:::i;:::-;12739:8;;-1:-1:-1;12634:86:79;-1:-1:-1;12793:39:79;;-1:-1:-1;12827:3:79;12812:19;;12793:39;:::i;:::-;12783:49;;12851:39;12885:3;12874:9;12870:19;12851:39;:::i;:::-;12841:49;;12937:3;12926:9;12922:19;12909:33;12899:43;;12961:39;12995:3;12984:9;12980:19;12961:39;:::i;:::-;12951:49;;11653:1353;;;;;;;;;;;;;:::o;13011:358::-;13218:2;13207:9;13200:21;13181:4;13238:56;13290:2;13279:9;13275:18;13267:6;13238:56;:::i;:::-;13230:64;;13359:1;13355;13350:3;13346:11;13342:19;13334:6;13330:32;13325:2;13314:9;13310:18;13303:60;13011:358;;;;;:::o;13374:1289::-;13540:6;13548;13556;13564;13572;13580;13588;13596;13604;13612;13620:7;13674:3;13662:9;13653:7;13649:23;13645:33;13642:53;;;13691:1;13688;13681:12;13642:53;13730:9;13717:23;13749:37;13780:5;13749:37;:::i;:::-;13805:5;-1:-1:-1;13857:2:79;13842:18;;13829:32;;-1:-1:-1;13912:2:79;13897:18;;13884:32;-1:-1:-1;;;;;13928:30:79;;13925:50;;;13971:1;13968;13961:12;13925:50;14010:58;14060:7;14051:6;14040:9;14036:22;14010:58;:::i;:::-;14087:8;;-1:-1:-1;13984:84:79;-1:-1:-1;14141:45:79;;-1:-1:-1;14182:2:79;14167:18;;14141:45;:::i;:::-;14131:55;;14233:3;14222:9;14218:19;14205:33;14195:43;;14285:3;14274:9;14270:19;14257:33;14247:43;;14337:3;14326:9;14322:19;14309:33;14299:43;;14394:3;14383:9;14379:19;14366:33;14408:39;14439:7;14408:39;:::i;:::-;14466:7;-1:-1:-1;14525:3:79;14510:19;;14497:33;14539:39;14497:33;14539:39;:::i;:::-;14597:7;14587:17;;;14652:3;14641:9;14637:19;14624:33;14613:44;;13374:1289;;;;;;;;;;;;;;:::o;14668:400::-;14736:6;14744;14797:2;14785:9;14776:7;14772:23;14768:32;14765:52;;;14813:1;14810;14803:12;14765:52;14852:9;14839:23;14871:37;14902:5;14871:37;:::i;:::-;14927:5;-1:-1:-1;14984:2:79;14969:18;;14956:32;14997:39;14956:32;14997:39;:::i;15073:547::-;15150:6;15158;15166;15219:2;15207:9;15198:7;15194:23;15190:32;15187:52;;;15235:1;15232;15225:12;15187:52;15274:9;15261:23;15293:37;15324:5;15293:37;:::i;:::-;15349:5;-1:-1:-1;15406:2:79;15391:18;;15378:32;15419:39;15378:32;15419:39;:::i;:::-;15477:7;-1:-1:-1;15536:2:79;15521:18;;15508:32;15549:39;15508:32;15549:39;:::i;:::-;15607:7;15597:17;;;15073:547;;;;;:::o;15625:468::-;15702:6;15710;15718;15771:2;15759:9;15750:7;15746:23;15742:32;15739:52;;;15787:1;15784;15777:12;15739:52;15826:9;15813:23;15845:37;15876:5;15845:37;:::i;:::-;15901:5;-1:-1:-1;15958:2:79;15943:18;;15930:32;15971:39;15930:32;15971:39;:::i;:::-;15625:468;;16029:7;;-1:-1:-1;;;16083:2:79;16068:18;;;;16055:32;;15625:468::o;16322:328::-;16524:2;16506:21;;;16563:1;16543:18;;;16536:29;-1:-1:-1;;;16596:2:79;16581:18;;16574:35;16641:2;16626:18;;16322:328::o;16655:::-;16857:2;16839:21;;;16896:1;16876:18;;;16869:29;-1:-1:-1;;;16929:2:79;16914:18;;16907:35;16974:2;16959:18;;16655:328::o;16988:127::-;17049:10;17044:3;17040:20;17037:1;17030:31;17080:4;17077:1;17070:15;17104:4;17101:1;17094:15;17120:135;17159:3;17180:17;;;17177:43;;17200:18;;:::i;:::-;-1:-1:-1;17247:1:79;17236:13;;17120:135::o;18925:377::-;19118:2;19107:9;19100:21;19081:4;19144:44;19184:2;19173:9;19169:18;19161:6;19144:44;:::i;:::-;19236:9;19228:6;19224:22;19219:2;19208:9;19204:18;19197:50;19264:32;19289:6;19281;19264:32;:::i;19307:249::-;19376:6;19429:2;19417:9;19408:7;19404:23;19400:32;19397:52;;;19445:1;19442;19435:12;19397:52;19477:9;19471:16;19496:30;19520:5;19496:30;:::i;20612:151::-;20702:4;20695:12;;;20681;;;20677:31;;20720:14;;20717:40;;;20737:18;;:::i;21504:331::-;21609:9;21620;21662:8;21650:10;21647:24;21644:44;;;21684:1;21681;21674:12;21644:44;21713:6;21703:8;21700:20;21697:40;;;21733:1;21730;21723:12;21697:40;-1:-1:-1;;21759:23:79;;;21804:25;;;;;-1:-1:-1;21504:331:79:o;22093:676::-;22197:6;22205;22213;22221;22274:3;22262:9;22253:7;22249:23;22245:33;22242:53;;;22291:1;22288;22281:12;22242:53;22327:9;22314:23;22304:33;;22384:2;22373:9;22369:18;22356:32;22346:42;;22439:2;22428:9;22424:18;22411:32;-1:-1:-1;;;;;22503:2:79;22495:6;22492:14;22489:34;;;22519:1;22516;22509:12;22489:34;22542:49;22583:7;22574:6;22563:9;22559:22;22542:49;:::i;:::-;22532:59;;22644:2;22633:9;22629:18;22616:32;22600:48;;22673:2;22663:8;22660:16;22657:36;;;22689:1;22686;22679:12;22657:36;;22712:51;22755:7;22744:8;22733:9;22729:24;22712:51;:::i;:::-;22702:61;;;22093:676;;;;;;;:::o;22774:815::-;23092:4;23138:1;23134;23129:3;23125:11;23121:19;23179:2;23171:6;23167:15;23156:9;23149:34;23231:2;23223:6;23219:15;23214:2;23203:9;23199:18;23192:43;;23271:6;23266:2;23255:9;23251:18;23244:34;23314:6;23309:2;23298:9;23294:18;23287:34;23358:6;23352:3;23341:9;23337:19;23330:35;23402:3;23396;23385:9;23381:19;23374:32;23429:45;23469:3;23458:9;23454:19;23446:6;23429:45;:::i;:::-;23523:9;23515:6;23511:22;23505:3;23494:9;23490:19;23483:51;23551:32;23576:6;23568;23551:32;:::i;:::-;23543:40;22774:815;-1:-1:-1;;;;;;;;;;22774:815:79:o;25041:168::-;25114:9;;;25145;;25162:15;;;25156:22;;25142:37;25132:71;;25183:18;;:::i;25880:328::-;26082:2;26064:21;;;26121:1;26101:18;;;26094:29;-1:-1:-1;;;26154:2:79;26139:18;;26132:35;26199:2;26184:18;;25880:328::o;26546:127::-;26607:10;26602:3;26598:20;26595:1;26588:31;26638:4;26635:1;26628:15;26662:4;26659:1;26652:15;26678:237;26759:1;26752:5;26749:12;26739:143;;26804:10;26799:3;26795:20;26792:1;26785:31;26839:4;26836:1;26829:15;26867:4;26864:1;26857:15;26739:143;26891:18;;26678:237::o;26920:1349::-;-1:-1:-1;;;;;27428:32:79;;27410:51;;27492:2;27477:18;;27470:34;;;27398:3;27535:2;27520:18;;27513:30;;;27559:18;;27552:34;;;27369:4;27605:3;27579:6;27650;27630:18;;;27617:48;27714:1;27685:22;;;27681:31;;27674:42;27775:2;27754:15;;-1:-1:-1;;27750:29:79;27735:45;;27789:53;27838:2;27823:18;;27815:6;27789:53;:::i;:::-;27879:6;27873:3;27862:9;27858:19;27851:35;27923:6;27917:3;27906:9;27902:19;27895:35;27967:6;27961:3;27950:9;27946:19;27939:35;27983:47;28025:3;28014:9;28010:19;28002:6;-1:-1:-1;;;;;4366:31:79;4354:44;;4300:104;27983:47;-1:-1:-1;;;;;4366:31:79;;28081:3;28066:19;;4354:44;28147:2;28135:9;28131:2;28127:18;28123:27;28117:3;28106:9;28102:19;28095:56;28168:38;28202:2;28198;28194:11;28185:7;28168:38;:::i;:::-;28160:46;;;;28215:48;28258:3;28247:9;28243:19;28234:7;-1:-1:-1;;;;;4366:31:79;4354:44;;4300:104;28215:48;26920:1349;;;;;;;;;;;;;;;:::o;28274:125::-;28339:9;;;28360:10;;;28357:36;;;28373:18;;:::i;28404:217::-;28444:1;28470;28460:132;;28514:10;28509:3;28505:20;28502:1;28495:31;28549:4;28546:1;28539:15;28577:4;28574:1;28567:15;28460:132;-1:-1:-1;28606:9:79;;28404:217::o;28959:128::-;29026:9;;;29047:11;;;29044:37;;;29061:18;;:::i;30021:127::-;30082:10;30077:3;30073:20;30070:1;30063:31;30113:4;30110:1;30103:15;30137:4;30134:1;30127:15;30153:991;30437:3;30450:22;;;30422:19;;30507:22;;;30389:4;30587:6;30560:3;30545:19;;30389:4;30621:310;30635:6;30632:1;30629:13;30621:310;;;30710:6;30697:20;30730:37;30761:5;30730:37;:::i;:::-;-1:-1:-1;;;;;30792:31:79;30780:44;;30847:4;30906:15;;;;30871:12;;;;30820:1;30650:9;30621:310;;;-1:-1:-1;30982:4:79;30967:20;;30960:36;;;;-1:-1:-1;;;;;;;31070:15:79;;;31065:2;31050:18;;31043:43;31122:15;;31117:2;31102:18;;;31095:43;30948:3;30153:991;-1:-1:-1;;30153:991:79:o;32481:277::-;32548:6;32601:2;32589:9;32580:7;32576:23;32572:32;32569:52;;;32617:1;32614;32607:12;32569:52;32649:9;32643:16;32702:5;32695:13;32688:21;32681:5;32678:32;32668:60;;32724:1;32721;32714:12;33429:271;33612:6;33604;33599:3;33586:33;33568:3;33638:16;;33663:13;;;33638:16;33429:271;-1:-1:-1;33429:271:79:o;33705:994::-;34146:25;;;-1:-1:-1;;;;;34245:15:79;;;34240:2;34225:18;;34218:43;34292:2;34277:18;;34270:34;;;34335:2;34320:18;;34313:34;;;34133:3;34118:19;;;34356:54;34405:3;34390:19;;34382:6;34356:54;:::i;:::-;34441:3;34426:19;;34419:35;;;;34485:3;34470:19;;34463:35;;;;34529:3;34514:19;;34507:35;;;;34579:15;;;34573:3;34558:19;;34551:44;34632:15;;;34626:3;34611:19;;34604:44;34679:3;34664:19;34657:36;;;;33705:994;;-1:-1:-1;;;;;33705:994:79:o;35502:136::-;35541:3;35569:5;35559:39;;35578:18;;:::i;:::-;-1:-1:-1;;;35614:18:79;;35502:136::o;35976:359::-;36163:6;36158:3;36151:19;36133:3;36199:6;36193:13;36215:73;36281:6;36276:2;36271:3;36267:12;36262:2;36254:6;36250:15;36215:73;:::i;:::-;36308:16;;;;36326:2;36304:25;;35976:359;-1:-1:-1;;;35976:359:79:o;36340:184::-;36410:6;36463:2;36451:9;36442:7;36438:23;36434:32;36431:52;;;36479:1;36476;36469:12;36431:52;-1:-1:-1;36502:16:79;;36340:184;-1:-1:-1;36340:184:79:o;37064:448::-;37285:6;37274:9;37267:25;37328:2;37323;37312:9;37308:18;37301:30;37248:4;37354:44;37394:2;37383:9;37379:18;37371:6;37354:44;:::i;:::-;37446:9;37438:6;37434:22;37429:2;37418:9;37414:18;37407:50;37474:32;37499:6;37491;37474:32;:::i;:::-;37466:40;37064:448;-1:-1:-1;;;;;;37064:448:79:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ERC20s(uint256)": "18ec91b9",
    "VERSION()": "ffa1ad74",
    "addOwnerWithThreshold(address,uint256)": "0d582f13",
    "approveHash(bytes32)": "d4d9bdcd",
    "approvedHashes(address,bytes32)": "7d832974",
    "changeThreshold(uint256)": "694e80c3",
    "checkNSignatures(bytes32,bytes,bytes,uint256)": "12fb68e0",
    "checkSignatures(bytes32,bytes,bytes)": "934f3a11",
    "disableModule(address,address)": "e009cfde",
    "domainSeparator()": "f698da25",
    "domainVerifiers(address,bytes32)": "51cad5ee",
    "enableModule(address)": "610b5925",
    "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)": "e86637db",
    "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)": "6a761202",
    "execTransactionFromModule(address,uint256,bytes,uint8)": "468721a7",
    "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)": "5229073f",
    "getChainId()": "3408e470",
    "getModulesPaginated(address,uint256)": "cc2f8452",
    "getOwners()": "a0e67e2b",
    "getStorageAt(uint256,uint256)": "5624b25b",
    "getThreshold()": "e75235b8",
    "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)": "d8d11f78",
    "isModuleEnabled(address)": "2d9ad53d",
    "isOwner(address)": "2f54bf6e",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "nonce()": "affed0e0",
    "removeOwner(address,address,uint256)": "f8dc5dd9",
    "safeMethods(address,bytes4)": "0a3fe054",
    "setDomainVerifier(bytes32,address)": "3365582c",
    "setFallbackHandler(address)": "f08a0323",
    "setGuard(address)": "e19a9dd9",
    "setup(address[],uint256,address,bytes,address,address,uint256,address)": "b63e800d",
    "signedMessages(bytes32)": "5ae6bd37",
    "simulateAndRevert(address,bytes)": "b4faba09",
    "swapOwner(address,address,address)": "e318b52b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Safe\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract ISafeSignatureVerifier\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"AddedDomainVerifier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"AddedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Safe\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"method\",\"type\":\"bytes32\"}],\"name\":\"AddedSafeMethod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"approvedHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ApproveHash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Safe\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract ISafeSignatureVerifier\",\"name\":\"oldVerifier\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ISafeSignatureVerifier\",\"name\":\"newVerifier\",\"type\":\"address\"}],\"name\":\"ChangedDomainVerifier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"}],\"name\":\"ChangedFallbackHandler\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guard\",\"type\":\"address\"}],\"name\":\"ChangedGuard\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Safe\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"oldMethod\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newMethod\",\"type\":\"bytes32\"}],\"name\":\"ChangedSafeMethod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"ChangedThreshold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"DisabledModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"EnabledModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"ExecutionFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ExecutionFromModuleFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ExecutionFromModuleSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"ExecutionSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Safe\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"}],\"name\":\"RemovedDomainVerifier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"RemovedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Safe\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"RemovedSafeMethod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"initializer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fallbackHandler\",\"type\":\"address\"}],\"name\":\"SafeSetup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"SignMsg\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ERC20s\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"addOwnerWithThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashToApprove\",\"type\":\"bytes32\"}],\"name\":\"approveHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"approvedHashes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"changeThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"requiredSignatures\",\"type\":\"uint256\"}],\"name\":\"checkNSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"checkSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevModule\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"disableModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Safe\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"domainVerifiers\",\"outputs\":[{\"internalType\":\"contract ISafeSignatureVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"enableModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"safeTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"encodeTransactionData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"safeTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"execTransaction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromModuleReturnData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"start\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pageSize\",\"type\":\"uint256\"}],\"name\":\"getModulesPaginated\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"array\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"next\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"getStorageAt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"safeTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"getTransactionHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"isModuleEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magic\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"removeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Safe\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"safeMethods\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISafeSignatureVerifier\",\"name\":\"newVerifier\",\"type\":\"address\"}],\"name\":\"setDomainVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"}],\"name\":\"setFallbackHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guard\",\"type\":\"address\"}],\"name\":\"setGuard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"fallbackHandler\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"paymentReceiver\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"signedMessages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"calldataPayload\",\"type\":\"bytes\"}],\"name\":\"simulateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"swapOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addOwnerWithThreshold(address,uint256)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"_threshold\":\"New threshold.\",\"owner\":\"New owner address.\"}},\"approveHash(bytes32)\":{\"details\":\"This can be used with a pre-approved hash transaction signature.      IMPORTANT: The approved hash stays approved forever. There's no revocation mechanism, so it behaves similarly to ECDSA signatures\",\"params\":{\"hashToApprove\":\"The hash to mark as approved for signatures that are verified by this contract.\"}},\"changeThreshold(uint256)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"_threshold\":\"New threshold.\"}},\"checkNSignatures(bytes32,bytes,bytes,uint256)\":{\"details\":\"Since the EIP-1271 does an external call, be mindful of reentrancy attacks.\",\"params\":{\"data\":\"That should be signed (this is passed to an external validator contract)\",\"dataHash\":\"Hash of the data (could be either a message hash or transaction hash)\",\"requiredSignatures\":\"Amount of required valid signatures.\",\"signatures\":\"Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash.\"}},\"checkSignatures(bytes32,bytes,bytes)\":{\"params\":{\"data\":\"That should be signed (this is passed to an external validator contract)\",\"dataHash\":\"Hash of the data (could be either a message hash or transaction hash)\",\"signatures\":\"Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash.\"}},\"disableModule(address,address)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"module\":\"Module to be removed.\",\"prevModule\":\"Previous module in the modules linked list.\"}},\"domainSeparator()\":{\"details\":\"Returns the domain separator for this contract, as defined in the EIP-712 standard.\",\"returns\":{\"_0\":\"bytes32 The domain separator hash.\"}},\"enableModule(address)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"module\":\"Module to be whitelisted.\"}},\"encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)\":{\"params\":{\"_nonce\":\"Transaction nonce.\",\"baseGas\":\"Gas costs for that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)\",\"data\":\"Data payload.\",\"gasPrice\":\"Maximum gas price that should be used for this transaction.\",\"gasToken\":\"Token address (or 0 if ETH) that is used for the payment.\",\"operation\":\"Operation type.\",\"refundReceiver\":\"Address of receiver of gas payment (or 0 if tx.origin).\",\"safeTxGas\":\"Gas that should be used for the safe transaction.\",\"to\":\"Destination address.\",\"value\":\"Ether value.\"},\"returns\":{\"_0\":\"Transaction hash bytes.\"}},\"execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)\":{\"details\":\"The fees are always transferred, even if the user transaction fails.      This method doesn't perform any sanity check of the transaction, such as:      - if the contract at `to` address has code or not      - if the `gasToken` is a contract or not      It is the responsibility of the caller to perform such checks.\",\"params\":{\"baseGas\":\"Gas costs that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)\",\"data\":\"Data payload of Safe transaction.\",\"gasPrice\":\"Gas price that should be used for the payment calculation.\",\"gasToken\":\"Token address (or 0 if ETH) that is used for the payment.\",\"operation\":\"Operation type of Safe transaction.\",\"refundReceiver\":\"Address of receiver of gas payment (or 0 if tx.origin).\",\"safeTxGas\":\"Gas that should be used for the Safe transaction.\",\"signatures\":\"Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash.\",\"to\":\"Destination address of Safe transaction.\",\"value\":\"Ether value of Safe transaction.\"},\"returns\":{\"success\":\"Boolean indicating transaction's success.\"}},\"execTransactionFromModule(address,uint256,bytes,uint8)\":{\"details\":\"Function is virtual to allow overriding for L2 singleton to emit an event for indexing.\",\"params\":{\"data\":\"Data payload of module transaction.\",\"operation\":\"Operation type of module transaction.\",\"to\":\"Destination address of module transaction.\",\"value\":\"Ether value of module transaction.\"},\"returns\":{\"success\":\"Boolean flag indicating if the call succeeded.\"}},\"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)\":{\"params\":{\"data\":\"Data payload of module transaction.\",\"operation\":\"Operation type of module transaction.\",\"to\":\"Destination address of module transaction.\",\"value\":\"Ether value of module transaction.\"},\"returns\":{\"returnData\":\"Data returned by the call.\",\"success\":\"Boolean flag indicating if the call succeeded.\"}},\"getChainId()\":{\"returns\":{\"_0\":\"The ID of the current chain as a uint256.\"}},\"getModulesPaginated(address,uint256)\":{\"params\":{\"pageSize\":\"Maximum number of modules that should be returned. Has to be > 0\",\"start\":\"Start of the page. Has to be a module or start pointer (0x1 address)\"},\"returns\":{\"array\":\"Array of modules.\",\"next\":\"Start of the next page.\"}},\"getOwners()\":{\"returns\":{\"_0\":\"Array of Safe owners.\"}},\"getStorageAt(uint256,uint256)\":{\"params\":{\"length\":\"- the number of words (32 bytes) of data to read\",\"offset\":\"- the offset in the current contract's storage in words to start reading from\"},\"returns\":{\"_0\":\"the bytes that were read.\"}},\"getThreshold()\":{\"returns\":{\"_0\":\"Threshold number.\"}},\"getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)\":{\"params\":{\"_nonce\":\"Transaction nonce.\",\"baseGas\":\"Gas costs for data used to trigger the safe transaction.\",\"data\":\"Data payload.\",\"gasPrice\":\"Maximum gas price that should be used for this transaction.\",\"gasToken\":\"Token address (or 0 if ETH) that is used for the payment.\",\"operation\":\"Operation type.\",\"refundReceiver\":\"Address of receiver of gas payment (or 0 if tx.origin).\",\"safeTxGas\":\"Fas that should be used for the safe transaction.\",\"to\":\"Destination address.\",\"value\":\"Ether value.\"},\"returns\":{\"_0\":\"Transaction hash.\"}},\"isModuleEnabled(address)\":{\"returns\":{\"_0\":\"True if the module is enabled\"}},\"isOwner(address)\":{\"returns\":{\"_0\":\"Boolean if owner is an owner of the Safe.\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"The signature format is the same as the one used by the Safe contract\",\"params\":{\"_hash\":\"Hash of the data that is signed\",\"signature\":\"The signature to be verified\"},\"returns\":{\"magic\":\"Standardised ERC1271 return value\"}},\"removeOwner(address,address,uint256)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"_threshold\":\"New threshold.\",\"owner\":\"Owner address to be removed.\",\"prevOwner\":\"Owner that pointed to the owner to be removed in the linked list\"}},\"setDomainVerifier(bytes32,address)\":{\"params\":{\"domainSeparator\":\"The domainSeparator authorised for the `ISafeSignatureVerifier`\",\"newVerifier\":\"A contract that implements `ISafeSignatureVerifier`\"}},\"setFallbackHandler(address)\":{\"details\":\"Only fallback calls without value and with data will be forwarded.      This can only be done via a Safe transaction.      Cannot be set to the Safe itself.\",\"params\":{\"handler\":\"contract to handle fallback calls.\"}},\"setGuard(address)\":{\"details\":\"Set a guard that checks transactions before execution      This can only be done via a Safe transaction.      \\u26a0\\ufe0f IMPORTANT: Since a guard has full power to block Safe transaction execution,        a broken guard can cause a denial of service for the Safe. Make sure to carefully        audit the guard code and design recovery mechanisms.\",\"params\":{\"guard\":\"The address of the guard to be used or the 0 address to disable the guard\"}},\"setup(address[],uint256,address,bytes,address,address,uint256,address)\":{\"details\":\"This method can only be called once.      If a proxy was created without setting up, anyone can call setup and claim the proxy.\",\"params\":{\"_owners\":\"List of Safe owners.\",\"_threshold\":\"Number of required confirmations for a Safe transaction.\",\"data\":\"Data payload for optional delegate call.\",\"fallbackHandler\":\"Handler for fallback calls to this contract\",\"payment\":\"Value that should be paid\",\"paymentReceiver\":\"Address that should receive the payment (or 0 if tx.origin)\",\"paymentToken\":\"Token that should be used for the payment (0 is ETH)\",\"to\":\"Contract address for optional delegate call.\"}},\"simulateAndRevert(address,bytes)\":{\"details\":\"Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.\",\"params\":{\"calldataPayload\":\"Calldata that should be sent to the target contract (encoded method name and arguments).\",\"targetContract\":\"Address of the contract containing the code to execute.\"}},\"swapOwner(address,address,address)\":{\"details\":\"This can only be done via a Safe transaction.\",\"params\":{\"newOwner\":\"New owner address.\",\"oldOwner\":\"Owner address to be replaced.\",\"prevOwner\":\"Owner that pointed to the owner to be replaced in the linked list\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addOwnerWithThreshold(address,uint256)\":{\"notice\":\"Adds the owner `owner` to the Safe and updates the threshold to `_threshold`.\"},\"approveHash(bytes32)\":{\"notice\":\"Marks hash `hashToApprove` as approved.\"},\"changeThreshold(uint256)\":{\"notice\":\"Changes the threshold of the Safe to `_threshold`.\"},\"checkNSignatures(bytes32,bytes,bytes,uint256)\":{\"notice\":\"Checks whether the signature provided is valid for the provided data and hash. Reverts otherwise.\"},\"checkSignatures(bytes32,bytes,bytes)\":{\"notice\":\"Checks whether the signature provided is valid for the provided data and hash. Reverts otherwise.\"},\"disableModule(address,address)\":{\"notice\":\"Disables the module `module` for the Safe.\"},\"enableModule(address)\":{\"notice\":\"Enables the module `module` for the Safe.\"},\"encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)\":{\"notice\":\"Returns the pre-image of the transaction hash (see getTransactionHash).\"},\"execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)\":{\"notice\":\"Executes a `operation` {0: Call, 1: DelegateCall}} transaction to `to` with `value` (Native Currency)          and pays `gasPrice` * `gasLimit` in `gasToken` token to `refundReceiver`.\"},\"execTransactionFromModule(address,uint256,bytes,uint8)\":{\"notice\":\"Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token)\"},\"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)\":{\"notice\":\"Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token) and return data\"},\"getChainId()\":{\"notice\":\"Returns the ID of the chain the contract is currently deployed on.\"},\"getModulesPaginated(address,uint256)\":{\"notice\":\"Returns an array of modules.         If all entries fit into a single page, the next pointer will be 0x1.         If another page is present, next will be the last element of the returned array.\"},\"getOwners()\":{\"notice\":\"Returns a list of Safe owners.\"},\"getStorageAt(uint256,uint256)\":{\"notice\":\"Reads `length` bytes of storage in the currents contract\"},\"getThreshold()\":{\"notice\":\"Returns the number of required confirmations for a Safe transaction aka the threshold.\"},\"getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)\":{\"notice\":\"Returns transaction hash to be signed by owners.\"},\"isModuleEnabled(address)\":{\"notice\":\"Returns if an module is enabled\"},\"isOwner(address)\":{\"notice\":\"Returns if `owner` is an owner of the Safe.\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Implements ERC1271 interface for smart contract EIP-712 signature validation\"},\"removeOwner(address,address,uint256)\":{\"notice\":\"Removes the owner `owner` from the Safe and updates the threshold to `_threshold`.\"},\"setDomainVerifier(bytes32,address)\":{\"notice\":\"Setter for the signature muxer\"},\"setFallbackHandler(address)\":{\"notice\":\"Set Fallback Handler to `handler` for the Safe.\"},\"setGuard(address)\":{\"notice\":\"Set Transaction Guard `guard` for the Safe. Make sure you trust the guard.\"},\"setup(address[],uint256,address,bytes,address,address,uint256,address)\":{\"notice\":\"Sets an initial storage of the Safe contract.\"},\"swapOwner(address,address,address)\":{\"notice\":\"Replaces the owner `oldOwner` in the Safe with `newOwner`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SafeModdato.sol\":\"SafeModdato\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":balancer/=lib/composable-cow/lib/balancer/src/\",\":canonical-weth/=lib/composable-cow/lib/canonical-weth/src/\",\":composable-cow/=lib/composable-cow/\",\":composable-test/=lib/composable-cow/test/\",\":composable/=lib/composable-cow/src/\",\":cowprotocol/=lib/composable-cow/lib/cowprotocol/src/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":helpers/=lib/composable-cow/lib/balancer/src/lib/helpers/\",\":math/=lib/composable-cow/lib/balancer/src/lib/math/\",\":murky/=lib/composable-cow/lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":safe/=lib/composable-cow/lib/safe/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/safe-contracts/contracts/Safe.sol\":{\"keccak256\":\"0xbab2f7bec33283e349342e7b23f5191c678c64fe02065bac4f4f44fb3f5d2638\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f95884e85691d49ba3efb9b2a160466fed17377bfa92fc8bf5923f3c61e99119\",\"dweb:/ipfs/QmQjhP9RnB3Cj3DNpWLzWqqvRdKBya6Efx6xzmRrwLqjm9\"]},\"lib/safe-contracts/contracts/base/Executor.sol\":{\"keccak256\":\"0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c\",\"dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp\"]},\"lib/safe-contracts/contracts/base/FallbackManager.sol\":{\"keccak256\":\"0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e\",\"dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV\"]},\"lib/safe-contracts/contracts/base/GuardManager.sol\":{\"keccak256\":\"0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64\",\"dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx\"]},\"lib/safe-contracts/contracts/base/ModuleManager.sol\":{\"keccak256\":\"0xd71b0d56dce386fa6f67c51061face071b2c7b03ec535d68717e2538ec47113a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://30812896d9f57cae84a432c67fbb3007d566071ec203b2992f1c0f762722df0d\",\"dweb:/ipfs/QmRyJ3JbsUwDQxQDTrqDDX4qNtVu7XiW8cD8WP5kgNJGGz\"]},\"lib/safe-contracts/contracts/base/OwnerManager.sol\":{\"keccak256\":\"0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a\",\"dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34\",\"dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo\"]},\"lib/safe-contracts/contracts/common/NativeCurrencyPaymentFallback.sol\":{\"keccak256\":\"0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9\",\"dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g\"]},\"lib/safe-contracts/contracts/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3\",\"dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N\"]},\"lib/safe-contracts/contracts/common/SelfAuthorized.sol\":{\"keccak256\":\"0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3\",\"dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu\"]},\"lib/safe-contracts/contracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80\",\"dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4\"]},\"lib/safe-contracts/contracts/common/Singleton.sol\":{\"keccak256\":\"0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde\",\"dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo\"]},\"lib/safe-contracts/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e\",\"dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ\"]},\"lib/safe-contracts/contracts/external/SafeMath.sol\":{\"keccak256\":\"0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c\",\"dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x\"]},\"lib/safe-contracts/contracts/handler/HandlerContext.sol\":{\"keccak256\":\"0x3e105ebac003af9c8d34e3eed517ff0355d5f487e17478c85df0f225b04846f5\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://657bec347d746453883c461a3d9a2275bf2b99625dcaef0960e1c0276c3d56c4\",\"dweb:/ipfs/QmUGj8Tzs1CsmUf63LbTMK81EEGtYYnWKLGdHHtoYCd9CF\"]},\"lib/safe-contracts/contracts/handler/extensible/ExtensibleBase.sol\":{\"keccak256\":\"0xe5b71121b0020728158ee60756982e74809f9d77cb294a6d65930bff09d84d15\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fd7fd2702b31fc8569a9986a476dd9fe9aa76624d0da6d832547f624426925f9\",\"dweb:/ipfs/QmWjYGtW38Fnwvm8qFvoJYhz2nTuySGkHouwRF3eksd6Nh\"]},\"lib/safe-contracts/contracts/handler/extensible/MarshalLib.sol\":{\"keccak256\":\"0x36eacc47b1ce7697e679c1b5c0d3a86d8f46a0436b666f86e88df04765cde5c1\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://7097bfb174ea424ef55f9a5b55f4a9857f7368cdd3061888f5ffb3e29503f071\",\"dweb:/ipfs/QmRPvAvMdGRuh8AjePtamBGUU55p1tSP8ZHUUMfxWgi1ew\"]},\"lib/safe-contracts/contracts/handler/extensible/SignatureVerifierMuxer.sol\":{\"keccak256\":\"0x51e8dad81059527f9b6b6827d742a0fbc0960c66e364dd1e67c8f151970c6ee4\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://b368a4eb15d50487986db1543a5c786324a4d0de680a421d131e21c25459f666\",\"dweb:/ipfs/QmVca3J2JBEZtxW3uNMvYc9ugQH24CqantLnVzKcZwG71W\"]},\"lib/safe-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89\",\"dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38\"]},\"lib/safe-contracts/contracts/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25\",\"dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978\"]},\"src/Constants.sol\":{\"keccak256\":\"0xa4088c63928e534889f32a4df51c91ab194e6917d51a3681127630606b8a9960\",\"urls\":[\"bzz-raw://d2bf16cee04e9061e2e177a84108313438bd6c372d49fbcf4d21ea59236b5510\",\"dweb:/ipfs/QmRF16zqXRkU13ihkYfscraXzL7Mo7Qo53cHYPBx61hQk9\"]},\"src/SafeModdato.sol\":{\"keccak256\":\"0x885f92685fe0a142c5bc0fe37e187267f3f0fe49ea49e1549a6ec42fb6904603\",\"urls\":[\"bzz-raw://756178448ef1b47ccfbd522669c3716ef17f7c01ebd92f0133390173fc0ca4a7\",\"dweb:/ipfs/QmV3EbYQChLdcXn98QUeuyZ6PSTDcJaRsBGvHmpmQChTVC\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.22+commit.4fc1097e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "safe",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "domainSeparator",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "contract ISafeSignatureVerifier",
              "name": "verifier",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddedDomainVerifier",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddedOwner",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "safe",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "method",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddedSafeMethod",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "approvedHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ApproveHash",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "safe",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "domainSeparator",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "contract ISafeSignatureVerifier",
              "name": "oldVerifier",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract ISafeSignatureVerifier",
              "name": "newVerifier",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChangedDomainVerifier",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "handler",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ChangedFallbackHandler",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "guard",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ChangedGuard",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "safe",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "oldMethod",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "newMethod",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChangedSafeMethod",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChangedThreshold",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "module",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DisabledModule",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "module",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "EnabledModule",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "txHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "payment",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecutionFailure",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "module",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ExecutionFromModuleFailure",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "module",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ExecutionFromModuleSuccess",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "txHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "payment",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecutionSuccess",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "safe",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "domainSeparator",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemovedDomainVerifier",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RemovedOwner",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "safe",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemovedSafeMethod",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SafeReceived",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initiator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "initializer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "fallbackHandler",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SafeSetup",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgHash",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SignMsg",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ERC20s",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_threshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addOwnerWithThreshold"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "hashToApprove",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "approvedHashes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_threshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeThreshold"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signatures",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "requiredSignatures",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkNSignatures"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signatures",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkSignatures"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevModule",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "module",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableModule"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "domainVerifiers",
          "outputs": [
            {
              "internalType": "contract ISafeSignatureVerifier",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "module",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableModule"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "enum Enum.Operation",
              "name": "operation",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "safeTxGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "gasToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "refundReceiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encodeTransactionData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "enum Enum.Operation",
              "name": "operation",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "safeTxGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "gasToken",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "refundReceiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "signatures",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execTransaction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "enum Enum.Operation",
              "name": "operation",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execTransactionFromModule",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "enum Enum.Operation",
              "name": "operation",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execTransactionFromModuleReturnData",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getChainId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "start",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pageSize",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getModulesPaginated",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "array",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "next",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOwners",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStorageAt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getThreshold",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "enum Enum.Operation",
              "name": "operation",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "safeTxGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "gasToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "refundReceiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTransactionHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "module",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isModuleEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "magic",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_threshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeOwner"
        },
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "safeMethods",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "domainSeparator",
              "type": "bytes32"
            },
            {
              "internalType": "contract ISafeSignatureVerifier",
              "name": "newVerifier",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDomainVerifier"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "handler",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFallbackHandler"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "guard",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGuard"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "_threshold",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "fallbackHandler",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "paymentToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "payment",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "paymentReceiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setup"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signedMessages",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "targetContract",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "calldataPayload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "simulateAndRevert"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "oldOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swapOwner"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addOwnerWithThreshold(address,uint256)": {
            "details": "This can only be done via a Safe transaction.",
            "params": {
              "_threshold": "New threshold.",
              "owner": "New owner address."
            }
          },
          "approveHash(bytes32)": {
            "details": "This can be used with a pre-approved hash transaction signature.      IMPORTANT: The approved hash stays approved forever. There's no revocation mechanism, so it behaves similarly to ECDSA signatures",
            "params": {
              "hashToApprove": "The hash to mark as approved for signatures that are verified by this contract."
            }
          },
          "changeThreshold(uint256)": {
            "details": "This can only be done via a Safe transaction.",
            "params": {
              "_threshold": "New threshold."
            }
          },
          "checkNSignatures(bytes32,bytes,bytes,uint256)": {
            "details": "Since the EIP-1271 does an external call, be mindful of reentrancy attacks.",
            "params": {
              "data": "That should be signed (this is passed to an external validator contract)",
              "dataHash": "Hash of the data (could be either a message hash or transaction hash)",
              "requiredSignatures": "Amount of required valid signatures.",
              "signatures": "Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash."
            }
          },
          "checkSignatures(bytes32,bytes,bytes)": {
            "params": {
              "data": "That should be signed (this is passed to an external validator contract)",
              "dataHash": "Hash of the data (could be either a message hash or transaction hash)",
              "signatures": "Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash."
            }
          },
          "disableModule(address,address)": {
            "details": "This can only be done via a Safe transaction.",
            "params": {
              "module": "Module to be removed.",
              "prevModule": "Previous module in the modules linked list."
            }
          },
          "domainSeparator()": {
            "details": "Returns the domain separator for this contract, as defined in the EIP-712 standard.",
            "returns": {
              "_0": "bytes32 The domain separator hash."
            }
          },
          "enableModule(address)": {
            "details": "This can only be done via a Safe transaction.",
            "params": {
              "module": "Module to be whitelisted."
            }
          },
          "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)": {
            "params": {
              "_nonce": "Transaction nonce.",
              "baseGas": "Gas costs for that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)",
              "data": "Data payload.",
              "gasPrice": "Maximum gas price that should be used for this transaction.",
              "gasToken": "Token address (or 0 if ETH) that is used for the payment.",
              "operation": "Operation type.",
              "refundReceiver": "Address of receiver of gas payment (or 0 if tx.origin).",
              "safeTxGas": "Gas that should be used for the safe transaction.",
              "to": "Destination address.",
              "value": "Ether value."
            },
            "returns": {
              "_0": "Transaction hash bytes."
            }
          },
          "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)": {
            "details": "The fees are always transferred, even if the user transaction fails.      This method doesn't perform any sanity check of the transaction, such as:      - if the contract at `to` address has code or not      - if the `gasToken` is a contract or not      It is the responsibility of the caller to perform such checks.",
            "params": {
              "baseGas": "Gas costs that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)",
              "data": "Data payload of Safe transaction.",
              "gasPrice": "Gas price that should be used for the payment calculation.",
              "gasToken": "Token address (or 0 if ETH) that is used for the payment.",
              "operation": "Operation type of Safe transaction.",
              "refundReceiver": "Address of receiver of gas payment (or 0 if tx.origin).",
              "safeTxGas": "Gas that should be used for the Safe transaction.",
              "signatures": "Signature data that should be verified.                   Can be packed ECDSA signature ({bytes32 r}{bytes32 s}{uint8 v}), contract signature (EIP-1271) or approved hash.",
              "to": "Destination address of Safe transaction.",
              "value": "Ether value of Safe transaction."
            },
            "returns": {
              "success": "Boolean indicating transaction's success."
            }
          },
          "execTransactionFromModule(address,uint256,bytes,uint8)": {
            "details": "Function is virtual to allow overriding for L2 singleton to emit an event for indexing.",
            "params": {
              "data": "Data payload of module transaction.",
              "operation": "Operation type of module transaction.",
              "to": "Destination address of module transaction.",
              "value": "Ether value of module transaction."
            },
            "returns": {
              "success": "Boolean flag indicating if the call succeeded."
            }
          },
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)": {
            "params": {
              "data": "Data payload of module transaction.",
              "operation": "Operation type of module transaction.",
              "to": "Destination address of module transaction.",
              "value": "Ether value of module transaction."
            },
            "returns": {
              "returnData": "Data returned by the call.",
              "success": "Boolean flag indicating if the call succeeded."
            }
          },
          "getChainId()": {
            "returns": {
              "_0": "The ID of the current chain as a uint256."
            }
          },
          "getModulesPaginated(address,uint256)": {
            "params": {
              "pageSize": "Maximum number of modules that should be returned. Has to be > 0",
              "start": "Start of the page. Has to be a module or start pointer (0x1 address)"
            },
            "returns": {
              "array": "Array of modules.",
              "next": "Start of the next page."
            }
          },
          "getOwners()": {
            "returns": {
              "_0": "Array of Safe owners."
            }
          },
          "getStorageAt(uint256,uint256)": {
            "params": {
              "length": "- the number of words (32 bytes) of data to read",
              "offset": "- the offset in the current contract's storage in words to start reading from"
            },
            "returns": {
              "_0": "the bytes that were read."
            }
          },
          "getThreshold()": {
            "returns": {
              "_0": "Threshold number."
            }
          },
          "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)": {
            "params": {
              "_nonce": "Transaction nonce.",
              "baseGas": "Gas costs for data used to trigger the safe transaction.",
              "data": "Data payload.",
              "gasPrice": "Maximum gas price that should be used for this transaction.",
              "gasToken": "Token address (or 0 if ETH) that is used for the payment.",
              "operation": "Operation type.",
              "refundReceiver": "Address of receiver of gas payment (or 0 if tx.origin).",
              "safeTxGas": "Fas that should be used for the safe transaction.",
              "to": "Destination address.",
              "value": "Ether value."
            },
            "returns": {
              "_0": "Transaction hash."
            }
          },
          "isModuleEnabled(address)": {
            "returns": {
              "_0": "True if the module is enabled"
            }
          },
          "isOwner(address)": {
            "returns": {
              "_0": "Boolean if owner is an owner of the Safe."
            }
          },
          "isValidSignature(bytes32,bytes)": {
            "details": "The signature format is the same as the one used by the Safe contract",
            "params": {
              "_hash": "Hash of the data that is signed",
              "signature": "The signature to be verified"
            },
            "returns": {
              "magic": "Standardised ERC1271 return value"
            }
          },
          "removeOwner(address,address,uint256)": {
            "details": "This can only be done via a Safe transaction.",
            "params": {
              "_threshold": "New threshold.",
              "owner": "Owner address to be removed.",
              "prevOwner": "Owner that pointed to the owner to be removed in the linked list"
            }
          },
          "setDomainVerifier(bytes32,address)": {
            "params": {
              "domainSeparator": "The domainSeparator authorised for the `ISafeSignatureVerifier`",
              "newVerifier": "A contract that implements `ISafeSignatureVerifier`"
            }
          },
          "setFallbackHandler(address)": {
            "details": "Only fallback calls without value and with data will be forwarded.      This can only be done via a Safe transaction.      Cannot be set to the Safe itself.",
            "params": {
              "handler": "contract to handle fallback calls."
            }
          },
          "setGuard(address)": {
            "details": "Set a guard that checks transactions before execution      This can only be done via a Safe transaction.      ⚠️ IMPORTANT: Since a guard has full power to block Safe transaction execution,        a broken guard can cause a denial of service for the Safe. Make sure to carefully        audit the guard code and design recovery mechanisms.",
            "params": {
              "guard": "The address of the guard to be used or the 0 address to disable the guard"
            }
          },
          "setup(address[],uint256,address,bytes,address,address,uint256,address)": {
            "details": "This method can only be called once.      If a proxy was created without setting up, anyone can call setup and claim the proxy.",
            "params": {
              "_owners": "List of Safe owners.",
              "_threshold": "Number of required confirmations for a Safe transaction.",
              "data": "Data payload for optional delegate call.",
              "fallbackHandler": "Handler for fallback calls to this contract",
              "payment": "Value that should be paid",
              "paymentReceiver": "Address that should receive the payment (or 0 if tx.origin)",
              "paymentToken": "Token that should be used for the payment (0 is ETH)",
              "to": "Contract address for optional delegate call."
            }
          },
          "simulateAndRevert(address,bytes)": {
            "details": "Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.",
            "params": {
              "calldataPayload": "Calldata that should be sent to the target contract (encoded method name and arguments).",
              "targetContract": "Address of the contract containing the code to execute."
            }
          },
          "swapOwner(address,address,address)": {
            "details": "This can only be done via a Safe transaction.",
            "params": {
              "newOwner": "New owner address.",
              "oldOwner": "Owner address to be replaced.",
              "prevOwner": "Owner that pointed to the owner to be replaced in the linked list"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addOwnerWithThreshold(address,uint256)": {
            "notice": "Adds the owner `owner` to the Safe and updates the threshold to `_threshold`."
          },
          "approveHash(bytes32)": {
            "notice": "Marks hash `hashToApprove` as approved."
          },
          "changeThreshold(uint256)": {
            "notice": "Changes the threshold of the Safe to `_threshold`."
          },
          "checkNSignatures(bytes32,bytes,bytes,uint256)": {
            "notice": "Checks whether the signature provided is valid for the provided data and hash. Reverts otherwise."
          },
          "checkSignatures(bytes32,bytes,bytes)": {
            "notice": "Checks whether the signature provided is valid for the provided data and hash. Reverts otherwise."
          },
          "disableModule(address,address)": {
            "notice": "Disables the module `module` for the Safe."
          },
          "enableModule(address)": {
            "notice": "Enables the module `module` for the Safe."
          },
          "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)": {
            "notice": "Returns the pre-image of the transaction hash (see getTransactionHash)."
          },
          "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)": {
            "notice": "Executes a `operation` {0: Call, 1: DelegateCall}} transaction to `to` with `value` (Native Currency)          and pays `gasPrice` * `gasLimit` in `gasToken` token to `refundReceiver`."
          },
          "execTransactionFromModule(address,uint256,bytes,uint8)": {
            "notice": "Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token)"
          },
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)": {
            "notice": "Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token) and return data"
          },
          "getChainId()": {
            "notice": "Returns the ID of the chain the contract is currently deployed on."
          },
          "getModulesPaginated(address,uint256)": {
            "notice": "Returns an array of modules.         If all entries fit into a single page, the next pointer will be 0x1.         If another page is present, next will be the last element of the returned array."
          },
          "getOwners()": {
            "notice": "Returns a list of Safe owners."
          },
          "getStorageAt(uint256,uint256)": {
            "notice": "Reads `length` bytes of storage in the currents contract"
          },
          "getThreshold()": {
            "notice": "Returns the number of required confirmations for a Safe transaction aka the threshold."
          },
          "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)": {
            "notice": "Returns transaction hash to be signed by owners."
          },
          "isModuleEnabled(address)": {
            "notice": "Returns if an module is enabled"
          },
          "isOwner(address)": {
            "notice": "Returns if `owner` is an owner of the Safe."
          },
          "isValidSignature(bytes32,bytes)": {
            "notice": "Implements ERC1271 interface for smart contract EIP-712 signature validation"
          },
          "removeOwner(address,address,uint256)": {
            "notice": "Removes the owner `owner` from the Safe and updates the threshold to `_threshold`."
          },
          "setDomainVerifier(bytes32,address)": {
            "notice": "Setter for the signature muxer"
          },
          "setFallbackHandler(address)": {
            "notice": "Set Fallback Handler to `handler` for the Safe."
          },
          "setGuard(address)": {
            "notice": "Set Transaction Guard `guard` for the Safe. Make sure you trust the guard."
          },
          "setup(address[],uint256,address,bytes,address,address,uint256,address)": {
            "notice": "Sets an initial storage of the Safe contract."
          },
          "swapOwner(address,address,address)": {
            "notice": "Replaces the owner `oldOwner` in the Safe with `newOwner`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "balancer/=lib/composable-cow/lib/balancer/src/",
        "canonical-weth/=lib/composable-cow/lib/canonical-weth/src/",
        "composable-cow/=lib/composable-cow/",
        "composable-test/=lib/composable-cow/test/",
        "composable/=lib/composable-cow/src/",
        "cowprotocol/=lib/composable-cow/lib/cowprotocol/src/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "helpers/=lib/composable-cow/lib/balancer/src/lib/helpers/",
        "math/=lib/composable-cow/lib/balancer/src/lib/math/",
        "murky/=lib/composable-cow/lib/murky/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "safe/=lib/composable-cow/lib/safe/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SafeModdato.sol": "SafeModdato"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/safe-contracts/contracts/Safe.sol": {
        "keccak256": "0xbab2f7bec33283e349342e7b23f5191c678c64fe02065bac4f4f44fb3f5d2638",
        "urls": [
          "bzz-raw://f95884e85691d49ba3efb9b2a160466fed17377bfa92fc8bf5923f3c61e99119",
          "dweb:/ipfs/QmQjhP9RnB3Cj3DNpWLzWqqvRdKBya6Efx6xzmRrwLqjm9"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/Executor.sol": {
        "keccak256": "0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a",
        "urls": [
          "bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c",
          "dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/FallbackManager.sol": {
        "keccak256": "0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165",
        "urls": [
          "bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e",
          "dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/GuardManager.sol": {
        "keccak256": "0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d",
        "urls": [
          "bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64",
          "dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/ModuleManager.sol": {
        "keccak256": "0xd71b0d56dce386fa6f67c51061face071b2c7b03ec535d68717e2538ec47113a",
        "urls": [
          "bzz-raw://30812896d9f57cae84a432c67fbb3007d566071ec203b2992f1c0f762722df0d",
          "dweb:/ipfs/QmRyJ3JbsUwDQxQDTrqDDX4qNtVu7XiW8cD8WP5kgNJGGz"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/OwnerManager.sol": {
        "keccak256": "0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c",
        "urls": [
          "bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a",
          "dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453",
        "urls": [
          "bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34",
          "dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/NativeCurrencyPaymentFallback.sol": {
        "keccak256": "0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba",
        "urls": [
          "bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9",
          "dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SecuredTokenTransfer.sol": {
        "keccak256": "0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05",
        "urls": [
          "bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3",
          "dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SelfAuthorized.sol": {
        "keccak256": "0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13",
        "urls": [
          "bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3",
          "dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SignatureDecoder.sol": {
        "keccak256": "0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c",
        "urls": [
          "bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80",
          "dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/Singleton.sol": {
        "keccak256": "0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50",
        "urls": [
          "bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde",
          "dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/StorageAccessible.sol": {
        "keccak256": "0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e",
        "urls": [
          "bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e",
          "dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/external/SafeMath.sol": {
        "keccak256": "0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89",
        "urls": [
          "bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c",
          "dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/handler/HandlerContext.sol": {
        "keccak256": "0x3e105ebac003af9c8d34e3eed517ff0355d5f487e17478c85df0f225b04846f5",
        "urls": [
          "bzz-raw://657bec347d746453883c461a3d9a2275bf2b99625dcaef0960e1c0276c3d56c4",
          "dweb:/ipfs/QmUGj8Tzs1CsmUf63LbTMK81EEGtYYnWKLGdHHtoYCd9CF"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/handler/extensible/ExtensibleBase.sol": {
        "keccak256": "0xe5b71121b0020728158ee60756982e74809f9d77cb294a6d65930bff09d84d15",
        "urls": [
          "bzz-raw://fd7fd2702b31fc8569a9986a476dd9fe9aa76624d0da6d832547f624426925f9",
          "dweb:/ipfs/QmWjYGtW38Fnwvm8qFvoJYhz2nTuySGkHouwRF3eksd6Nh"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/handler/extensible/MarshalLib.sol": {
        "keccak256": "0x36eacc47b1ce7697e679c1b5c0d3a86d8f46a0436b666f86e88df04765cde5c1",
        "urls": [
          "bzz-raw://7097bfb174ea424ef55f9a5b55f4a9857f7368cdd3061888f5ffb3e29503f071",
          "dweb:/ipfs/QmRPvAvMdGRuh8AjePtamBGUU55p1tSP8ZHUUMfxWgi1ew"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/handler/extensible/SignatureVerifierMuxer.sol": {
        "keccak256": "0x51e8dad81059527f9b6b6827d742a0fbc0960c66e364dd1e67c8f151970c6ee4",
        "urls": [
          "bzz-raw://b368a4eb15d50487986db1543a5c786324a4d0de680a421d131e21c25459f666",
          "dweb:/ipfs/QmVca3J2JBEZtxW3uNMvYc9ugQH24CqantLnVzKcZwG71W"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb",
        "urls": [
          "bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89",
          "dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/ISignatureValidator.sol": {
        "keccak256": "0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457",
        "urls": [
          "bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25",
          "dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/Constants.sol": {
        "keccak256": "0xa4088c63928e534889f32a4df51c91ab194e6917d51a3681127630606b8a9960",
        "urls": [
          "bzz-raw://d2bf16cee04e9061e2e177a84108313438bd6c372d49fbcf4d21ea59236b5510",
          "dweb:/ipfs/QmRF16zqXRkU13ihkYfscraXzL7Mo7Qo53cHYPBx61hQk9"
        ],
        "license": null
      },
      "src/SafeModdato.sol": {
        "keccak256": "0x885f92685fe0a142c5bc0fe37e187267f3f0fe49ea49e1549a6ec42fb6904603",
        "urls": [
          "bzz-raw://756178448ef1b47ccfbd522669c3716ef17f7c01ebd92f0133390173fc0ca4a7",
          "dweb:/ipfs/QmV3EbYQChLdcXn98QUeuyZ6PSTDcJaRsBGvHmpmQChTVC"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SafeModdato.sol",
    "id": 49517,
    "exportedSymbols": {
      "BAT": [48764],
      "COMPOSABLE_COW": [48788],
      "COW": [48740],
      "DAI": [48752],
      "DOMAIN_SEPARATOR": [48791],
      "EXTENSIBLE_FALLBACK_HANDLER": [48782],
      "GNO": [48734],
      "IERC20": [44095],
      "ISafeSignatureVerifier": [48253],
      "POLY": [48770],
      "Safe": [46404],
      "SafeModdato": [49516],
      "SignatureVerifierMuxer": [48622],
      "USDC": [48746],
      "WETH": [48776],
      "ZRX": [48758]
    },
    "nodeType": "SourceUnit",
    "src": "0:1202:78",
    "nodes": [
      {
        "id": 49449,
        "nodeType": "PragmaDirective",
        "src": "0:23:78",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".0"]
      },
      {
        "id": 49451,
        "nodeType": "ImportDirective",
        "src": "24:45:78",
        "nodes": [],
        "absolutePath": "lib/safe-contracts/contracts/Safe.sol",
        "file": "safe-contracts/Safe.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49517,
        "sourceUnit": 46405,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49450,
              "name": "Safe",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46404,
              "src": "32:4:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49453,
        "nodeType": "ImportDirective",
        "src": "70:69:78",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49517,
        "sourceUnit": 44018,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49452,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44095,
              "src": "78:6:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49456,
        "nodeType": "ImportDirective",
        "src": "140:124:78",
        "nodes": [],
        "absolutePath": "lib/safe-contracts/contracts/handler/extensible/SignatureVerifierMuxer.sol",
        "file": "safe-contracts/handler/extensible/SignatureVerifierMuxer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49517,
        "sourceUnit": 48656,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49454,
              "name": "ISafeSignatureVerifier",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48253,
              "src": "148:22:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 49455,
              "name": "SignatureVerifierMuxer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48622,
              "src": "172:22:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49457,
        "nodeType": "ImportDirective",
        "src": "265:25:78",
        "nodes": [],
        "absolutePath": "src/Constants.sol",
        "file": "./Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49517,
        "sourceUnit": 48792,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49516,
        "nodeType": "ContractDefinition",
        "src": "292:909:78",
        "nodes": [
          {
            "id": 49473,
            "nodeType": "VariableDeclaration",
            "src": "712:139:78",
            "nodes": [],
            "constant": false,
            "functionSelector": "18ec91b9",
            "mutability": "mutable",
            "name": "ERC20s",
            "nameLocation": "729:6:78",
            "scope": 49516,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 49462,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "712:7:78",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 49463,
              "nodeType": "ArrayTypeName",
              "src": "712:9:78",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": {
              "components": [
                {
                  "id": 49464,
                  "name": "GNO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 48734,
                  "src": "748:3:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 49465,
                  "name": "COW",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 48740,
                  "src": "761:3:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 49466,
                  "name": "USDC",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 48746,
                  "src": "774:4:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 49467,
                  "name": "DAI",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 48752,
                  "src": "788:3:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 49468,
                  "name": "ZRX",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 48758,
                  "src": "801:3:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 49469,
                  "name": "BAT",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 48764,
                  "src": "814:3:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 49470,
                  "name": "POLY",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 48770,
                  "src": "827:4:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 49471,
                  "name": "WETH",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 48776,
                  "src": "841:4:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "id": 49472,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "738:113:78",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$8_memory_ptr",
                "typeString": "address[8] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49515,
            "nodeType": "FunctionDefinition",
            "src": "862:337:78",
            "nodes": [],
            "body": {
              "id": 49514,
              "nodeType": "Block",
              "src": "876:323:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49477,
                        "name": "EXTENSIBLE_FALLBACK_HANDLER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48782,
                        "src": "905:27:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 49476,
                      "name": "setFallbackHandler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46489,
                      "src": "886:18:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 49478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "886:47:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49479,
                  "nodeType": "ExpressionStatement",
                  "src": "886:47:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49481,
                        "name": "DOMAIN_SEPARATOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48791,
                        "src": "975:16:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 49483,
                            "name": "COMPOSABLE_COW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48788,
                            "src": "1028:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49482,
                          "name": "ISafeSignatureVerifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48253,
                          "src": "1005:22:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISafeSignatureVerifier_$48253_$",
                            "typeString": "type(contract ISafeSignatureVerifier)"
                          }
                        },
                        "id": 49484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1005:38:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafeSignatureVerifier_$48253",
                          "typeString": "contract ISafeSignatureVerifier"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_ISafeSignatureVerifier_$48253",
                          "typeString": "contract ISafeSignatureVerifier"
                        }
                      ],
                      "id": 49480,
                      "name": "setDomainVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48425,
                      "src": "944:17:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_contract$_ISafeSignatureVerifier_$48253_$returns$__$",
                        "typeString": "function (bytes32,contract ISafeSignatureVerifier)"
                      }
                    },
                    "id": 49485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "944:109:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49486,
                  "nodeType": "ExpressionStatement",
                  "src": "944:109:78"
                },
                {
                  "body": {
                    "id": 49512,
                    "nodeType": "Block",
                    "src": "1108:85:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 49504,
                              "name": "COMPOSABLE_COW",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48788,
                              "src": "1148:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 49507,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1169:7:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 49506,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1169:7:78",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 49505,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "1164:4:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 49508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1164:13:78",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 49509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1178:3:78",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "1164:17:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 49499,
                                    "name": "ERC20s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49473,
                                    "src": "1129:6:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 49501,
                                  "indexExpression": {
                                    "id": 49500,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49488,
                                    "src": "1136:1:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1129:9:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 49498,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44095,
                                "src": "1122:6:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$44095_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 49502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1122:17:78",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$44095",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 49503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1140:7:78",
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44082,
                            "src": "1122:25:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 49510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1122:60:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 49511,
                        "nodeType": "ExpressionStatement",
                        "src": "1122:60:78"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49491,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49488,
                      "src": "1084:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 49492,
                        "name": "ERC20s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49473,
                        "src": "1088:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 49493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1095:6:78",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1088:13:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1084:17:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49513,
                  "initializationExpression": {
                    "assignments": [49488],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 49488,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1077:1:78",
                        "nodeType": "VariableDeclaration",
                        "scope": 49513,
                        "src": "1069:9:78",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 49487,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1069:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 49490,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 49489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1081:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1069:13:78"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 49496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1103:3:78",
                      "subExpression": {
                        "id": 49495,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49488,
                        "src": "1103:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 49497,
                    "nodeType": "ExpressionStatement",
                    "src": "1103:3:78"
                  },
                  "nodeType": "ForStatement",
                  "src": "1064:129:78"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 49474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "873:2:78"
            },
            "returnParameters": {
              "id": 49475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "876:0:78"
            },
            "scope": 49516,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 49458,
              "name": "Safe",
              "nameLocations": ["316:4:78"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46404,
              "src": "316:4:78"
            },
            "id": 49459,
            "nodeType": "InheritanceSpecifier",
            "src": "316:4:78"
          },
          {
            "baseName": {
              "id": 49460,
              "name": "SignatureVerifierMuxer",
              "nameLocations": ["322:22:78"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48622,
              "src": "322:22:78"
            },
            "id": 49461,
            "nodeType": "InheritanceSpecifier",
            "src": "322:22:78"
          }
        ],
        "canonicalName": "SafeModdato",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          49516, 48622, 48273, 48230, 48110, 47861, 46404, 46628, 47724, 46499,
          48673, 47623, 47669, 47567, 47054, 46437, 47649, 47596, 47675
        ],
        "name": "SafeModdato",
        "nameLocation": "301:11:78",
        "scope": 49517,
        "usedErrors": [],
        "usedEvents": [
          45548, 45554, 45558, 45564, 45570, 46447, 46573, 46642, 46646, 46650,
          46654, 47064, 47068, 47072, 47583, 47911, 47922, 47929, 48305, 48318,
          48325
        ]
      }
    ]
  },
  "id": 78
}
